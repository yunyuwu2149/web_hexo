{"title":"C语言笔记（3）变量及常量篇","uid":"73b463ad631cb31a8944de1994830c80","slug":"C语言笔记（3）变量及常量篇","date":"2023-04-26T01:54:18.000Z","updated":"2023-04-26T06:19:36.348Z","comments":true,"path":"api/articles/C语言笔记（3）变量及常量篇.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/02/1888138218.jpg","content":"<h1 id=\"一、变量\"><a href=\"#一、变量\" class=\"headerlink\" title=\"一、变量\"></a>一、变量</h1><h2 id=\"1-变量的概念\"><a href=\"#1-变量的概念\" class=\"headerlink\" title=\"1. 变量的概念\"></a>1. 变量的概念</h2><p>变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分<strong>变量名</strong>和<strong>变量值</strong>是两个不同的概念。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>现实生活中我们会找一个小箱子来存放物品，一来显得不那么凌乱，二来方便以后找到。计算机也是这个道理，我们需要先在内存中找一块区域，规定用它来存放整数，并起一个好记的名字，方便以后查找。这块区域就是“小箱子”，我们可以把整数放进去了。</p></blockquote>\n<h2 id=\"2-变量名（标识符）命名规范\"><a href=\"#2-变量名（标识符）命名规范\" class=\"headerlink\" title=\"2. 变量名（标识符）命名规范\"></a>2. 变量名（标识符）命名规范</h2><p>变量名：变量名在 C 语言里面属于标识符（identifier），命名有严格的规范。</p>\n<ul>\n<li>只能由字母（包括大写和小写）、数字和下划线（_）组成。</li>\n<li>不能以数字开头。</li>\n<li>变量名不能包含除 _ 以外的任何特殊字符，如：%、# 、逗号、空格等</li>\n<li>长度不能超过63个字符。</li>\n<li>不可以使用<a href=\"https://blog.yunyuwu.cn/c-programming/259.html#toc_2\">32个保留关键字</a></li>\n</ul>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F; 无效变量名\n$zj j**p 2cat Hot-tab tax rate don&#39;t\n&#x2F;&#x2F; 有效变量名\nRadiu salary AotuGun Knotted_Wool H301</code></pre>\n\n<p>变量名严格区分大小写，start、Start、START是不同的变量名。</p>\n<hr>\n<h2 id=\"3-声明变量\"><a href=\"#3-声明变量\" class=\"headerlink\" title=\"3. 声明变量\"></a>3. 声明变量</h2><p><code>C语言</code>的变量，必须先声明后使用。如果一个变量没有声明，就直接使用，会报错。<br>每个变量都有自己的类型（type）。声明变量时，必须把变量的类型告诉编译器。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int one;</code></pre>\n\n<p>此处声明了变量<code>one</code>，并且指定了他的类型为<code>int</code>（整数）<br>如果在有多个同类型变量时，我们可以同时声明</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int one, two;\n&#x2F;&#x2F; 等于\nint one;\nint two;</code></pre>\n\n<p><strong>注意:</strong></p>\n<ul>\n<li>声明变量的语句必须以分号结尾。</li>\n<li>一旦声明，变量的类型就不能在运行时修改。</li>\n</ul>\n<h2 id=\"4-变量赋值\"><a href=\"#4-变量赋值\" class=\"headerlink\" title=\"4. 变量赋值\"></a>4. 变量赋值</h2><p><code>C语言</code>会在变量声明时，就为它分配内存空间，但是不会清除内存里面原来的值。这导致声明变量以后，变量会是一个随机的值。所以，变量一定要赋值以后才能使用。</p>\n<p>赋值操作通过赋值运算符<code>=</code>完成。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F; 声明了变量num\nint num;\n&#x2F;&#x2F; 给变量num赋值888\nnum &#x3D; 888;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>变量的值应该与类型一致，不应该赋予不是同一个类型的值，比如num的类型是整数，就不应该赋值为小数。虽然 C语言会自动转换类型，但是应该避免赋值运算符两侧的类型不一致。</p></blockquote>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#x2F;&#x2F; 在声明变量的同时赋值给num\nint num &#x3D;888;</code></pre>\n\n<p>当拥有多个同类型变量时，可以在一行写多个</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int x &#x3D; 1, y &#x3D; 2;</code></pre>\n\n<p>赋值表达式有返回值，等于<code>=</code>右边的值。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int x, y;\n\nx &#x3D; 1;\ny &#x3D; (x &#x3D; 2 * x);</code></pre>\n\n<p>上面代码中，变量<code>y</code>的值就是赋值表达式<code>（x = 2 * x）</code>的返回值<code>2</code><br>由于赋值表达式有返回值，所以 C 语言可以写出多重赋值表达式。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int x, y, z, m, n;\n\nx &#x3D; y &#x3D; z &#x3D; m &#x3D; n &#x3D; 3;</code></pre>\n\n<p>上面的代码，一次为多个变量赋值。赋值运算符是从右到左执行，所以先为<code>n</code>赋值，然后依次为<code>m、z、y</code>和<code>x</code>赋值。</p>\n<p>C 语言有左值（left value）和右值（right value）的概念。左值是可以放在赋值运算符左边的值，一般是变量；右值是可以放在赋值运算符右边的值，一般是一个具体的值。这是为了强调有些值不能放在赋值运算符的左边，比如x &#x3D; 1是合法的表达式，但是1 &#x3D; x就会报错。</p>\n<hr>\n<h2 id=\"5-变量的作用域\"><a href=\"#5-变量的作用域\" class=\"headerlink\" title=\"5. 变量的作用域\"></a>5. 变量的作用域</h2><p><strong>作用域（scope）</strong>指的是变量生效的范围。C语言的变量作用域主要有两种：<strong>文件作用域（file scope）</strong>和<strong>块作用域（block scope）。</strong><br><strong>文件作用域（file scope）</strong>指的是，在源码文件顶层声明的变量，从声明的位置到文件结束都有效。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int a &#x3D; 1;\n\nint main(void) &#123;\nprintf(&quot;%i\\n&quot;, a);\n&#125;</code></pre>\n\n<p>上面示例中，变量<code>a</code>是在文件的顶层声明的，<strong>从声明位置开始的整个当前文件都是它的作用域</strong>，可以在这个范围的任何地方读取这个变量，比如函数main()内部就可以读取这个变量。</p>\n<p>块作用域（block scope）指的是由大括号<code>&#123;&#125;</code>组成的代码块，它形成一个单独的作用域。凡是在块作用域里面声明的变量，只在当前代码块有效，代码块外部不可见。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">int a &#x3D; 12;\n\nif (a &#x3D;&#x3D; 12) &#123;\n  int b &#x3D; 99;\n  printf(&quot;%d %d\\n&quot;, a, b);  &#x2F;&#x2F; 12 99\n&#125;\n\nprintf(&quot;%d\\n&quot;, a);  &#x2F;&#x2F; 12\nprintf(&quot;%d\\n&quot;, b);  &#x2F;&#x2F; 运行报错</code></pre>\n\n<p>上面例子中，变量<code>b</code>是在<code>if</code>代码块里面声明的，所以对于大括号外面的代码，这个变量是不存在的，所以运行会报错。</p>\n<p>代码块可以嵌套，即代码块内部还有代码块，这时就形成了多层的块作用域。它的规则是：<strong>内层代码块可以使用外层声明的变量，但外层不可以使用内层声明的变量。如果内层的变量与外层同名，那么会在当前作用域覆盖外层变量。</strong></p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">&#123;\n  int i &#x3D; 10;\n\n  &#123;\n    int i &#x3D; 20;\n    printf(&quot;%d\\n&quot;, i);  &#x2F;&#x2F; 20\n  &#125;\n\n  printf(&quot;%d\\n&quot;, i);  &#x2F;&#x2F; 10\n&#125;</code></pre>\n\n<p>上面示例中，内层和外层都有一个变量<code>i</code>，每个作用域都会优先使用当前作用域声明的<code>i</code>。</p>\n<p>最常见的块作用域就是函数，函数内部声明的变量，对于函数外部是不可见的。<code>for</code>循环也是一个块作用域，循环变量只对循环体内部可见，外部是不可见的。</p>\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">for (int i &#x3D; 0; i &lt; 10; i++)\n  printf(&quot;%d\\n&quot;, i);\n\nprintf(&quot;%d\\n&quot;, i); &#x2F;&#x2F; 报错</code></pre>\n\n<p>上面示例中，<code>for</code>循环省略了大括号，<strong>但依然是一个块作用域</strong>，在外部读取循环变量<code>i</code>，编译器就会报错。</p>\n<hr>\n<h1 id=\"二、常量\"><a href=\"#二、常量\" class=\"headerlink\" title=\"二、常量\"></a>二、常量</h1><h2 id=\"1-常量的概念\"><a href=\"#1-常量的概念\" class=\"headerlink\" title=\"1. 常量的概念\"></a>1. 常量的概念</h2><p><strong>常量</strong>又称<strong>字面量</strong>，是固定值，在程序运行过程中，其值不能被改变称为：<strong>常量</strong>。如：6、3.14、‘a’、“abc123”等。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>常量</strong> 就像是常规的变量，只不过<strong>常量的值</strong>在定义后<strong>不能进行修改</strong>。</p></blockquote>\n<h2 id=\"2-常量的分类\"><a href=\"#2-常量的分类\" class=\"headerlink\" title=\"2. 常量的分类\"></a>2. 常量的分类</h2><p>根据常量的取值对象，C语言将常量分为一下五种类型。</p>\n<ol>\n<li><p>整型常量，例：16、0、-3等</p>\n</li>\n<li><p>实型常量，例：3.14159、-3.6等</p>\n</li>\n<li><p>字符常量，例：<code>A</code>，<code>5</code>，<code>#</code>等</p>\n</li>\n<li><p>符号常量，例：<code>#define PI 3.14159</code>中的<code>PI</code>等</p>\n</li>\n<li><p>字符串常量，例：<code>ABC</code>、<code>6estghj</code>，<code>45+53</code>等</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>常量的类型可以通过书写形式来辨别</p></blockquote>\n</li>\n</ol>\n<h2 id=\"3-转义字符\"><a href=\"#3-转义字符\" class=\"headerlink\" title=\"3.转义字符\"></a>3.转义字符</h2><p>转义字符以\\或者\\x开头，以\\开头表示后跟八进制形式的编码值，以\\x开头表示后跟十六进制形式的编码值。对于转义字符来说，只能使用八进制或者十六进制。</p>\n<p>| :–: | :–: | :–: |<br>|转义字符|意义|ASCII码值（十进制）|<br>|\\a\t|响铃(BEL)当前位置移到前一列|008|<br>|\\f\t|换页(FF)将当前位置移到下页开头|012|<br>|\\n\t|换行(LF)将当前位置移到下一行开头|\t010|<br>|\\r\t|回车(CR)将当前位置移到本行开头|\t013|<br>|\\t\t|水平制表(HT) \t|009|<br>|\\v\t|垂直制表(VT)\t|011|<br>|&#39;\t|单引号\t|039|<br>|&quot;\t|双引号\t|034|<br>|\\\t|反斜杠\t|092|</p>\n","text":"一、变量1. 变量的概念变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分变量名和变量值是两个不同的概念。 现实生活中我们会找一个小箱子来存放物品，一来显得不那么凌乱，二来方便以后找到。计算机也是这个道理，我...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"c语言","slug":"Note/c语言","count":7,"path":"api/categories/Note/c语言.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"c语言","slug":"c语言","count":7,"path":"api/tags/c语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">一、变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%8F%98%E9%87%8F%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1. 变量的概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%8F%98%E9%87%8F%E5%90%8D%EF%BC%88%E6%A0%87%E8%AF%86%E7%AC%A6%EF%BC%89%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">2. 变量名（标识符）命名规范</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">3. 声明变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%8F%98%E9%87%8F%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">4. 变量赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">5. 变量的作用域</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">二、常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E9%87%8F%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1. 常量的概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%B8%B8%E9%87%8F%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">2. 常量的分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">3.转义字符</span></a></li></ol></li></ol>","author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}},"mapped":true,"prev_post":{"title":"C语言笔记（4）运算符及表达式篇","uid":"20593d7604e98581ff324049fd7dd8b3","slug":"C语言笔记（4）运算符及表达式篇","date":"2023-04-26T02:02:26.000Z","updated":"2023-04-26T06:19:36.344Z","comments":true,"path":"api/articles/C语言笔记（4）运算符及表达式篇.json","keywords":null,"cover":"https://img1.imgtp.com/2023/04/26/BBICbuKd.jpg","text":"一、表达式1.表达式是什么一个或多个运算对象与零个或多个运算符组成的式子叫做表达式。 每个表达式都有一个结果 printf(&quot;%d\\n&quot; 5+10); &#x2F;&#x2F;表达式结果为：15 2.表达式语句在表达式后边加上;就构成了表达式语句，C语言中表达...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"c语言","slug":"Note/c语言","count":7,"path":"api/categories/Note/c语言.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"c语言","slug":"c语言","count":7,"path":"api/tags/c语言.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}},"next_post":{"title":"vscode配置c语言环境","uid":"6adf066132135f079fa836f0cde19524","slug":"vscode配置c语言环境","date":"2023-04-25T14:41:49.840Z","updated":"2023-04-26T13:11:56.636Z","comments":true,"path":"api/articles/vscode配置c语言环境.json","keywords":null,"cover":"https://img1.imgtp.com/2023/04/25/ZWyyujZo.jpg","text":"开篇昨晚上一不小心给电脑整坏了，无奈之下就重装了系统。装完系统之后最麻烦的当然就是所有学习资料的安装恢复了。这样的工作对我这种记忆力不大好的“老年人”极度不友好！可是这又有什么办法呢，找到了我在云盘的学习资料后，当然是安装对应的工具了。我首先选择恢复的是vscode这款神器，我感...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"c语言","slug":"Note/c语言","count":7,"path":"api/categories/Note/c语言.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"c语言","slug":"c语言","count":7,"path":"api/tags/c语言.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}}}