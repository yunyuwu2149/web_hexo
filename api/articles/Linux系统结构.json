{"title":"Linux系统结构","uid":"9bbe250cd9e41932ae82c5713812968e","slug":"Linux系统结构","date":"2023-04-27T01:04:17.000Z","updated":"2023-04-27T01:07:19.821Z","comments":true,"path":"api/articles/Linux系统结构.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/06/287046868.webp","content":"<h2 id=\"一、Linux系统结构\"><a href=\"#一、Linux系统结构\" class=\"headerlink\" title=\"一、Linux系统结构\"></a>一、Linux系统结构</h2><p><img src=\"https://image.yunyuwu.cn/typecho/uploads/2022/07/1968282045.png\" alt=\"Linux系统结构.png\"></p>\n<h3 id=\"1-Linux内核是什么？\"><a href=\"#1-Linux内核是什么？\" class=\"headerlink\" title=\"1.Linux内核是什么？\"></a>1.Linux内核是什么？</h3><p>操作系统是一个用来和硬件打交道并为用户程序提供一个有限服务集的低级支撑软件。一个计算机系统是一个硬件和软件的共生体，它们互相依赖，不可分割。计算机的硬件，含有外围设备、处理器、内存、硬盘和其他的电子设备组成计算机的发动机。但是没有软件来操作和控制它，自身是不能工作的。完成这个控制工作的软件就称为操作系统，在Linux的术语中被称为<code>“内核”</code>，也可以称为<code>“核心”</code>。Linux内核的主要模块（或组件）分以下几个部分：<strong>存储管理、CPU和进程管理、文件系统、设备管理和驱动、网络通信，以及系统的初始化（引导）、系统调用</strong>等。</p>\n<h3 id=\"2-shell是什么\"><a href=\"#2-shell是什么\" class=\"headerlink\" title=\"2.shell是什么\"></a>2.shell是什么</h3><p>Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。是在Linux内核与用户之间的解释器程序，现在Linux通常指&#x2F;bin&#x2F;bash解释器来负责向内核翻译以及传达用户&#x2F;程序指令，shell相当于操作系统的“外壳”</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>接收用户的命令，经过转换，交给内核去执行</p></blockquote>\n<p><strong>为什么使用shell</strong><br>为了简化操作和保证内核的安全。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#查看当前shell\necho $SHELL\n#切换shell\nchsh -s &#x2F;bin&#x2F;csh\n#查看shell列表\nchsh -l</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">shell名称</th>\n<th align=\"center\">程序路径</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">bonrne shell</td>\n<td align=\"center\">&#x2F;usr&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;sh</td>\n</tr>\n<tr>\n<td align=\"center\">C Shell</td>\n<td align=\"center\">&#x2F;usrbin&#x2F;csh</td>\n</tr>\n<tr>\n<td align=\"center\">K Shell</td>\n<td align=\"center\">usr&#x2F;bin&#x2F;ksh</td>\n</tr>\n<tr>\n<td align=\"center\">Bourne Again Shell</td>\n<td align=\"center\"><strong>&#x2F;bin&#x2F;bash</strong></td>\n</tr>\n<tr>\n<td align=\"center\">Z Shell</td>\n<td align=\"center\">&#x2F;bin&#x2F;zsh或&#x2F;usr&#x2F;bin&#x2F;zsh</td>\n</tr>\n</tbody></table>\n<p><strong>Windows:cmd、Power Shell</strong></p>\n<p><img src=\"https://image.yunyuwu.cn/typecho/uploads/2022/07/3219440057.png\" alt=\"Shell和Termin.png\"></p>\n<h3 id=\"3-Linux文件系统\"><a href=\"#3-Linux文件系统\" class=\"headerlink\" title=\"3.Linux文件系统\"></a>3.Linux文件系统</h3><p>Linux系统一切皆文件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>普通文件、目录、进程（&#x2F;proc）、输入输出设备（&#x2F;dev）、网络字节流socket、链接文件、管道文件</p></blockquote>\n<p>Linux系统没有<strong>Windows盘符的概念</strong>，所有的文件都在根目录<code>/</code>下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">目录</th>\n<th align=\"center\">说明</th>\n<th align=\"center\">备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">bin</td>\n<td align=\"center\">存放普通用户可执行的指令</td>\n<td align=\"center\">即使在单用户模式下也能够执行处理</td>\n</tr>\n<tr>\n<td align=\"center\">boot</td>\n<td align=\"center\">开机引导目录</td>\n<td align=\"center\">包括Linux内核文件与开机所需要的文件</td>\n</tr>\n<tr>\n<td align=\"center\">dev</td>\n<td align=\"center\">设备目录</td>\n<td align=\"center\">所有的硬件设备及周边均放置在这个设备目录中</td>\n</tr>\n<tr>\n<td align=\"center\">etc</td>\n<td align=\"center\">各种配置文件目录</td>\n<td align=\"center\">大部分配置属性均存放在这里</td>\n</tr>\n<tr>\n<td align=\"center\">lib&#x2F;lib64</td>\n<td align=\"center\">开机时常用的动态链接库</td>\n<td align=\"center\">bin及sbin指令也会调用对应的lib库</td>\n</tr>\n<tr>\n<td align=\"center\">media</td>\n<td align=\"center\">可移除设备挂载目录</td>\n<td align=\"center\">类似软盘 U盘 光盘等临时挂放目录</td>\n</tr>\n<tr>\n<td align=\"center\">mnt</td>\n<td align=\"center\">用户临时挂载其他的文件系统</td>\n<td align=\"center\">额外的设备可挂载在这里,相对临时而言</td>\n</tr>\n<tr>\n<td align=\"center\">opt</td>\n<td align=\"center\">第三方软件安装目录</td>\n<td align=\"center\">现在习惯性的放置在<code>/usr/local</code>中</td>\n</tr>\n<tr>\n<td align=\"center\">proc</td>\n<td align=\"center\">虚拟文件系统</td>\n<td align=\"center\">通常是内存中的映射,特别注意在误删除数据文件后，比如DB，只要系统不重启,还是有很大几率能将数据找回来</td>\n</tr>\n<tr>\n<td align=\"center\">root</td>\n<td align=\"center\">系统管理员主目录</td>\n<td align=\"center\">除root之外,其他用户均放置在<code>/home</code>目录下</td>\n</tr>\n<tr>\n<td align=\"center\">run</td>\n<td align=\"center\">系统运行时所需文件</td>\n<td align=\"center\">以防止在<code>/var/run</code>中,后来拆分成独立的<code>/run</code>目录。重启后重新生成对应的目录数据</td>\n</tr>\n<tr>\n<td align=\"center\">sbin</td>\n<td align=\"center\">只有root才能运行的管理指令</td>\n<td align=\"center\">跟bin类似,但只属于root管理员</td>\n</tr>\n<tr>\n<td align=\"center\">srv</td>\n<td align=\"center\">服务启动后需要访问的数据目录</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">sys</td>\n<td align=\"center\">跟proc一样虚拟文件系统</td>\n<td align=\"center\">记录核心系统硬件信息</td>\n</tr>\n<tr>\n<td align=\"center\">tmp</td>\n<td align=\"center\">存放临时文件目录</td>\n<td align=\"center\">所有用户对该目录均可读写</td>\n</tr>\n<tr>\n<td align=\"center\">usr</td>\n<td align=\"center\">应用程序放置目录</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">var</td>\n<td align=\"center\">存放系统执行过程经常改变的文件</td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<p>比较重要的几个目录：</p>\n<ol>\n<li><p><strong>&#x2F;etc</strong>这个是系统中的配置文件，如果更改了该目录下的某个文件可能会导致系统不能启动。</p>\n</li>\n<li><p><strong>&#x2F;bin, &#x2F;sbin, &#x2F;usr&#x2F;bin, &#x2F;usr&#x2F;sbin</strong>: 这是系统预设的执行文件的放置目录，比如<code>ls</code>就是在<code>/bin/ls </code>目录下的。值得提出的是，<code>/bin, /usr/bin</code>是给<strong>系统用户</strong>使用的指令（除root外的通用户），而<code>/sbin, /usr/sbin</code>则是给<strong>root</strong>使用的指令。</p>\n</li>\n<li><p><strong>&#x2F;var</strong>： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在<code>/var/log</code>目录下，另外mail的预设放置也是在这里。</p>\n</li>\n</ol>\n<h3 id=\"用户目录\"><a href=\"#用户目录\" class=\"headerlink\" title=\"用户目录\"></a>用户目录</h3><p><strong>用户目录位于&#x2F;home&#x2F;下，例如&#x2F;home&#x2F;xiaobei</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@iZ4q179d4eyom2Z home]# cd &#x2F;home\n[root@iZ4q179d4eyom2Z home]# ls\nxiaobei</code></pre>\n\n<p>###登录信息</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@localhost &#x2F;]#\n#Linux的bash解析器终端用来显示主机名和当前用户的标识；\n\n# root表示当前用户叫root（系统管理员账户）\n# localhost表示当前使用的主机名叫localhost（没有设置系统名字的时候默认名称是localhost）\n# &#x2F; 表示你当前所处的目录位置 (这里的&#39;&#x2F;&#39;表示你当前在根目录下)</code></pre>\n\n\n<p>###相对路径与绝对路径<br><strong>绝对路径</strong><br>从<code>/</code>开始的路径叫绝对路径、如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@localhost &#x2F;]# cd &#x2F;home&#x2F;xiaobei\n[root@localhost &#x2F;]# ls &#x2F;usr</code></pre>\n<p><strong>相对路径</strong><br>从当前位置开始描述的路径为相对路径，如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@localhost &#x2F;]# cd ..&#x2F;..&#x2F;\n[root@localhost &#x2F;]# ls abc&#x2F;def</code></pre>\n\n\n<p><strong>. 和 ..</strong><br>每个目录下都有**.<strong>和</strong>..**</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">. 表示当前目录\n\n.. 表示上一级目录，即父目录</code></pre>\n\n<pre><code>    例如这里切换路径时候\n</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 从 &#x2F; 根目录切换到 home目录\n[root@localhost &#x2F;]# cd home\n\n# 确认路径&#x2F;home\n[root@localhost home]# pwd\n&#x2F;home\n\n# 切换到当前目录cd .  目录无变化\n[root@localhost home]# cd .\n\n# 切换到当前目录cd ..  目录回到上一级根目录\n[root@localhost home]# cd ..\n[root@localhost &#x2F;]# </code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>根目录下的 . 和 .. 都表示当前目录</strong></p></blockquote>\n<hr>\n<h2 id=\"二、Linux权限\"><a href=\"#二、Linux权限\" class=\"headerlink\" title=\"二、Linux权限\"></a>二、Linux权限</h2><p><strong>Linux</strong>的权限有<code>RWX</code>三种<br><code>r(Read，读取)</code>：对文件而言，具有读取文件内容的权限；对目录来说，具有<strong>浏览</strong>目录的权限。<br><code>w(Write,写入)</code>：对<code>文件</code>而言，具有<strong>新增,修改,删除文件内容</strong>的权限；对<code>目录</code>来说，具有<strong>新建，删除，修改，移动目录内文件</strong>的权限。<br><code>x(eXecute，执行)</code>：对<code>文件</code>而言，具有<strong>执行文件</strong>的权限；对<code>目录</code>来说该用户具有<strong>进入目录</strong>的权限。</p>\n<ol>\n<li>目录的只读访问不允许使用cd进入目录，必须要有执行的权限才能进入。</li>\n<li>只有执行权限只能进入目录，不能看到目录下的内容，要想看到目录下的文件名和目录名，需要可读权限。</li>\n<li>一个文件能不能被删除，主要看该文件所在的目录对用户是否具有写权限，如果目录对用户没有写权限，则该目录下的所有文件都不能被删除，文件所有者除外</li>\n<li>目录的w位不设置，即使你拥有目录中某文件的w权限也不能写该文件</li>\n</ol>\n<h3 id=\"文件权限\"><a href=\"#文件权限\" class=\"headerlink\" title=\"文件权限\"></a>文件权限</h3><p>&amp;emsp;&amp;emsp;文件权限就是文件的访问控制权限，即哪些用户和组群可以访问文件以及可以执行什么样的操作。</p>\n<p>&amp;emsp;&amp;emsp;Unix&#x2F;Linux 系统是一个典型的多用户系统，不同的用户处于不同的地位，对文件和目录有不同的访问权限。为了保护系统的安全性Unix&#x2F;Linux系统除了对用户权限作了严格的界定外，还在用户身份认证、访问控制、传输安全、文件读写权限等方面作了周密的控制。</p>\n<p>&amp;emsp;&amp;emsp;在 Unix&#x2F;Linux 中的每一个文件或目录都包含有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。</p>\n<h3 id=\"访问用户\"><a href=\"#访问用户\" class=\"headerlink\" title=\"访问用户\"></a>访问用户</h3><p>&amp;emsp;&amp;emsp;通过设定权限可以从以下三种访问方式限制访问权限：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">只允许用户自己访问（所有者） 所有者就是创建文件的用户，用户是所有用户所创建文件的所有者，用户可以允许所在的用户组能访问用户的文件。\n允许一个预先指定的用户组中的用户访问（用户组） 用户都组合成用户组，例如，某一类或某一项目中的所有用户都能够被系统管理员归为一个用户组，一个用户能够授予所在用户组的其他成员的文件访问权限。\n允许系统中的任何用户访问（其他用户） 用户也将自己的文件向系统内的所有用户开放，在这种情况下，系统内的所有用户都能够访问用户的目录或文件。在这种意义上，系统内的其他所有用户就是 other 用户类</code></pre>\n\n<h3 id=\"访问权限\"><a href=\"#访问权限\" class=\"headerlink\" title=\"访问权限\"></a>访问权限</h3><p>&amp;emsp;&amp;emsp;用户能够控制一个给定的文件或目录的访问程度，一个文件或目录可能有读、写及执行权限：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">读权限（r） 对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。\n写权限（w） 对文件而言，具有新增、修改文件内容的权限；对目录来说，具有删除、移动目录内文件的权限。\n可执行权限（x） 对文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。</code></pre>\n\n<p>&amp;emsp;&amp;emsp;<strong>注意：通常，Unix&#x2F;Linux系统只允许文件的属主(所有者)或超级用户改变文件的读写权限。</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@localhost &#x2F;]# ls -l\n总用量 20\nlrwxrwxrwx.   1 root root    7 8月  31 15:48 bin -&gt; usr&#x2F;bin\ndr-xr-xr-x.   5 root root 4096 8月  31 15:58 boot\n...</code></pre>\n\n<p>&amp;emsp;&amp;emsp;我们来拆解结构，这里面我只列了根目录下的一部分内容</p>\n<p>&amp;emsp;&amp;emsp;用到 ls -l 命令查看当前文件夹下详细信息，具体的命令和参数，后面会深入讲解</p>\n<p>&amp;emsp;&amp;emsp;我们需要关注的是文件或目录的权限情况</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">l  rwx  rwx  rwx\nd  r-x  r-x  r-x\n\n# 首先第一个字母 在Linux中第一个字符代表这个文件是目录、文件或链接文件等等。\n[ d ] 表示目录\n[ l ] 表示为链接文档(link file)\n[ - ] 表示为文件\n[ b ] 表示为装置文件里面的可供储存的接口设备(可随机存取装置)\n[ c ] 表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)\n\n# 其次接下来的字符中，以三个为一组，且均为 [ rwx ] 的三个参数的组合\n[ r ]代表可读(read)\n[ w ]代表可写(write)\n[ x ]代表可执行(execute)\n[ - ]\n\n# 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。\n\n  此时问题来了那么这三组一样是有什么区分尼？\n# 这里就涉及到刚才所描述的访问用户权限\n# 所有者    所有者表示该文件的所有者\n# 用户组    表示当前用户再同一组\n# 其他用户  允许系统中的任何用户访问，系统内的其他所有用户就是 other 用户类\n\n# 可以将这个权限进行类比，如我的篮球，\n# 所有者表示的是我可以玩 \n# 用户组表示，我可以借给我同班同学玩\n# 其他用户表示，我可以借给其他班的同学玩\n</code></pre>\n\n<p><strong>文件属主与属组</strong></p>\n<p>&amp;emsp;&amp;emsp;对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p>\n<p>&amp;emsp;&amp;emsp;同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。</p>\n<p>&amp;emsp;&amp;emsp;文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。</p>\n<p>&amp;emsp;&amp;emsp;因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@localhost &#x2F;]# ls -l\n总用量 20\n...\ndr-xr-xr-x.   5 root root 4096 8月  31 15:58 boot\n...\n\n[root@localhost &#x2F;]# cd &#x2F;home\n[root@localhost home]# ls -l\n总用量 0\ndrwx------. 2 xiaobei xiaobei 83 9月   2 15:54 xiaobei\n\n\n# 在以上实例中，xiaobei 文件是一个目录文件，属主和属组都为 xiaobei，属主有可读、可写、可执行的权限；与属主同组的用户无权限读写执行；其他用户也无权限读写执行\n\n# 对于 root 用户来说，一般情况下，文件的权限对其不起作用。</code></pre>\n\n\n","text":"一、Linux系统结构 1.Linux内核是什么？操作系统是一个用来和硬件打交道并为用户程序提供一个有限服务集的低级支撑软件。一个计算机系统是一个硬件和软件的共生体，它们互相依赖，不可分割。计算机的硬件，含有外围设备、处理器、内存、硬盘和其他的电子设备组成计算机的发动机。但是没有...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"Linux","slug":"Note/Linux","count":1,"path":"api/categories/Note/Linux.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">一、Linux系统结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Linux%E5%86%85%E6%A0%B8%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">1.Linux内核是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-shell%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">2.shell是什么</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-Linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">3.Linux文件系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">用户目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Linux%E6%9D%83%E9%99%90\"><span class=\"toc-text\">二、Linux权限</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90\"><span class=\"toc-text\">文件权限</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">访问用户</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90\"><span class=\"toc-text\">访问权限</span></a></li></ol></li></ol>","author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}},"mapped":true,"prev_post":{"title":"Markdown首行空两格解决办法","uid":"c9b8e0da1ed76140e1d6a6b5edc32db4","slug":"Markdown首行空两格解决办法","date":"2023-04-27T01:08:41.000Z","updated":"2023-04-27T01:10:05.799Z","comments":true,"path":"api/articles/Markdown首行空两格解决办法.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/07/4113764202.png","text":"&amp;emsp;&amp;emsp;由于Markdown主要是针对英文的，对中文首行缩进极其不友好。 &amp;emsp;&amp;emsp;在你用Markdown编辑器编辑时，你打出两个空格，他并不会显示。 &amp;emsp;&amp;emsp;在需要打出空格的地方添加如...","link":"","photos":[],"count_time":{"symbolsCount":294,"symbolsTime":"1 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"Markdown","slug":"Note/Markdown","count":1,"path":"api/categories/Note/Markdown.json"}],"tags":[{"name":"Markdown","slug":"Markdown","count":1,"path":"api/tags/Markdown.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}},"next_post":{"title":"在win10下Tab+Alt键不能切换窗口问题","uid":"31089f2d2a9555f32a563f63038814e9","slug":"在win10下Tab-Alt键不能切换窗口问题","date":"2023-04-27T00:52:47.000Z","updated":"2023-04-27T00:59:16.535Z","comments":true,"path":"api/articles/在win10下Tab-Alt键不能切换窗口问题.json","keywords":null,"cover":"https://image.yunyuwu.cn/imgurl/lskypro/2023/04/27/6449c805e8da2.png","text":"在前两天重装系统后遇到Tab+Alt键不能切换窗口问题，在找到解决办法后发布文章备忘。 打开注册表编辑器 进入如下路径计算机\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer 在右侧寻找Alt...","link":"","photos":[],"count_time":{"symbolsCount":222,"symbolsTime":"1 mins."},"categories":[{"name":"疑难杂症","slug":"疑难杂症","count":4,"path":"api/categories/疑难杂症.json"},{"name":"Win10","slug":"疑难杂症/Win10","count":4,"path":"api/categories/疑难杂症/Win10.json"}],"tags":[{"name":"疑难杂症","slug":"疑难杂症","count":2,"path":"api/tags/疑难杂症.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}}}