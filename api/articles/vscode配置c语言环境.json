{"title":"vscode配置c语言环境","uid":"6adf066132135f079fa836f0cde19524","slug":"vscode配置c语言环境","date":"2023-04-25T14:41:49.840Z","updated":"2023-04-26T13:11:56.636Z","comments":true,"path":"api/articles/vscode配置c语言环境.json","keywords":null,"cover":"https://img1.imgtp.com/2023/04/25/ZWyyujZo.jpg","content":"<h2 id=\"开篇\"><a href=\"#开篇\" class=\"headerlink\" title=\"开篇\"></a>开篇</h2><p>昨晚上一不小心给电脑整坏了，无奈之下就重装了系统。装完系统之后最麻烦的当然就是所有学习资料的安装恢复了。这样的工作对我这种记忆力不大好的“老年人”极度不友好！可是这又有什么办法呢，找到了我在云盘的学习资料后，当然是安装对应的工具了。我首先选择恢复的是vscode这款神器，我感觉这款轻量编辑器还是对我挺友好的，各个系统平台都可以使用，支持多种语言不说，还有丰富多样的各类插件免费使用。</p>\n<h2 id=\"配置过程\"><a href=\"#配置过程\" class=\"headerlink\" title=\"配置过程\"></a>配置过程</h2><p>要拥有<a href=\"https://code.visualstudio.com/\">vscode</a>这就不用说了吧，没有的话可以去官网下载地址下载，或者使用我提供的蓝奏云链接，密码：5mp1（64位与32位）<br><img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/565680230.png\" alt=\"屏幕截图 2021-12-18 085817.png\"></p>\n<p><a href=\"https://code.visualstudio.com/#home-terms\">https://code.visualstudio.com/#home-terms</a><br><a href=\"https://yunyuwu.lanzouv.com/b00p6w4pi\">https://yunyuwu.lanzouv.com/b00p6w4pi</a></p>\n<h3 id=\"第一步：汉化vscode并安装c插件\"><a href=\"#第一步：汉化vscode并安装c插件\" class=\"headerlink\" title=\"第一步：汉化vscode并安装c插件\"></a>第一步：汉化vscode并安装c插件</h3><p>同时摁住（ctrl+shift+x）在搜索框中输入chinese，然后我们点击第一个简体中文下的install，等待下载完成后重启vscode就可以看到汉化后的页面了。然后我们继续安装以下两款插件<code>C/C++</code>以及<code>Code Runner</code><img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/2706851789.png\" alt=\"屏幕截图 2021-12-18 090554.png\"><img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/2575125077.png\" alt=\"屏幕截图 2021-12-18 091035.png\"></p>\n<h3 id=\"第二步：安装编译器（MinGW-W64-GCC）\"><a href=\"#第二步：安装编译器（MinGW-W64-GCC）\" class=\"headerlink\" title=\"第二步：安装编译器（MinGW-W64 GCC）\"></a>第二步：安装编译器（MinGW-W64 GCC）</h3><p>由于官网下载地址需要科学上网，为了方便我也上传了蓝奏云一份。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>官网下载的时候，要下载<code>x86_64-posix-seh</code>这个版本的o！</p></blockquote>\n<p><img src=\"https://image.yunyuwu.cn/typecho/uploads/2022/05/592561562.png\" alt=\"2022-05-23T10:55:06.png\"></p>\n<p><a href=\"https://sourceforge.net/projects/mingw-w64/files/\">https://sourceforge.net/projects/mingw-w64/files/</a><br><a href=\"https://yunyuwu.lanzouv.com/i8aD8xq4muf\">https://yunyuwu.lanzouv.com/i8aD8xq4muf</a></p>\n<h3 id=\"第三步：配置环境变量\"><a href=\"#第三步：配置环境变量\" class=\"headerlink\" title=\"第三步：配置环境变量\"></a>第三步：配置环境变量</h3><p>下载完成后解压到自己想要的目录（路径中不能有中文），然后我们点击到bin文件夹中，复制bin的路径<img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/4034618204.png\" alt=\"屏幕截图 2021-12-18 093601.png\"><br>然后我们点击：此电脑——属性——高级系统设置——环境变量，点击系统环境变量中的Path。接着按下方图片操作后，摁住<code>win+R</code>键输入<code>cmd</code>，在cmd控制台输入下方代码并回车，当输出结果如图所示就是成功了<br><img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/2529949424.png\" alt=\"屏幕截图 2021-12-18 094639.png\"></p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">gcc -v -E -x c++ -</code></pre>\n<p><img src=\"https://image.yunyuwu.cn/typecho/uploads/2022/02/2369264383.png\" alt=\"成功截图.png\"></p>\n<h3 id=\"第四步：配置vscode\"><a href=\"#第四步：配置vscode\" class=\"headerlink\" title=\"第四步：配置vscode\"></a>第四步：配置vscode</h3><p>最后我们配置vscode的相关配置：</p>\n<ol>\n<li>先新建一个文件夹作为C语言项目文件夹，然后点击菜单中的：文件——打开文件夹——选择我们刚创建的文件夹<br>然后在其中创建一个c语言文件，名字可以随意，结尾必须是<code>.c</code></li>\n<li>然后创建一个<code>.vscode</code>文件夹（前面有个.）在里面创建三个json文件，分别是：<code>c_cpp_propertise.json</code>与<code>launch.json</code>和<code>tasks.json</code><br><img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/1649870593.png\" alt=\"屏幕截图 2021-12-18 103224.png\"></li>\n<li>分别编辑这三个文件<br><code>c_cpp_propertise.json</code>：然后我们需要将图片中红色方框内的路径修改为自己刚安装的编译器的地址，将你刚刚安装的路径复制一下，然后修改此代码中的<code>D:/Programs/mingw64</code>部分<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;configurations&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;Win32&quot;,\n            &quot;includePath&quot;: [\n                &quot;$&#123;workspaceRoot&#125;&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;include&#x2F;**&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;x86_64-w64-mingw32&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;backward&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include-fixed&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;x86_64-w64-mingw32&#x2F;include&quot;\n            ],\n            &quot;defines&quot;: [\n                &quot;_DEBUG&quot;,\n                &quot;UNICODE&quot;,\n                &quot;__GNUC__&#x3D;6&quot;,\n                &quot;__cdecl&#x3D;__attribute__((__cdecl__))&quot;\n            ],\n            &quot;intelliSenseMode&quot;: &quot;msvc-x64&quot;,\n            &quot;browse&quot;: &#123;\n                &quot;limitSymbolsToIncludedHeaders&quot;: true,\n                &quot;databaseFilename&quot;: &quot;&quot;,\n                &quot;path&quot;: [\n                    &quot;$&#123;workspaceRoot&#125;&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;include&#x2F;**&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;x86_64-w64-mingw32&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;backward&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include-fixed&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;x86_64-w64-mingw32&#x2F;include&quot;\n                ]\n            &#125;\n        &#125;\n    ],\n    &quot;version&quot;: 4\n&#125;</code></pre>\n<img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/1840630898.png\" alt=\"屏幕截图 2021-12-18 103345.png\"></li>\n</ol>\n<hr>\n<p><code>launch.json</code>：将miDebuggerPath属性里的内容一样改为自己的路径</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;version&quot;: &quot;0.2.0&quot;,\n    &quot;configurations&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;(Windows) Launch&quot;,\n            &quot;type&quot;: &quot;cppvsdbg&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;program&quot;: &quot;cmd&quot;,\n            &quot;preLaunchTask&quot;: &quot;echo&quot;,\n            &quot;args&quot;: [\n                &quot;&#x2F;C&quot;,\n                &quot;$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,\n                &quot;&amp;&quot;,\n                &quot;echo.&quot;,\n                &quot;&amp;&quot;,\n                &quot;pause&quot;\n            ],\n            &quot;stopAtEntry&quot;: false,\n            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,\n            &quot;environment&quot;: [],\n            &quot;console&quot;:&quot;externalTerminal&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;(gdb) Launch&quot;,\n            &quot;type&quot;: &quot;cppdbg&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;&#x2F;$&#123;fileBasenameNoExtension&#125;.exe&quot;,\n            &quot;args&quot;: [],\n            &quot;stopAtEntry&quot;: false,\n            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,\n            &quot;environment&quot;: [],\n            &quot;externalConsole&quot;: true,\n            &quot;MIMode&quot;: &quot;gdb&quot;,\n            &quot;miDebuggerPath&quot;: &quot;D:\\\\Programs\\\\mingw64\\\\bin\\\\gdb.exe&quot;,&#x2F;&#x2F;自己电脑的gdb路径\n            &quot;preLaunchTask&quot;: &quot;echo&quot;,\n            &quot;setupCommands&quot;: [\n                &#123;\n                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,\n                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,\n                    &quot;ignoreFailures&quot;: true\n                &#125;\n            ]\n \n        &#125;\n    ]\n&#125;</code></pre>\n\n<p><code>tasks.json</code>：直接复制粘贴进去保存即可</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &#x2F;&#x2F; See https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkId&#x3D;733558\n    &#x2F;&#x2F; for the documentation about the tasks.json format\n    &quot;version&quot;: &quot;2.0.0&quot;,\n    &quot;tasks&quot;: [\n        &#123;\n            &quot;label&quot;: &quot;echo&quot;,\n            &quot;type&quot;: &quot;shell&quot;,\n            &quot;command&quot;: &quot;gcc&quot;,\n            &quot;args&quot;: [\n                &quot;-g&quot;, \n                &quot;$&#123;file&#125;&quot;, \n                &quot;-o&quot;, \n                &quot;$&#123;fileBasenameNoExtension&#125;.exe&quot;,\n                &quot;-fexec-charset&#x3D;GBK&quot;&#x2F;&#x2F;解决中文乱码\n            ]\n        &#125;\n    ],\n    &quot;presentation&quot;: &#123;\n        &quot;echo&quot;: true,\n        &quot;reveal&quot;: &quot;always&quot;,\n        &quot;focus&quot;: false,\n        &quot;panel&quot;: &quot;shared&quot;, \n        &quot;showReuseMessage&quot;: true,\n        &quot;clear&quot;: false\n    &#125;\n&#125;</code></pre>\n<h3 id=\"第五步：调试\"><a href=\"#第五步：调试\" class=\"headerlink\" title=\"第五步：调试\"></a>第五步：调试</h3><p>我们输入熟悉的代码然后摁下F5进行调试，就会发现我们可以放飞自我了</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nint main()\n&#123;\n    printf(&quot;hello world&quot;);\n    return 0;\n&#125;</code></pre>\n<p><img src=\"https://blog.yunyuwu.cn/usr/uploads/2021/12/2115017026.png\" alt=\"屏幕截图 2021-12-18 104553.png\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>总结一下：<br>1.注意替换路径中的<code>\\</code>与<code>/</code>改错会闪退的<br>2.如果要运行c++的话，把<code>launch.json</code>文件第16行和<code>tasks.json</code>文件3行的<code>gcc</code>改成<code>g++</code></p>\n","text":"开篇昨晚上一不小心给电脑整坏了，无奈之下就重装了系统。装完系统之后最麻烦的当然就是所有学习资料的安装恢复了。这样的工作对我这种记忆力不大好的“老年人”极度不友好！可是这又有什么办法呢，找到了我在云盘的学习资料后，当然是安装对应的工具了。我首先选择恢复的是vscode这款神器，我感...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"c语言","slug":"Note/c语言","count":7,"path":"api/categories/Note/c语言.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"c语言","slug":"c语言","count":7,"path":"api/tags/c语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E7%AF%87\"><span class=\"toc-text\">开篇</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">配置过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E6%B1%89%E5%8C%96vscode%E5%B9%B6%E5%AE%89%E8%A3%85c%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">第一步：汉化vscode并安装c插件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5%EF%BC%9A%E5%AE%89%E8%A3%85%E7%BC%96%E8%AF%91%E5%99%A8%EF%BC%88MinGW-W64-GCC%EF%BC%89\"><span class=\"toc-text\">第二步：安装编译器（MinGW-W64 GCC）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E6%AD%A5%EF%BC%9A%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">第三步：配置环境变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E6%AD%A5%EF%BC%9A%E9%85%8D%E7%BD%AEvscode\"><span class=\"toc-text\">第四步：配置vscode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E6%AD%A5%EF%BC%9A%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">第五步：调试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}},"mapped":true,"prev_post":{"title":"C语言笔记（3）变量及常量篇","uid":"73b463ad631cb31a8944de1994830c80","slug":"C语言笔记（3）变量及常量篇","date":"2023-04-26T01:54:18.000Z","updated":"2023-04-26T06:19:36.348Z","comments":true,"path":"api/articles/C语言笔记（3）变量及常量篇.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/02/1888138218.jpg","text":"一、变量1. 变量的概念变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分变量名和变量值是两个不同的概念。 现实生活中我们会找一个小箱子来存放物品，一来显得不那么凌乱，二来方便以后找到。计算机也是这个道理，我...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"c语言","slug":"Note/c语言","count":7,"path":"api/categories/Note/c语言.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"c语言","slug":"c语言","count":7,"path":"api/tags/c语言.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}},"next_post":{"title":"C语言笔记（2）基本语法","uid":"9fe0d1f058dbe1b450961fecd0540c53","slug":"C语言笔记（2）基本语法","date":"2023-04-24T17:03:13.000Z","updated":"2023-04-26T06:19:36.332Z","comments":true,"path":"api/articles/C语言笔记（2）基本语法.json","keywords":null,"cover":"https://img1.imgtp.com/2023/04/25/onmIdjZM.jpg","text":"C语言的结构一个C语言程序由若干个头文件与多个函数构成,每个函数有自己的功能,例如 #include &lt;stdio.h&gt; &#x2F;&#x2F;stdio.h就是头文件 int main(void) &#123; &#x2F;&#x2F;从int到结尾这是主函数 p...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"Note","slug":"Note","count":16,"path":"api/categories/Note.json"},{"name":"c语言","slug":"Note/c语言","count":7,"path":"api/categories/Note/c语言.json"}],"tags":[{"name":"Note","slug":"Note","count":14,"path":"api/tags/Note.json"},{"name":"c语言","slug":"c语言","count":7,"path":"api/tags/c语言.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}}}