{"title":"如何对自己的服务器进行压力测试","uid":"ce4544b62caffd573c0afda46c278aa6","slug":"如何对自己的服务器进行压力测试","date":"2023-04-26T13:27:44.000Z","updated":"2023-04-26T13:36:40.719Z","comments":true,"path":"api/articles/如何对自己的服务器进行压力测试.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/03/3136052553.jpg","content":"<h2 id=\"项目的开展\"><a href=\"#项目的开展\" class=\"headerlink\" title=\"项目的开展\"></a>项目的开展</h2><p>我们对项目进行部署之后，假设这个项目每天会有百万次的访问。我们的项目能不能做到稳定提供服务呢？所以我们需要进行一些测试。</p>\n<h2 id=\"如何进行测试\"><a href=\"#如何进行测试\" class=\"headerlink\" title=\"如何进行测试\"></a>如何进行测试</h2><h3 id=\"一、首先是付费的\"><a href=\"#一、首先是付费的\" class=\"headerlink\" title=\"一、首先是付费的\"></a>一、首先是付费的</h3><p>世界上没有钱解决不了的问题，如果有 那一定是钱的金额不够。</p>\n<h4 id=\"1-阿里云提供的阿里云性能测试-PTS\"><a href=\"#1-阿里云提供的阿里云性能测试-PTS\" class=\"headerlink\" title=\"1.阿里云提供的阿里云性能测试 PTS\"></a>1.阿里云提供的<a href=\"https://www.aliyun.com/product/pts?source=5176.11533457&userCode=ffsbbyn0\">阿里云性能测试 PTS</a></h4><p>阿里云的性能测试PTS无需安装软件；脚本场景监控简单化，省时、省力；分布式并发压测，施压能力无上限；快速大规模集群扩容、支持几十万用户及百万级TPS性能压测；可模拟海量用户的真实业务场景，全方位验证业务站点的性能、容量和稳定性。</p>\n<p>性能测试PTS（Performance Testing Service）是一款性能测试工具。支持按需发起压测任务，可提供百万并发、千万TPS流量发起能力，100%兼容JMeter。提供的场景编排、API调试、流量定制、流量录制等功能，可快速创建业务压测脚本，精准模拟不同量级用户访问业务系统，帮助业务快速提升系统性能和稳定性。</p>\n<p>PTS 广泛应用于各种压力测试和性能测试场景，包括但不限于以下场景：<br><img src=\"https://image.yunyuwu.cn/typecho/uploads/2022/03/1920821307.png\" alt=\"阿里测压.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>详情请观看使用文档<a href=\"https://help.aliyun.com/document_detail/70290.html?source=5176.11533457&userCode=ffsbbyn0\">如何在一分钟内发起压测？</a></p></blockquote>\n<h4 id=\"2-腾讯云提供的测压大师LM\"><a href=\"#2-腾讯云提供的测压大师LM\" class=\"headerlink\" title=\"2.腾讯云提供的测压大师LM\"></a>2.腾讯云提供的<a href=\"https://cloud.tencent.com/product/lm?fromSource=gwzcw.1293314.1293314.1293314&cps_key=ff47a5bb6fc88a1b3721636857446f74\">测压大师LM</a></h4><p>WeTest 压测大师（Load Master，LM）是简单易用的自动化性能测试平台，为用户提供测试框架及压测环境、创建虚拟机器人模拟产品多用户并发场景，支持 HTTP 或 HTTPS 协议，包括 Web&#x2F;H5 网站、移动应用、API 、游戏等主流压测场景，适用于产品发布前及运营中的服务器压力测试及性能优化。<br><img src=\"https://image.yunyuwu.cn/typecho/uploads/2022/03/3236185099.jpg\" alt=\"腾讯云测压大师优势.jpg\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用详情请观看使用文档<a href=\"https://cloud.tencent.com/document/product/653/13599\">如何在一分钟内发起压力测试</a></p></blockquote>\n<hr>\n<h3 id=\"二、不花钱的\"><a href=\"#二、不花钱的\" class=\"headerlink\" title=\"二、不花钱的\"></a>二、不花钱的</h3><p>说完了付费的，再说说不花钱的。</p>\n<h4 id=\"1-http-load\"><a href=\"#1-http-load\" class=\"headerlink\" title=\"1.http_load\"></a>1.http_load</h4><p>http_load是一款基于Linux平台的web服务器性能测试工具，用于测试web服务器的吞吐量与负载，web页面的性能。它又轻巧又简便，整个安装包就100K左右。它可以快速用来对网站或者Web API进行压力测试。而且功能还挺强大的，特别是在架构验证过程中，测试某个平台的并发和响应时间相当的管用。<br><strong>下载地址：</strong><br><a href=\"https://yunyuwu.lanzouv.com/ih4Kc01wfvkf\">https://yunyuwu.lanzouv.com/ih4Kc01wfvkf</a><br><a href=\"https://pan.baidu.com/s/105917KnmkhKJuuBNQ1paRA?pwd=ngid\">https://pan.baidu.com/s/105917KnmkhKJuuBNQ1paRA?pwd=ngid</a></p>\n<h5 id=\"安装：\"><a href=\"#安装：\" class=\"headerlink\" title=\"安装：\"></a>安装：</h5><p>上传服务器后</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#tar xfz http_load-09Mar2016.tar.gz\n#cd http_load-09Mar2016\n#make &amp;&amp; sudo make install</code></pre>\n<p>因为包很小，所以会瞬间安装完成，直接打<code>http_load</code>命令验证下是否安装成功，你应该可以看到下面的信息：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">usage:  http_load [-checksum] [-throttle] [-proxy host:port] [-verbose] [-timeout secs] [-sip sip_file]\n            -parallel N | -rate N [-jitter]\n            -fetches N | -seconds N\n            url_file\nOne start specifier, either -parallel or -rate, is required.\nOne end specifier, either -fetches or -seconds, is required.</code></pre>\n<hr>\n<h5 id=\"基本用法：\"><a href=\"#基本用法：\" class=\"headerlink\" title=\"基本用法：\"></a>基本用法：</h5><p>使用<code>http_load</code>的主要方式就是用命令<code>http_load &lt;参数&gt; &lt;url列表文件&gt;</code>。其中<code>url列表文件</code>就是一个文本文件，每行放一条你要测试的<code>URL地址（默认只支持HTTP）</code>，<code>http_load</code>在运行时会从中随机抽取地址访问。当然你也可以只放一条，那就是针对特定地址做压测。</p>\n<p><code>http_load</code>的参数主要有：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>-parallel 简写 -p: 同一时间发起的并发连接数<br>-rate 简写 -r: 每秒开启的并发连接数</p></blockquote>\n<p><strong>-parallel或-rate必须且只能有一个</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>-fetches 简写 -f ：总计的访问次数<br>-seconds 简写 -s ：总计的访问时间</p></blockquote>\n<p><strong>-fetches或-seconds必须且只能有一个</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>-proxy host:port: 指定需经过的代理地址和端口<br>timeout secs: 连接闲置后多久超时，默认60秒<br>-verbose: 控制台输出详细信息<br>注意网上有些文章说-p是并发进程数，千万别被带坑里了。<strong>http_load</strong>就一个进程，它只是模拟并发连接，不是真起了一大堆客户端进程。每个连接的调用都是非阻塞式的，因此确保了并发量。</p></blockquote>\n<p>首先我们编辑一个<code>urls.txt</code>文件格式是每行一个URL。文件中可以有这种格式<code>http://www.baidu.com/</code>亦或是<code>192.168.0.1</code>这一类的都可以测。</p>\n<p>文件格式如下：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">https:&#x2F;&#x2F;yunyuwu.cn&#x2F;adiod\nhttps:&#x2F;&#x2F;yunyuwu.cn&#x2F;3ryn89\nhttps:&#x2F;&#x2F;yunyuwu.cn&#x2F;489y3y89\nhttp:&#x2F;&#x2F;35.132.432.254</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#示例：\n.&#x2F;http_load  -p 并发访问进程数  -s 访问时间  需要访问的URL文件\n命令行：\n$ http_load -p 50 -s 10 urls.txt</code></pre>\n\n\n<p>然后得到了结果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">1239 fetches, 50 max parallel, 7.31784e+06 bytes, in 10.0001 seconds\n47211.8 mean bytes&#x2F;connection\n15.5 fetches&#x2F;sec, 731783 bytes&#x2F;sec\nmsecs&#x2F;connect: 195.597 mean, 218.047 max, 189.311 min\nmsecs&#x2F;first-response: 195.951 mean, 271.889 max, 189.239 min\n38 bad byte counts\nHTTP response codes:\n  code 200 -- 155</code></pre>\n\n<p><strong>运行结果简述：</strong><br>1.共访问了1239次，50个最大并发，获取了7.31784亿字节的数据，用时10.0001秒<br>2.每次访问平均获取47211.8字节<br>3.每秒15.5次访问，每秒731783字节数据<br>4.平均每次访问195.597毫秒，最大218.047毫秒，最小189.311毫秒<br>5.首次响应平均195.951毫秒，最大271.889毫秒，最小189.239毫秒<br>6.有38次字节计数错误<br>7.HTTP响应代码，155次200，说明有155次访问成功，</p>\n<h5 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h5><p>如果提示<code>make:cc 命令未找到</code>请执行以下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ yum -y install gcc automake autoconf libtool make\n$ yum install gcc gcc-c++</code></pre>\n\n<p>如果报错：<code>无法创建一般文件‘/usr/local/man/man1’: 没有那个文件或目录</code><br>可先<code>mkdir /usr/local/man</code>再次<code>make install</code></p>\n<hr>\n<h4 id=\"2-webbench\"><a href=\"#2-webbench\" class=\"headerlink\" title=\"2.webbench\"></a>2.webbench</h4><p>web压力测试工具webbench概述<br>webbench最多可以模拟3万个并发连接去测试网站的负载能力并发能力比较高，可以测试https及动态静态页面<br>适合中小型网站测试承受能力。<br>webbench的标准测试可以向我们展示服务器的两项内容：每秒钟相应请求数和每秒钟传输数据量。<br>webbench不但能具有便准静态页面的测试能力，还能对动态页面（ASP,PHP,JAVA,CGI）进行测试的能力。<br>他支持对含有SSL的安全网站例如电子商务网站进行静态或动态的性能测试。</p>\n<h5 id=\"安装：-1\"><a href=\"#安装：-1\" class=\"headerlink\" title=\"安装：\"></a>安装：</h5><p>下载地址：<br><a href=\"https://yunyuwu.lanzouv.com/iaCxQ01wlt6f\">https://yunyuwu.lanzouv.com/iaCxQ01wlt6f</a><br><a href=\"https://pan.baidu.com/s/1HmorM8V4TuH5MLQm2UEniw?pwd=97wj\">https://pan.baidu.com/s/1HmorM8V4TuH5MLQm2UEniw?pwd=97wj</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># yum install -y gcc ctags #先安装编译需要的组件\n# wget http:&#x2F;&#x2F;www.ha97.com&#x2F;code&#x2F;webbench-1.5.tar.gz\n# tar zxvf webbench-1.5.tar.gz\n# cd webbench-1.5\n# make &amp;&amp; make install</code></pre>\n\n<h5 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h5><p>webbench -c 1000 -t 30 <a href=\"http://127.0.0.1/test.jpg\">http://127.0.0.1/test.jpg</a><br><strong>参数说明：-c表示并发数，-t表示时间(秒)</strong></p>\n<h5 id=\"测试结果\"><a href=\"#测试结果\" class=\"headerlink\" title=\"测试结果\"></a>测试结果</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Webbench - Simple Web Benchmark 1.5\nCopyright (c) Radim Kolar 1997-2004, GPL Open Source Software.\n\nBenchmarking: GET http:&#x2F;&#x2F;hz.xiaobei.ga&#x2F;\n3000 clients, running 30 sec.\n\nSpeed&#x3D;7946 pages&#x2F;min, 16725 bytes&#x2F;sec.\nRequests: 2241 susceed, 1732 failed.</code></pre>\n<p>本人测试感觉并没有上一个脚本那么好使。</p>\n<hr>\n<h4 id=\"3-Siege\"><a href=\"#3-Siege\" class=\"headerlink\" title=\"3.Siege\"></a>3.Siege</h4><p>Siege是一个压力测试和评测工具，设计用于WEB开发这评估应用在压力下的承受能力：可以根据配置对一个WEB站点进行多用户的并发访问，记录每个用户所有请求过程的相应时间，并在一定数量的并发访问下重复进行。<br>Siege是一个多线程http负载测试和基准测试工具。<br>Siege：这是Linux系统下的一个测试工具，完全使用C语言实现，可以对HTTP和FTP服务器进行负载和性能测试。通过使用Siege 提供的功能，可以很容易的制定测试计划：包括规定使用并发用户数、重复数量，从而可以模拟在服务器、网络或者其它对象上附加负载以测试他们提供服务的受压能力，方便的测试服务器的性能。最后，利用Siege提供的测试结果来分析性能指标或者分析他们提供的服务在不同负载条件下的性能情况，分析测试结果，找出影响系统性能的瓶颈。</p>\n<p><strong>下载地址：</strong><br><a href=\"https://yunyuwu.lanzouv.com/ioqUC01wr4gb\">https://yunyuwu.lanzouv.com/ioqUC01wr4gb</a><br><a href=\"https://pan.baidu.com/s/1J7uutOI6JNm93it97HrsPQ?pwd=a6wf\">https://pan.baidu.com/s/1J7uutOI6JNm93it97HrsPQ?pwd=a6wf</a></p>\n<h5 id=\"安装：-2\"><a href=\"#安装：-2\" class=\"headerlink\" title=\"安装：\"></a>安装：</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># wget http:&#x2F;&#x2F;download.joedog.org&#x2F;siege&#x2F;siege-4.1.2.tar.gz\n# tar xzvf siege-4.1.2.tar.gz\n# cd siege-4.1.2\n# .&#x2F;configure\n# make &amp;&amp; make install</code></pre>\n\n<p>提示：如果服务器没有安装编译工具，请先安装：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt-get install build-essential</code></pre>\n\n<p>然后运行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">siege -v</code></pre>\n\n<p>出现下方代码即表示成功。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">New configuration template added to &#x2F;root&#x2F;.siege\nRun siege -C to view the current settings in that file\nSIEGE 4.1.2</code></pre>\n\n<h5 id=\"sigh常见参数\"><a href=\"#sigh常见参数\" class=\"headerlink\" title=\"sigh常见参数\"></a>sigh常见参数</h5><p>-h帮助<br>-c 指定并发数（是真并发）<br>-r 指定重复次数<br>-d 指定请求的延迟时间，注意每个请求间的随机延迟（模拟用户的思考时间，最多延迟一分钟，其他都是随机默认在一分钟之内）<br>-f 指定url列表，可以一次给多个地址加压（多用于翻页的Url测试）<br>-t 指定用例执行时间，比如，-t 10s，-t 1M(H)之类（主要用于稳定性性测试，长时间进行加压，最容易发现内存泄露的问题）<br>-g 获取请求的headers信息并打印出来，debug专用<br>-H指定请求的headers信息<br>-l或者–log&#x3D;[File]指定测试结果的路径</p>\n<h5 id=\"使用方法：\"><a href=\"#使用方法：\" class=\"headerlink\" title=\"使用方法：\"></a>使用方法：</h5><p>示例：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">siege -c 50 -r 100 -u http:&#x2F;&#x2F;192.168.91.100</code></pre>\n\n<h5 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h5><ul>\n<li><code>siege</code>默认只支持255个并发数，可以自己自定义，修改<code>~/.siege/siege.conf</code>下的<code>limit</code>数值。</li>\n<li>在用户目录下的 .bash_profile 中的末尾加入<code>ulimit -n 2000</code>, 保存后再执行<code>source ～/.bash_profile</code> &#96;即可</li>\n</ul>\n<hr>\n<h4 id=\"4-黄金眼ddos\"><a href=\"#4-黄金眼ddos\" class=\"headerlink\" title=\"4.黄金眼ddos\"></a>4.黄金眼ddos</h4><p>此脚本非常简单暴力</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget http:&#x2F;&#x2F;pan.gov.duy.la&#x2F;data&#x2F;hjy.py</code></pre>\n<p>脚本设置默认50并发 持续30秒 时间有点短 可以自己去改改脚本 相信大家都能看懂<br>根据自己服务器稍调一下，然后给予<code>hjy.py</code>脚本权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">chmod +x hjy.py</code></pre>\n\n<p>命令示例如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;hjy.py http:&#x2F;&#x2F;baidu.com\n.&#x2F;hjy.py http:&#x2F;&#x2F;baidu.com -s 300 -w 300</code></pre>\n<p>参数解释：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>-u，–useragents要使用的带有用户代理的文件（默认值：随机生成）<br>-w，–workers并发工作者数（默认值：50）<br>-s，–sockets并发套接字数（默认值：30）<br>-m，–method使用’get’或’post’或’random’的HTTP方法（默认：get）<br>-d，-debug启用调试模式[更多详细输出]（默认值：False）</p></blockquote>\n<h4 id=\"5-cc\"><a href=\"#5-cc\" class=\"headerlink\" title=\"5.cc\"></a>5.cc</h4><p>以上就是博主自己整理的关于服务器测压的脚本了，有不足或不对的地方欢迎评论区留言！</p>\n","text":"项目的开展我们对项目进行部署之后，假设这个项目每天会有百万次的访问。我们的项目能不能做到稳定提供服务呢？所以我们需要进行一些测试。 如何进行测试一、首先是付费的世界上没有钱解决不了的问题，如果有 那一定是钱的金额不够。 1.阿里云提供的阿里云性能测试 PTS阿里云的性能测试PTS...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"server","slug":"server","count":3,"path":"api/categories/server.json"},{"name":"运维","slug":"server/运维","count":3,"path":"api/categories/server/运维.json"}],"tags":[{"name":"测压","slug":"测压","count":1,"path":"api/tags/测压.json"},{"name":"server运维","slug":"server运维","count":3,"path":"api/tags/server运维.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%BC%80%E5%B1%95\"><span class=\"toc-text\">项目的开展</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">如何进行测试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E9%A6%96%E5%85%88%E6%98%AF%E4%BB%98%E8%B4%B9%E7%9A%84\"><span class=\"toc-text\">一、首先是付费的</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E9%98%BF%E9%87%8C%E4%BA%91%E6%8F%90%E4%BE%9B%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-PTS\"><span class=\"toc-text\">1.阿里云提供的阿里云性能测试 PTS</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E8%85%BE%E8%AE%AF%E4%BA%91%E6%8F%90%E4%BE%9B%E7%9A%84%E6%B5%8B%E5%8E%8B%E5%A4%A7%E5%B8%88LM\"><span class=\"toc-text\">2.腾讯云提供的测压大师LM</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E4%B8%8D%E8%8A%B1%E9%92%B1%E7%9A%84\"><span class=\"toc-text\">二、不花钱的</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-http-load\"><span class=\"toc-text\">1.http_load</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%EF%BC%9A\"><span class=\"toc-text\">安装：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">基本用法：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-webbench\"><span class=\"toc-text\">2.webbench</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%EF%BC%9A-1\"><span class=\"toc-text\">安装：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">测试结果</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-Siege\"><span class=\"toc-text\">3.Siege</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%EF%BC%9A-2\"><span class=\"toc-text\">安装：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#sigh%E5%B8%B8%E8%A7%81%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">sigh常见参数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">使用方法：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%EF%BC%9A\"><span class=\"toc-text\">注意事项：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E9%BB%84%E9%87%91%E7%9C%BCddos\"><span class=\"toc-text\">4.黄金眼ddos</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-cc\"><span class=\"toc-text\">5.cc</span></a></li></ol></li></ol></li></ol>","author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}},"mapped":true,"prev_post":{"title":"如何访问外面的世界","uid":"cffce769e094a077f78f042c158e8eac","slug":"如何访问外面的世界","date":"2023-04-26T13:38:10.000Z","updated":"2023-04-26T13:44:49.774Z","comments":true,"path":"api/articles/如何访问外面的世界.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/03/159813159.png","text":"开篇今天怀着把游戏彻底戒掉的心，给windows甩一边去了，重装了deepin系统。作为入门级Linux，上手简单，适合小白，一来是deepin在Linux中我个人感觉还是比较美观的，二来想熟悉Linux的话，拿deepin练手比较好吧，毕竟有着软件商店的加持，中文社区也活跃，社...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"server","slug":"server","count":3,"path":"api/categories/server.json"},{"name":"运维","slug":"server/运维","count":3,"path":"api/categories/server/运维.json"}],"tags":[{"name":"server运维","slug":"server运维","count":3,"path":"api/tags/server运维.json"},{"name":"agency","slug":"agency","count":1,"path":"api/tags/agency.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}},"next_post":{"title":"记录一次DNS服务异常","uid":"375d4498230c2af87a8fb8060bbacd80","slug":"记录一次dns服务异常","date":"2023-04-26T13:21:51.000Z","updated":"2023-04-27T01:00:22.476Z","comments":true,"path":"api/articles/记录一次dns服务异常.json","keywords":null,"cover":"https://image.yunyuwu.cn/typecho/uploads/2022/03/886577829.jpg","text":"起因今天一觉睡醒，犹如执行任务一样打开了我的电脑，打算继续学习C语言。结果在打开浏览器之后，发现居然提示我找不到dns服务器地址。但是可以通过ip打开服务器的宝塔面板，这就让我一脸懵。 经过然后我试图使用之前安装的火绒安全里的网络修复小组件进行修复，以往都是可以修复的。但是今天居...","link":"","photos":[],"count_time":{"symbolsCount":784,"symbolsTime":"1 mins."},"categories":[{"name":"疑难杂症","slug":"疑难杂症","count":4,"path":"api/categories/疑难杂症.json"},{"name":"Win10","slug":"疑难杂症/Win10","count":4,"path":"api/categories/疑难杂症/Win10.json"}],"tags":[{"name":"win的小问题","slug":"win的小问题","count":2,"path":"api/tags/win的小问题.json"},{"name":"DNS异常","slug":"DNS异常","count":1,"path":"api/tags/DNS异常.json"}],"author":{"name":"小北","slug":"blog-author","avatar":"https://q1.qlogo.cn/g?b=qq&nk=2149264593&s=640","link":"/","description":"云起云散雾不止 <br /> @ <b>公众号：云与雾科技</b>","socials":{"github":"https://github.com/","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/","zhihu":"https://www.zhihu.com/","csdn":"https://blog.csdn.net/","juejin":"https://juejin.cn/","customs":{}}}}}