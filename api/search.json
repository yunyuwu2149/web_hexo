[{"id":"9857510a5378b0e7e0f29c4efa87cbc3","title":"Docker desktop使用","content":"数据迁移在完成docker desktop安装，正常启动后，Windows版本（Windows 10）WSL 2 版本 docker 默认程序安装到c盘，数据存放于C:\\Users\\当前用户名\\AppData\\Local\\Docker\\wsl\\data\\ext4.vhdx但我个人习惯把软件及数据都放到C盘外的盘符。为了实现这个操作，需要执行以下命令\n\n\n通过windows系统的界面操作停止docker的运行\n备份到处目前已有的数据\n\nwsl --export docker-desktop-data &quot;D:\\Docker\\wsl\\data\\docker-desktop-data.tar&quot;\n\n\n\n\n\n\n\n\n\n\n命令说明：将目前已有的数据备份到D:\\Docker\\wsl\\data\\目录下，并命名为docker-desktop-data.tar\n\n删除原有的数据\n\nwsl --unregister docker-desktop-data\n\n\n\n\n\n\n\n\n\n\n说明：解除当前的docker 数据虚拟盘映射，该操作后会删除原有的ext4.vhdx (数据未备份前请谨慎操作)\n\n导入数据到新盘\n\nwsl --import docker-desktop-data &quot;D:\\Docker\\wsl\\data&quot; &quot;D:\\Docker\\wsl\\data\\docker-desktop-data.tar&quot;\n\n\n\n\n\n\n\n\n\n\n说明：将备份数据导入到新的虚拟盘，且指定虚拟盘的存放路径为D:\\Docker\\wsl\\data，导入完成后在该目录下会存在一个ext4.vhdx的虚拟磁盘路径\n\n重启docker\n\n","slug":"Docker desktop使用","date":"2023-04-27T02:29:26.450Z","categories_index":"Note,Docker","tags_index":"Docker,Docker desktop","author_index":"小北"},{"id":"fa710a3a862b7de4eb59a689ff88e9e0","title":"Proteus 8 Professional使用","content":"\n\n\nkeywords\n常用元器件名称\n\n\n\nSWITCH\n一位开关\n\n\nSW-SPST\n一位开关\n\n\nSW-SPDT\n两位开关\n\n\nCAP\n无极性电容\n\n\nCAP-ELEC\n极性电容\n\n\nCRYSTAL\n晶振\n\n\nLED-BIBY\n发光二极管\n\n\nRES\n电阻\n\n\nBUTTON\n按钮\n\n\nAT89C51\n经典单片机\n\n\nBUS\n总线\n\n\nVCC\n电源\n\n\nGROUND\n接地\n\n\nBUZZER\n蜂鸣器\n\n\ndevice\n通用蜂鸣器\n\n\nactive\n有源蜂鸣器\n\n\n74HC273\n常用锁存器\n\n\n7SEG-MPX4-CA\n共阳极数码管\n\n\ncc表示共阴极\nca表示共阳极\n\n\nLM016L\n常用液晶\n\n\nPOT-HG\n滑动电阻（调整精度为1%）\n\n\nPOT-LIN\n滑动电阻（调整精度为10%）\n\n\nPOT-LOG\n滑动电阻（调整精度为10%）\n\n\nRP2\n排电阻\n\n\nDAC0832\nD&#x2F;A转换器\n\n\nPNP\n三极管\n\n\nNPN\n三极管\n\n\nLAMP\n灯泡\n\n\n默认终端\n一条线加一个空心圆\n\n\nRX8\n双列X8电阻网络\n\n\nSPEAKER\n扬声器\n\n\nOSCILLOSCOPE\n示波器\n\n\n74HC154\n译码器\n\n\nNOT-非门\n一个三角形前面有个圆圈\n\n\nDIPSWC\n拨码开关\n\n\nSW-SPDT\n单刀双掷开关\n\n\nDIODE\n二极管\n\n\nVSINE\n交流电源\n\n\nMOC3052\n双向光耦\n\n\nTRIAC\n三段双向可控硅开关\n\n\nG2R\n继电器系列\n\n\nRELAY\n继电器\n\n\n7406\n双极型晶体管\n\n\nMATRIX\n八乘八点阵\n\n\nTRAFFICLIGHTS\n交通指示灯\n\n\nSW-ROT-3\n单刀三掷开关\n\n\nPULSE\n脉冲发生器\n\n\nSINE\n正弦波发生器\n\n\nDIODE-LED\n发光二极管\n\n\nPHOTODLODE\n光敏二极管\n\n\n|常用元器件名称|keywords||常用51单片机|AT89C52||晶振|CRYSTAL||电阻|RES||排阻|RESPACK-8||瓷片电容|CAP||电解电容|CAP-ELEC||单刀单掷开关|SW-SPST||单刀双掷开关|SW-SPDT||按钮|BUTTON||发光二极管|LED||蜂鸣器|BUZZER||三极管|NPN&#x2F;PNP||数码管|7SEG|\n","slug":"Proteus 8 Professional使用","date":"2023-04-27T02:19:05.000Z","categories_index":"Note,电子技术","tags_index":"Note,电子技术","author_index":"小北"},{"id":"e5b51f2261d92d45f5f5c568078ab8b9","title":"每日60s早报","content":"\n","slug":"每日60s早报","date":"2023-04-26T13:55:40.000Z","categories_index":"杂谈","tags_index":"杂谈","author_index":"小北"},{"id":"82aa12966308ba5ae61baf954f363c6c","title":"fastboot模式无法连接电脑","content":"问题解决在fastboot模式，miui手机无法连接到电脑的问题提示代码：\n&lt; waiting for any device &gt;\n\n解决方法1.打开设备管理器fastboot模式下手机连接电脑，打开设备管理器\n2.选择设备点击其他设备，选择Android右击鼠标\n3.找驱动点击更新驱动程序再次点击浏览我的电脑以查找驱动程序再次点击让我从计算机上的可用驱动程序列表中选取再次点击通用串行总线设备然后在 厂商 选择列表中选取WinUSB设备 右侧 型号 选择框中选择ADB设备选择下一页 是出现如下页面就说明成功安装了驱动。\n","slug":"fastboot模式无法连接电脑","date":"2023-04-27T02:11:56.000Z","categories_index":"疑难杂症,Win10","tags_index":"疑难杂症","author_index":"小北"},{"id":"d9d72480c3a319b86a6b8ee22638f921","title":"Ping localhost 结果为 ::1，导致网络通讯故障","content":"起因由于需要在本地调试一个项目，安装了 小皮面板（phpstudy_pro） 调试过后就关闭了小皮面板，再过了几天再次打开小皮面板启动环境后调试时，发现localhost以及127.0.0.1``都无法访问，提示找不到页面404，检查hosts文件也没有发现问题。 然后打开cmd窗口ping localhost&#96;时发现了问题\n正在 Ping DESKTOP-4KB0MUI [::1] 具有 32 字节的数据:\n来自 ::1 的回复: 时间&lt;1ms\n来自 ::1 的回复: 时间&lt;1ms\n来自 ::1 的回复: 时间&lt;1ms\n\n::1 的 Ping 统计信息：\n    数据包：已发送&#x3D;4，已接收&#x3D;4，丢失&#x3D;0(0%丢失)，\n往返行程的估计时间（以毫秒为单位）：\n最短 &#x3D; 0ms,最长 &#x3D; 0ms,平均 &#x3D; 0ms\n\n问题原因Windows中的IPv6 DNS解析优先级高于IPv4 DNS解析\n解决方法1.第一步以管理员身份运行cmd查看优先级列表命令：netsh interface ipv6 show prefixpolicies\nC:\\Users\\小北&gt;netsh interface ipv6 show prefixpolicies\n查询活动状态...\n\n优先顺序    标签   前缀\n----------  -----  --------------------------------\n        50      0  ::1&#x2F;128\n        40      1  ::&#x2F;0            #此处::&#x2F;0为IPv6\n        35      2  ::ffff:0:0&#x2F;96   #此处::ffff:0:0&#x2F;96为IPv4\n        30      4  2002::&#x2F;16\n        10      5  2001::&#x2F;32\n         5      13  fc00::&#x2F;7\n         3      11  fec0::&#x2F;10\n         1      12  3ffe::&#x2F;16\n         1      3  ::&#x2F;96           #此处::&#x2F;96为IPv4\n\n2.第二步复制下方代码到cmd窗口依次执行\nnetsh int ipv6 set prefix ::&#x2F;96 50 0\nnetsh int ipv6 set prefix ::ffff:0:0&#x2F;96 40 1\nnetsh int ipv6 set prefix 2002::&#x2F;16 35 2\nnetsh int ipv6 set prefix 2001::&#x2F;32 30 3\nnetsh int ipv6 set prefix ::1&#x2F;128 10 4\nnetsh int ipv6 set prefix ::&#x2F;0 5 5\nnetsh int ipv6 set prefix fc00::&#x2F;7 3 13\nnetsh int ipv6 set prefix fec0::&#x2F;10 1 11\nnetsh int ipv6 set prefix 3ffe::&#x2F;16 1 12\n\n返回如下值\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix ::&#x2F;96 50 0\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix ::ffff:0:0&#x2F;96 40 1\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix 2002::&#x2F;16 35 2\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix 2001::&#x2F;32 30 3\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix ::1&#x2F;128 10 4\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix ::&#x2F;0 5 5\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix fc00::&#x2F;7 3 13\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix fec0::&#x2F;10 1 11\n确定\nC:\\Windows\\System32&gt;netsh int ipv6 set prefix 3ffe::&#x2F;16 1 12\n确定\n\n3.第三步再次查看优先值netsh interface ipv6 show prefixpolicies返回如下值\nC:\\Users\\小北&gt;netsh interface ipv6 show prefixpolicies\n查询活动状态...\n\n优先顺序    标签   前缀\n----------  -----  --------------------------------\n        50      0  ::&#x2F;96\n        40      1  ::ffff:0:0&#x2F;96\n        35      2  2002::&#x2F;16\n        30      3  2001::&#x2F;32\n        10      4  ::1&#x2F;128\n         5      5  ::&#x2F;0\n         3     13  fc00::&#x2F;7\n         1     12  3ffe::&#x2F;16\n         1     11  fec0::&#x2F;10\n\n\n4.第四步ping localhost返回\nC:\\Users\\小北&gt;ping localhost\n\n正在 Ping DESKTOP-4KB0MUI [127.0.0.1] 具有 32 字节的数据:\n来自 127.0.0.1 的回复: 字节&#x3D;32 时间&lt;1ms TTL&#x3D;128\n来自 127.0.0.1 的回复: 字节&#x3D;32 时间&lt;1ms TTL&#x3D;128\n来自 127.0.0.1 的回复: 字节&#x3D;32 时间&lt;1ms TTL&#x3D;128\n来自 127.0.0.1 的回复: 字节&#x3D;32 时间&lt;1ms TTL&#x3D;128\n\n127.0.0.1 的 Ping 统计信息:\n    数据包: 已发送 &#x3D; 4，已接收 &#x3D; 4，丢失 &#x3D; 0 (0% 丢失)，\n往返行程的估计时间(以毫秒为单位):\n    最短 &#x3D; 0ms，最长 &#x3D; 0ms，平均 &#x3D; 0ms\n至此该问题解决，可以正常访问127.0.0.1及localhost。\n参考文献：\n\nhttps://blog.csdn.net/weixin_36872950/article/details/95357937\n\n","slug":"Ping localhost 结果为 ::1，导致网络通讯故障","date":"2023-04-27T02:07:05.000Z","categories_index":"疑难杂症,Win10","tags_index":"win的小问题","author_index":"小北"},{"id":"de0361d73f1497ff186691fc815d87dd","title":"MathWorks MATLAB R2022b","content":"MathWorks MATLABMATLAB是美国MathWorks公司出品的商业数学软件，用于数据分析、无线通信、深度学习、图像处理与计算机视觉、信号处理、量化金融与风险管理、机器人，控制系统等领域。MATLAB是matrix&amp;laboratory两个词的组合，意为矩阵工厂（矩阵实验室），软件主要面对科学计算、可视化以及交互式程序设计的高科技计算环境。它将数值分析、矩阵计算、科学数据可视化以及非线性动态系统的建模和仿真等诸多强大功能集成在一个易于使用的视窗环境中，为科学研究、工程设计以及必须进行有效数值计算的众多科学领域提供了一种全面的解决方案，并在很大程度上摆脱了传统非交互式程序设计语言（如C、Fortran）的编辑模式。MATLAB和Mathematica、Maple并称为三大数学软件。它在数学类科技应用软件中在数值计算方面首屈一指。行矩阵运算、绘制函数和数据、实现算法、创建用户界面、连接其他编程语言的程序等。MATLAB的基本数据单位是矩阵，它的指令表达式与数学、工程中常用的形式十分相似，故用MATLAB来解算问题要比用C，FORTRAN等语言完成相同的事情简捷得多，并且MATLAB也吸收了像Maple等软件的优点，使MATLAB成为一个强大的数学软件。在新的版本中也加入了对C，FORTRAN，C++，JAVA的支持。\n\n安装安装环境：\n\nWin10\n无之前旧版本（强制要求）\n\n1.第一步从链接下载并解压文件，进入文件夹双击setup.exe，点击右上角高级选项，选择我有文件安装密钥，然后同意许可协议。\n2.第二步下载解压另一个叫License.7z的压缩包，打开license文件夹，点击安装密钥.txt查看安装密钥，复制并粘贴到软件输入框内。点击浏览，选择刚刚解压的压缩包内的该license.lic文件完整路径，点击下一步。然后选择程序的安装目录，再选择需要安装的产品组件，点击下一步后再次点击开始安装。\n3.第三步在软件安装完成后，文件管理器中打开软件的安装目录，将之前License.7z压缩包 解压出的Patch目录下的libmwlmgrimpl.dll程序，复制到安装目录lmgrimpl该文件夹下覆盖替换原文件。\n\n\n\n\n\n\n\n\n\n默认安装目录为C:\\ProgramFiles\\MATLAB\\R2022b\\bin\\win64\\matlab_startup_plugins\\lmgrimpl\n到此为止就完成了该软件的安装，有任何问题请联系站长，侵权必删。\n\n其他解压密码为：yunyuwuhttps://yunyuwu.lanzouv.com/iKHPE0eh0jpghttps://www.123pan.com/s/EGKKVv-eXoxh\n","slug":"MathWorks MATLAB R2022b","date":"2023-04-27T02:04:27.000Z","categories_index":"实用软件","tags_index":"实用软件","author_index":"小北"},{"id":"da289fe51893eaa278636c077b89ec39","title":"运行库修复工具合集","content":"截止至发文，所有的运行库都更新到官方最新的版本，收藏起来就对了。\n软件合集 下载地址：微软运行库：不含老运行库：https://gongming.lanzoui.com/iou5gr5o6cj包含老运行库：https://gongming.lanzoui.com/iFCFlr5o6vi\n.net框架：64位版本：https://gongming.lanzoui.com/iCHHur5o8cb32位版本：https://gongming.lanzoui.com/iCwLOr5o7ve\nDirectX修复工具：http://tmp.link/f/60e70e445e10\n","slug":"运行库修复工具合集","date":"2023-04-27T01:54:10.000Z","categories_index":"实用软件","tags_index":"实用软件","author_index":"小北"},{"id":"f9e71af5c85baf2849100d40efa0ddfa","title":"免费申请泛域名SSL证书","content":"SSL证书是什么？SSL证书是数字证书的一种，类似于驾驶证、护照和营业执照的电子副本。 因为配置在服务器上，也称为SSL服务器证书。 SSL 证书就是遵守 SSL协议 ，由受信任的数字证书颁发机构CA，在验证服务器身份后颁发，具有服务器身份验证和数据传输加密功能。 SSL证书通过在客户端浏览器和 Web服务器 之间建立一条SSL安全通道（Secure socket layer (SSL)安全协议是由Netscape Communication公司设计开发。 该安全协议主要用来提供对用户和服务器的认证；对传送的数据进行加密和隐藏；确保数据在传送中不被改变，即数据的完整性，现已成为该领域中全球化的标准。\nSSL证书分类现在SSL证书已经成为建站必不可少的一部分，基本上所有的站点都使用了https协议。在申请SSL证书的时候，我们了解到，证书有：单域名SSL证书、通配符SSL证书、多域SSL证书、多域通配符SSL证书。\n单域名SSL证书最实惠，但缺点是他并不包含任何子域名。而通配符SSL证书则包含了单个域、其所有相关页面以及无限数量的第一级子域，但是他不包含二级子域名。但这也对个人站点够用了，很少会有个人站点同时用到多个二级子域名。\n如何申请通配符SSL证书本文使用acme.sh申请和安装泛域名SSL证书。\n一、环境配置：\ncentos7.6\nnginx1.21\n阿里云域名服务商\n\n二、安装acme.sh1.安装socat模块。安装过程需要服务器已安装socat模块，没有安装的执行以下命令进行安装。\nyum install socat\n\n2.安装amce.shcurl https:&#x2F;&#x2F;get.acme.sh | sh \n# 或者：\nwget -O -  https:&#x2F;&#x2F;get.acme.sh | sh\n\n\n\n\n\n\n\n\n\n1.如果在执行后长时间没有反应，请ctrl+c后重新执行命令。acme.sh 安装在 ~&#x2F;.acme.sh 目录下。2.如果在安装后提示command not found则需要重新加载环境变量 source ~/.bashrc 或 source ~/.bash_profile 然后再执行下一步操作。\n以下是安装acme.sh时的一些高级选项及说明\n--home是要安装的自定义目录acme.sh。默认情况下，它安装到~&#x2F;.acme.sh\n--config-home是一个可写文件夹，acme.sh 会将所有文件（包括证书&#x2F;密钥、配置）写入那里。默认情况下，它在--home\n--cert-home是一个自定义目录，用于保存您颁发的证书。默认情况下，它保存在--config-home.\n--accountemail 是用于注册 Let&#39;s Encrypt 帐户的电子邮件，您将在此处收到续订通知电子邮件。\n--accountkey是保存您的帐户私钥的文件。默认情况下，它保存在--config-home.\n--user-agent 是用于发送到 Let&#39;s Encrypt 的用户代理标头值。\n--nocron在没有 cronjob 的情况下安装 acme.sh\n\n三、申请证书通常申请证书有两种方式\n1.http方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.acme.sh --issue -d example.com --webroot &#x2F;wwwroot&#x2F;example.com&#x2F;\n只需要指定域名, 并指定域名所在的网站根目录. acme.sh 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.\n如果你用的apache服务器, acme.sh还可以智能的从 apache的配置中自动完成验证, 你不需要指定网站根目录:\nacme.sh --issue  -d mydomain.com   --apache\n\n如果你用的nginx服务器, 或者反代, acme.sh还可以智能的从nginx的配置中自动完成验证, 你不需要指定网站根目录:\nacme.sh --issue  -d mydomain.com   --nginx\n注意, 无论是 apache 还是 nginx 模式, acme.sh在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置. 好处是你不用担心配置被搞坏, 也有一个缺点, 你需要自己配置 ssl 的配置, 否则只能成功生成证书, 你的网站还是无法访问https. 但是为了安全, 你还是自己手动改配置吧.\n2. 手动dns方式, 手动在域名上添加一条 txt 解析记录, 验证域名所有权.这种方式的好处是, 你不需要任何服务器, 不需要任何公网 ip, 只需要 dns 的解析记录即可完成验证. 坏处是，如果不同时配置Automatic DNS API，使用这种方式acme.sh将无法自动更新证书，每次都需要手动再次重新解析验证域名所有权。\nacme.sh --issue -d example.com -d &quot;*.example.com&quot; --dns \\\n--yes-I-know-dns-manual-mode-enough-go-ahead-please\n然后, acme.sh会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条txt记录即可.\n等待解析完成之后, 重新生成证书:\nacme.sh --renew -d example.com -d &quot;*.example.com&quot; \\\n--yes-I-know-dns-manual-mode-enough-go-ahead-please\n\n3.DNS API方式自动 DNS 验证方式需要使用域名解析服务商的 DNS API，像腾讯云（DNSPos）和阿里云都提供DNS API功能。\n如果你用的是腾讯云 DNSPod，在右上角头像下拉中选择API 密钥，点击“DNSPos Token”创建密钥：\n如果你用的是阿里云，在右上角头像下拉中选择AccessKey 管理，创建密钥：\n创建好密钥后，使用如下命令把它们的Id和Token或Secret放到环境变量中\n# 腾讯云\nexport DP_Id&#x3D;&quot;Id&quot;\nexport DP_Key&#x3D;&quot;Token&quot;\n\n# 阿里云\nexport Ali_Key&#x3D;&quot;AccessKeyId&quot;\nexport Ali_Secret&#x3D;&quot;AccessKeySecret&quot;\n然后再执行以下命令申请证书\n# 腾讯云\nacme.sh --issue --dns dns_dp -d example.com -d *.example.com\n\n# 阿里云\nacme.sh --issue --dns dns_ali -d example.com -d *.example.com\n\n四、安装证书在~/.acme.sh/example.com/目录生成的证书文件中，我们主要需要用到两个文件：*.cer和*.key。\n注意事项：\n证书生成成功后，默认保存在~/.acme.sh/example.com/目录中。请不要直接使用~/.acme.sh/目录下的文件，这里面的文件都是内部使用的，而且目录结构可能会变化，我们需要把证书复制到需要用的地方去。\ncer当作pem使用，只需要更改后缀即可。\n官方中文说明文档：https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\n官方项目地址：https://github.com/acmesh-official/acme.sh/\n\n","slug":"免费申请泛域名SSL证书","date":"2023-04-27T01:48:57.000Z","categories_index":"奇技淫巧","tags_index":"奇技淫巧","author_index":"小北"},{"id":"372f0439b3c1a8d1b5aa334a3f639af0","title":"私有化部署Rocket.Chat在线聊天平台","content":"Rocket.Chat是什么Rocket.Chat是一个开源的可高度定制的通信平台，用JavaScript开发，该项目功能齐全，并且还有各系统app。\n部署环境\n已经安装好Docker及Docker-compose（有宝塔 软件商店安装Docker管理器即可）必需品\nRocketChat的版本：v4.5.1（2022-3-12的最新版）\nNode.js —v14.18.3，Mongodb （需要4.2以上）\n\n开始部署# 创建并进入工作目录\nmkdir &#x2F;rocketchat\ncd &#x2F;rocketchat\n# 下载编排文件\ncurl -L https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;RocketChat&#x2F;Docker.Official.Image&#x2F;master&#x2F;compose.yml -O\n\n根据自己的需求修改编排文件后保存，运行以下命令启动服务：\ndocker-compose up -d\n\n在经过一段时间的等待，服务器启动后访问http://ip:3000\n然后我们跟着安装向导的指引一步步填写信息完成安装即可。\n\n反向代理及使用app配置反向代理想使用域名访问的话，我们可以反向代理Rocket.Chat的端口，因为我安装了宝塔，所以操作很简单，然后配置SSL证书即可。\n但如果想要使用安卓移动应用使用的话，必须使用SSL（https）才可以，SSL可以在域名商或者其他平台进行申请，宝塔可以直接申请Let’s Encrypt证书。\n做完这一步之后，我们使用app连接，会发现提示Websocket已于此伺服器上禁用。请联络系统管理员。这是因为nginx没有启用Websocket。\nNginx开启Websocket找到nginx.conf编辑它，在**http上下文中**增加如下配置，\nmap $http_upgrade $connection_upgrade &#123;\n default upgrade;\n &#39;&#39;   close;\n&#125;\n再**server上下文中**增加如下配置\n  location &#x2F; &#123;\n   proxy_pass http:&#x2F;&#x2F;websocket;\n   proxy_read_timeout 300s;\n   proxy_set_header Host $host;\n   proxy_set_header X-Real-IP $remote_addr;\n   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n   proxy_http_version 1.1;\n   proxy_set_header Upgrade $http_upgrade;\n   proxy_set_header Connection $connection_upgrade;\n&#125;\n&#125;\n最后，我们到反向代理配置文件中添加如下代码\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection $connection_upgrade;\n\n到这，教程就结束了，可以正常使用app了。\n参考资料\nRocket.Chat官方文档\nNginx代理WebSocket方法\n\n","slug":"私有化部署Rocket-Chat在线聊天平台","date":"2023-04-27T01:44:44.000Z","categories_index":"实用项目,实用Docker项目","tags_index":"Docker,实用项目,实用Docker项目","author_index":"小北"},{"id":"8254044e3244d0ee31edb99fcba5d35b","title":"如何安装Nginx Proxy Manager","content":"什么是Nginx Proxy Manager？这是官网的一段话：This project comes as a pre-built docker image that enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.\n\n\n\n\n\n\n\n\n\n该项目作为一个预构建的 docker 镜像提供，使您能够轻松地转发到在家里或其他地方运行的网站，包括免费的 SSL，而无需对 Nginx 或 Letsencrypt 有太多了解。\n说白了，就是可以通过这个工具更简单方便的配置反向代理的配置及SSL证书的设置。\n\n搭建环境\n一台服务器 必需\n已经安装了Docker及Docker-compose 必需\n\n搭建过程1.新建目录新建一个目录存放Nginx Proxy Manager的配置和项目文件\nmkdir ngingx_proxy_manager &amp;&amp; cd ngingx_proxy_manager\n\n2.新建文件新建docker-compose.yml文件并复制以下内容\nversion: &quot;3&quot;\nservices:\n  app:\n    image: &#39;jc21&#x2F;nginx-proxy-manager:latest&#39;\n    restart: unless-stopped\n    ports:\n      # These ports are in format &lt;host-port&gt;:&lt;container-port&gt;\n      - &#39;80:80&#39; # Public HTTP Port\n      - &#39;443:443&#39; # Public HTTPS Port\n      - &#39;81:81&#39; # Admin Web Port\n      # Add any other Stream port you want to expose\n      # - &#39;21:21&#39; # FTP\n    environment:\n      DB_MYSQL_HOST: &quot;db&quot;\n      DB_MYSQL_PORT: 3306\n      DB_MYSQL_USER: &quot;npm&quot;\n      DB_MYSQL_PASSWORD: &quot;npm&quot;\n      DB_MYSQL_NAME: &quot;npm&quot;\n      # Uncomment this if IPv6 is not enabled on your host\n      # DISABLE_IPV6: &#39;true&#39;\n    volumes:\n      - .&#x2F;data:&#x2F;data\n      - .&#x2F;letsencrypt:&#x2F;etc&#x2F;letsencrypt\n    depends_on:\n      - db\n\n  db:\n    image: &#39;jc21&#x2F;mariadb-aria:latest&#39;\n    restart: unless-stopped\n    environment:\n      MYSQL_ROOT_PASSWORD: &#39;npm&#39;\n      MYSQL_DATABASE: &#39;npm&#39;\n      MYSQL_USER: &#39;npm&#39;\n      MYSQL_PASSWORD: &#39;npm&#39;\n    volumes:\n      - .&#x2F;data&#x2F;mysql:&#x2F;var&#x2F;lib&#x2F;mysql\n\n3.启动服务docker-compose up -d\n\n4.放行服务器81端口可以通过控制台或者宝塔面板亦或者命令行\n# 查看防火墙状态\nsystemctl status firewalld\n\n# 开启防火墙\nsystemctl start firewalld\n\n#查看是否放行了81端口\nfirewall-cmd --query-port&#x3D;81&#x2F;tcp\n\n#放行81端口\nfirewall-cmd --zone&#x3D;public --add-port&#x3D;81&#x2F;tcp --permanent\n\n#刷新生效\nfirewall-cmd --reload\n\n4.访问控制台通过http://你的服务器ip:81访问web管理界面默认账号密码为\nEmail:    admin@example.com\nPassword: changeme\n在输入账号密码进入后，会强制要求修改账号密码，然后就可以进行我们的配置了。\n","slug":"如何安装Nginx Proxy Manager","date":"2023-04-27T01:41:17.000Z","categories_index":"实用项目,实用Docker项目","tags_index":"Docker,实用项目,实用Docker项目","author_index":"小北"},{"id":"3baa8b2fb2cef5a86451a5fecc1d8f52","title":"自建SearXNG搜索引擎","content":"前言在国内我们常用的搜索引擎有：百度、360、搜狗等，但国内搜索引擎是什么样子大家有目共睹。不说那搜索的结果是否是你想要的结果，再看看那“琳琅满目”的广告，指不定就看到一些奇奇怪怪的画面了。如果你身边刚好有你的亲戚朋友，那尴尬场面完全可以“重开”了，这是我们国产的搜索引擎。公然最好用的搜索引擎Google因为一些原因，在国内无法访问。有一部分人有些电脑常识，会使用bing，这是相对简洁好用的一个搜索引擎，大家会拿他当作Google的替代品。\nSearXNG这是一个尊重隐私 可定制的元搜索引擎（原文为：Privacy-respecting, hackable metasearch engine）\n搭建环境\n一台vps服务器（建议是海外不然一些搜索引擎依然无法使用）必需品\n已经安装好Docker及Docker-compose（有宝塔 软件商店安装Docker管理器即可）必需品\n域名，可有可无\n\n搭建过程1.拉取镜像docker pull searxng&#x2F;searxng\n\n2.创建容器打开宝塔，点击创建容器，按以下配置 对外端口根据实际使用情况更改\n3.检查是否正常访问访问http://你的服务器ip:8180查看是否可以正常访问，如果不能访问请放行安全组和端口。如果没有域名，教程到这里就已经结束了，感谢观看。\n\n\n\n\n\n\n\n\n\n端口根据自己实际情况填写访问，8180只是演示\n4.反向代理如果有域名的话可以利用Nginx Proxy Manager进行反向代理，达到使用域名访问的效果。\n\n\n\n\n\n\n\n\n\n如果使用了宝塔面板，也可以直接在网站反向代理设置中进行反向代理操作\n安装Nginx Proxy Manager可以查看另一篇文章 传送门\n4.1.点击代理主机\n4.2.添加代理主机\n4.3.配置选项如果Nginx Proxy Manager和reader在同一台服务器上，那就可以填入容器ip及容器端口\n\n4.4.再次编辑主机选项\n4.5.申请SSL证书\n4.6.再次配置ssl设置\n设置默认搜索引擎此处演示浏览器为Google Chrome 其他浏览器设置方法都类似进入浏览器后点击右上方三个点，进入浏览器设置页\n点击搜索引擎 再点击管理搜索引擎和网站搜索\n向下滑动找到添加\n搜索引擎字段输入搜索引擎的标签或名称。快捷字词一栏也随意输入要使用的快捷字词网址格式：（记得将域名改为自己的）\nhttp:&#x2F;&#x2F;search.yunyuwu.cn&#x2F;search?q&#x3D;6%s&amp;language&#x3D;zh-CN&amp;time_range&#x3D;None&amp;safesearch&#x3D;0&amp;categories&#x3D;general\n\n最后将其设置为默认搜索引擎（可选）\n如果不想将其设置为默认搜索引擎，可以在地址栏输入刚刚设置的快捷字词来使用searxng搜索。\n相关参考资料\nhttps://hub.docker.com/r/searxng/searxng\nhttps://github.com/searxng/searxng-docker\n\n","slug":"自建SearXNG搜索引擎","date":"2023-04-27T01:36:59.000Z","categories_index":"实用项目,实用Docker项目","tags_index":"Docker,实用项目,实用Docker项目","author_index":"小北"},{"id":"fbcfb7086db5a0f2fb932cbf3b5597a1","title":"歌曲内置歌词","content":"起始前段时间将自己喜欢的音乐统统都下载到了自己的硬盘里，只因为我觉得自己喜欢的歌曲逐渐的在网络上找不到了。可能是因为版权纷争，亦或者是因为其他原因，反正是慢慢的都找不到了 ::(小乖) ，所以不得不将现在还能找到的下载到本地。\n但是在下载到本地后，我发现在离线下打开歌曲没有办法看到歌词，检查后发现是没有下载lrc文件。于是又将每个歌曲的lrc文件下载了一遍。之后又发现这样不方便，而且有些播放器他不会识别。于是想到了内嵌歌词来解决。\n内置教程1.下载并安装foobar2000foobar2000汉化版的下载链接在另一篇文章：下载链接\n2.添加歌曲列表打开软件后，点击左上角文件，选择歌曲所在目录\n点击要添加的歌曲再点击歌词的选择框，右击鼠标点选择歌词，选择要添加的歌词文件。\n3.内置歌词在歌词的选择框内右击鼠标，然后选择保存歌词至标签\n4.检查是否内置成功1选择刚刚添加了歌词的歌曲右击鼠标，点击属性查看是否有LYRICS标签，以及是否有内容\n5.检查是否内置成功2PC端使用PotPlayer软件播放 查看是否有歌词安卓端使用Aplayer软件播放 查看是否有歌词\n注意事项\n歌曲格式需要是flac格式、MP3格式亲测内嵌无效\n如果没有提前下载好歌词，foobar2000是可以搜索歌词的\n\n","slug":"歌曲内置歌词","date":"2023-04-27T01:28:37.000Z","categories_index":"奇技淫巧","tags_index":"奇技淫巧","author_index":"小北"},{"id":"3216f7504e047cfab1876d9e692d5c53","title":"foobar2000汉化版","content":"———————–【软件介绍】———————-foobar2000 是一个 Windows 平台下的高级音频播放器.包含完全支持 unicode 及支持播放增益的高级标签功能. 特色：\n\n支持的音频格式: MP3, MP4, AAC, CD Audio, WMA, Vorbis,FLAC, WavPack, WAV, AIFF, Musepack, Speex, AU, SND, 通过第三方插件将支持更多的格式.\n\n\n完全支持 Unicode\n\n轻松定制用户界面布局\n\n高级标签功能\n\n可以使用转换器组件对所有支持的格式转换编码格式\n\n支持播放增益\n\n可自定义快捷键\n\n开放的组件体系结构允许第三方开发者来扩展播放器的功能。\n\n\n###———————–【软件截图】———————-\n###———————–【版本说明】———————-\n汉化版加入了以下插件（均为可选安装）：\nAPE 解码器\nDTS 解码器\nTTA 解码器\nTAK 解码器\nSACD 解码器\nDVD-Audio 解码器\nESLyric(歌词)\n播放统计信息\nASIO 输出\nWASAPI 输出\nDSD 转换器\n[RainBowText]转自 Asion 博客 https://www.cnblogs.com/asionwu[/RainBowText]\n","slug":"foobar2000汉化版","date":"2023-04-27T01:25:27.000Z","categories_index":"实用软件","tags_index":"实用软件","author_index":"小北"},{"id":"b1577de1db6345c6aa89e466932e67dd","title":"服务器部署code-server","content":"code-server是什么Coder Technologies Inc, an Austin TX company公司开源了一个基于服务器端的VScode--code-server只要服务器端配置好code-server，就可以在任何浏览器上使用VScode 。随时随地只要你有台设备接入了公共网络就可以写代码，只需要你有浏览器即可。这就是code-server\n部署步骤：第一步将源码下载到服务器并解压[button color&#x3D;”success” url&#x3D;”https://github.com/coder/code-server/releases/“ outline&#x3D;”” target&#x3D;”_blank”]源码下载地址[&#x2F;button]\n第二步在终端中打开解压的目录并执行下列命令，即可访问网页，访问地址为：你的公网ip:端口\n\n\n\n\n\n\n\n\n\n8080端口可以更改\n.&#x2F;bin&#x2F;code-server --host 0.0.0.0 --port 8080\n\n第三步访问后发现需要密码，然后我们进入配置文件并修改\ncd &#x2F;root&#x2F;.config&#x2F;code-server\n将原本127.0.0.1修改为0.0.0.0\n\n\n\n\n\n\n\n\n\n端口也可以修改为合适的端口\nbind-addr: 0.0.0.0:8080\nauth: password\npassword: xxxxxxxxxxxxxxx\ncert: false\n\n至此code-server部署完成，以下是优化步骤（不需要的可以略过）\n优化问题\n解决终端断开连接后关闭服务\n解决ip加端口访问繁琐问题\n\n问题一1.第一步在code-server目录下新建code-server-start.sh文件，并写入\nexport PASSWORD&#x3D;&quot;123456&quot;\n#端口可以自己指定，其他不改，后台运行\nnohup .&#x2F;bin&#x2F;code-server --port 8080 --host 0.0.0.0 --auth password &gt; run.log 2&gt;&amp;1 &amp;  \necho $! &gt; save_pid.txt\n不需要密码则\nnohup .&#x2F;bin&#x2F;code-server --port 8080 --host 0.0.0.0 --auth none &gt; run.log 2&gt;&amp;1 &amp;  \necho $! &gt; save_pid.txt\n\n第二步新建stop.sh文件并写入\nkill -9 &#39;cat save_pid.txt&#39;  # 关闭这个进程，关闭code-server服务\n\n第三步在终端执行\n.&#x2F;code-server-start.sh\n执行后并不会输出反馈，然后我们就可以关掉终端，访问code-server了。\n\n\n\n\n\n\n\n\n\n想查看日志可以在目录下的run.log中查看\n问题二第一步新建一个纯静态站点，然后点击反向代理依照自己的端口号进行设置\n第二步修改反向代理配置文件\nproxy_set_header REMOTE-HOST $remote_addr;\n在这段下边加入下方三行代码\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection upgrade;\nproxy_set_header Accept-Encoding gzip;\n这时候即可使用我们的域名访问code-server\n最后、本文借鉴了大佬@Brains - 灵感乌托邦的配置，感谢大佬慷慨分享！\n","slug":"服务器部署code-server","date":"2023-04-27T01:18:48.000Z","categories_index":"实用项目,实用Web项目","tags_index":"实用项目","author_index":"小北"},{"id":"6981ae221d18f14e9e729a140245378f","title":"使用Docker部署YesPlayMusic","content":"YesPlayMusic是什么YesPlayMusic是一个颜值很高的第三方音乐播放器，他没有复杂的界面，支持网易云账号登录、MV播放、没有任何的社交功能、显示歌词、暗色模式等功能，比网易云音乐本身要好看很多。\n如何在没有安装客户端的情况下使用他来听歌，那我们可以使用Docker部署在服务器上。\n\n\n\n\n\n\n\n\n\n（绝对不是为了高逼格的摸鱼 ::(滑稽)）\n第一步首先我们使用宝塔的软件商店安装Docker管理器\n第二步等待安装完成后，在终端输入下方代码拉取镜像。\n\n\n\n\n\n\n\n\n\n如果该镜像失效可以去自己找别的镜像 地址：https://hub.docker.com/\ndocker pull fogforest&#x2F;yesplaymusic\n\n第三步等待拉取完成后，再输入下方代码启动Docker容器，终端输出容器id则证明部署完成。\n\n\n\n\n\n\n\n\n\n8080是端口号，可以根据自己实际需求修改\ndocker run -d --name YesPlayMusic -p 8080:80 fogforest&#x2F;yesplaymusic\n\n至此就部署完成了，之后是可选项（反向代理实现域名访问）\n反向代理第一步、创建新站点\n第二步、设置反向代理\n\n总结做完以上操作就可以使用我们的域名进行访问部署的站点。\n\n需要注意的是端口不要和别的项目冲突了，在部署的时候好好回忆一下。\n另外，如果想使用ssl访问，可以关闭掉反代后进行申请。\n\n","slug":"使用Docker部署YesPlayMusic","date":"2023-04-27T01:11:10.000Z","categories_index":"实用项目,实用Docker项目","tags_index":"Docker,实用项目,实用Docker项目","author_index":"小北"},{"id":"c9b8e0da1ed76140e1d6a6b5edc32db4","title":"Markdown首行空两格解决办法","content":"&amp;emsp;&amp;emsp;由于Markdown主要是针对英文的，对中文首行缩进极其不友好。\n&amp;emsp;&amp;emsp;在你用Markdown编辑器编辑时，你打出两个空格，他并不会显示。\n&amp;emsp;&amp;emsp;在需要打出空格的地方添加如下代码：\n\n\n\n代码\n添加后的效果\n\n\n\n一个汉字大小的空格\n&amp;emsp;或&amp;#8195;\n\n\n半个汉字大小的空格\n&amp;ensp;或&amp;#8194;\n\n\n效果展示（仅供参考）：\n&amp;emsp;这是一个汉字大小的首行&amp;ensp;这是半个汉字大小的首行这是没添加的首行\n","slug":"Markdown首行空两格解决办法","date":"2023-04-27T01:08:41.000Z","categories_index":"Note,Markdown","tags_index":"Markdown","author_index":"小北"},{"id":"9bbe250cd9e41932ae82c5713812968e","title":"Linux系统结构","content":"一、Linux系统结构\n1.Linux内核是什么？操作系统是一个用来和硬件打交道并为用户程序提供一个有限服务集的低级支撑软件。一个计算机系统是一个硬件和软件的共生体，它们互相依赖，不可分割。计算机的硬件，含有外围设备、处理器、内存、硬盘和其他的电子设备组成计算机的发动机。但是没有软件来操作和控制它，自身是不能工作的。完成这个控制工作的软件就称为操作系统，在Linux的术语中被称为“内核”，也可以称为“核心”。Linux内核的主要模块（或组件）分以下几个部分：存储管理、CPU和进程管理、文件系统、设备管理和驱动、网络通信，以及系统的初始化（引导）、系统调用等。\n2.shell是什么Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。是在Linux内核与用户之间的解释器程序，现在Linux通常指&#x2F;bin&#x2F;bash解释器来负责向内核翻译以及传达用户&#x2F;程序指令，shell相当于操作系统的“外壳”\n\n\n\n\n\n\n\n\n\n接收用户的命令，经过转换，交给内核去执行\n为什么使用shell为了简化操作和保证内核的安全。\n#查看当前shell\necho $SHELL\n#切换shell\nchsh -s &#x2F;bin&#x2F;csh\n#查看shell列表\nchsh -l\n\n\n\n\nshell名称\n程序路径\n\n\n\nbonrne shell\n&#x2F;usr&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;sh\n\n\nC Shell\n&#x2F;usrbin&#x2F;csh\n\n\nK Shell\nusr&#x2F;bin&#x2F;ksh\n\n\nBourne Again Shell\n&#x2F;bin&#x2F;bash\n\n\nZ Shell\n&#x2F;bin&#x2F;zsh或&#x2F;usr&#x2F;bin&#x2F;zsh\n\n\nWindows:cmd、Power Shell\n\n3.Linux文件系统Linux系统一切皆文件\n\n\n\n\n\n\n\n\n\n普通文件、目录、进程（&#x2F;proc）、输入输出设备（&#x2F;dev）、网络字节流socket、链接文件、管道文件\nLinux系统没有Windows盘符的概念，所有的文件都在根目录/下\nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n\n\n\n\n目录\n说明\n备注\n\n\n\nbin\n存放普通用户可执行的指令\n即使在单用户模式下也能够执行处理\n\n\nboot\n开机引导目录\n包括Linux内核文件与开机所需要的文件\n\n\ndev\n设备目录\n所有的硬件设备及周边均放置在这个设备目录中\n\n\netc\n各种配置文件目录\n大部分配置属性均存放在这里\n\n\nlib&#x2F;lib64\n开机时常用的动态链接库\nbin及sbin指令也会调用对应的lib库\n\n\nmedia\n可移除设备挂载目录\n类似软盘 U盘 光盘等临时挂放目录\n\n\nmnt\n用户临时挂载其他的文件系统\n额外的设备可挂载在这里,相对临时而言\n\n\nopt\n第三方软件安装目录\n现在习惯性的放置在/usr/local中\n\n\nproc\n虚拟文件系统\n通常是内存中的映射,特别注意在误删除数据文件后，比如DB，只要系统不重启,还是有很大几率能将数据找回来\n\n\nroot\n系统管理员主目录\n除root之外,其他用户均放置在/home目录下\n\n\nrun\n系统运行时所需文件\n以防止在/var/run中,后来拆分成独立的/run目录。重启后重新生成对应的目录数据\n\n\nsbin\n只有root才能运行的管理指令\n跟bin类似,但只属于root管理员\n\n\nsrv\n服务启动后需要访问的数据目录\n\n\n\nsys\n跟proc一样虚拟文件系统\n记录核心系统硬件信息\n\n\ntmp\n存放临时文件目录\n所有用户对该目录均可读写\n\n\nusr\n应用程序放置目录\n\n\n\nvar\n存放系统执行过程经常改变的文件\n\n\n\n比较重要的几个目录：\n\n&#x2F;etc这个是系统中的配置文件，如果更改了该目录下的某个文件可能会导致系统不能启动。\n\n&#x2F;bin, &#x2F;sbin, &#x2F;usr&#x2F;bin, &#x2F;usr&#x2F;sbin: 这是系统预设的执行文件的放置目录，比如ls就是在/bin/ls 目录下的。值得提出的是，/bin, /usr/bin是给系统用户使用的指令（除root外的通用户），而/sbin, /usr/sbin则是给root使用的指令。\n\n&#x2F;var： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在/var/log目录下，另外mail的预设放置也是在这里。\n\n\n用户目录用户目录位于&#x2F;home&#x2F;下，例如&#x2F;home&#x2F;xiaobei\n[root@iZ4q179d4eyom2Z home]# cd &#x2F;home\n[root@iZ4q179d4eyom2Z home]# ls\nxiaobei\n\n###登录信息\n[root@localhost &#x2F;]#\n#Linux的bash解析器终端用来显示主机名和当前用户的标识；\n\n# root表示当前用户叫root（系统管理员账户）\n# localhost表示当前使用的主机名叫localhost（没有设置系统名字的时候默认名称是localhost）\n# &#x2F; 表示你当前所处的目录位置 (这里的&#39;&#x2F;&#39;表示你当前在根目录下)\n\n\n###相对路径与绝对路径绝对路径从/开始的路径叫绝对路径、如：\n[root@localhost &#x2F;]# cd &#x2F;home&#x2F;xiaobei\n[root@localhost &#x2F;]# ls &#x2F;usr\n相对路径从当前位置开始描述的路径为相对路径，如：\n[root@localhost &#x2F;]# cd ..&#x2F;..&#x2F;\n[root@localhost &#x2F;]# ls abc&#x2F;def\n\n\n. 和 ..每个目录下都有**.和..**\n. 表示当前目录\n\n.. 表示上一级目录，即父目录\n\n    例如这里切换路径时候\n\n# 从 &#x2F; 根目录切换到 home目录\n[root@localhost &#x2F;]# cd home\n\n# 确认路径&#x2F;home\n[root@localhost home]# pwd\n&#x2F;home\n\n# 切换到当前目录cd .  目录无变化\n[root@localhost home]# cd .\n\n# 切换到当前目录cd ..  目录回到上一级根目录\n[root@localhost home]# cd ..\n[root@localhost &#x2F;]# \n\n\n\n\n\n\n\n\n\n 根目录下的 . 和 .. 都表示当前目录\n\n二、Linux权限Linux的权限有RWX三种r(Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。w(Write,写入)：对文件而言，具有新增,修改,删除文件内容的权限；对目录来说，具有新建，删除，修改，移动目录内文件的权限。x(eXecute，执行)：对文件而言，具有执行文件的权限；对目录来说该用户具有进入目录的权限。\n\n目录的只读访问不允许使用cd进入目录，必须要有执行的权限才能进入。\n只有执行权限只能进入目录，不能看到目录下的内容，要想看到目录下的文件名和目录名，需要可读权限。\n一个文件能不能被删除，主要看该文件所在的目录对用户是否具有写权限，如果目录对用户没有写权限，则该目录下的所有文件都不能被删除，文件所有者除外\n目录的w位不设置，即使你拥有目录中某文件的w权限也不能写该文件\n\n文件权限&amp;emsp;&amp;emsp;文件权限就是文件的访问控制权限，即哪些用户和组群可以访问文件以及可以执行什么样的操作。\n&amp;emsp;&amp;emsp;Unix&#x2F;Linux 系统是一个典型的多用户系统，不同的用户处于不同的地位，对文件和目录有不同的访问权限。为了保护系统的安全性Unix&#x2F;Linux系统除了对用户权限作了严格的界定外，还在用户身份认证、访问控制、传输安全、文件读写权限等方面作了周密的控制。\n&amp;emsp;&amp;emsp;在 Unix&#x2F;Linux 中的每一个文件或目录都包含有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。\n访问用户&amp;emsp;&amp;emsp;通过设定权限可以从以下三种访问方式限制访问权限：\n只允许用户自己访问（所有者） 所有者就是创建文件的用户，用户是所有用户所创建文件的所有者，用户可以允许所在的用户组能访问用户的文件。\n允许一个预先指定的用户组中的用户访问（用户组） 用户都组合成用户组，例如，某一类或某一项目中的所有用户都能够被系统管理员归为一个用户组，一个用户能够授予所在用户组的其他成员的文件访问权限。\n允许系统中的任何用户访问（其他用户） 用户也将自己的文件向系统内的所有用户开放，在这种情况下，系统内的所有用户都能够访问用户的目录或文件。在这种意义上，系统内的其他所有用户就是 other 用户类\n\n访问权限&amp;emsp;&amp;emsp;用户能够控制一个给定的文件或目录的访问程度，一个文件或目录可能有读、写及执行权限：\n读权限（r） 对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。\n写权限（w） 对文件而言，具有新增、修改文件内容的权限；对目录来说，具有删除、移动目录内文件的权限。\n可执行权限（x） 对文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。\n\n&amp;emsp;&amp;emsp;注意：通常，Unix&#x2F;Linux系统只允许文件的属主(所有者)或超级用户改变文件的读写权限。\n[root@localhost &#x2F;]# ls -l\n总用量 20\nlrwxrwxrwx.   1 root root    7 8月  31 15:48 bin -&gt; usr&#x2F;bin\ndr-xr-xr-x.   5 root root 4096 8月  31 15:58 boot\n...\n\n&amp;emsp;&amp;emsp;我们来拆解结构，这里面我只列了根目录下的一部分内容\n&amp;emsp;&amp;emsp;用到 ls -l 命令查看当前文件夹下详细信息，具体的命令和参数，后面会深入讲解\n&amp;emsp;&amp;emsp;我们需要关注的是文件或目录的权限情况\nl  rwx  rwx  rwx\nd  r-x  r-x  r-x\n\n# 首先第一个字母 在Linux中第一个字符代表这个文件是目录、文件或链接文件等等。\n[ d ] 表示目录\n[ l ] 表示为链接文档(link file)\n[ - ] 表示为文件\n[ b ] 表示为装置文件里面的可供储存的接口设备(可随机存取装置)\n[ c ] 表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)\n\n# 其次接下来的字符中，以三个为一组，且均为 [ rwx ] 的三个参数的组合\n[ r ]代表可读(read)\n[ w ]代表可写(write)\n[ x ]代表可执行(execute)\n[ - ]\n\n# 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。\n\n  此时问题来了那么这三组一样是有什么区分尼？\n# 这里就涉及到刚才所描述的访问用户权限\n# 所有者    所有者表示该文件的所有者\n# 用户组    表示当前用户再同一组\n# 其他用户  允许系统中的任何用户访问，系统内的其他所有用户就是 other 用户类\n\n# 可以将这个权限进行类比，如我的篮球，\n# 所有者表示的是我可以玩 \n# 用户组表示，我可以借给我同班同学玩\n# 其他用户表示，我可以借给其他班的同学玩\n\n\n文件属主与属组\n&amp;emsp;&amp;emsp;对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。\n&amp;emsp;&amp;emsp;同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。\n&amp;emsp;&amp;emsp;文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。\n&amp;emsp;&amp;emsp;因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。\n[root@localhost &#x2F;]# ls -l\n总用量 20\n...\ndr-xr-xr-x.   5 root root 4096 8月  31 15:58 boot\n...\n\n[root@localhost &#x2F;]# cd &#x2F;home\n[root@localhost home]# ls -l\n总用量 0\ndrwx------. 2 xiaobei xiaobei 83 9月   2 15:54 xiaobei\n\n\n# 在以上实例中，xiaobei 文件是一个目录文件，属主和属组都为 xiaobei，属主有可读、可写、可执行的权限；与属主同组的用户无权限读写执行；其他用户也无权限读写执行\n\n# 对于 root 用户来说，一般情况下，文件的权限对其不起作用。\n\n\n","slug":"Linux系统结构","date":"2023-04-27T01:04:17.000Z","categories_index":"Note,Linux","tags_index":"Note,Linux","author_index":"小北"},{"id":"31089f2d2a9555f32a563f63038814e9","title":"在win10下Tab+Alt键不能切换窗口问题","content":"在前两天重装系统后遇到Tab+Alt键不能切换窗口问题，在找到解决办法后发布文章备忘。\n\n打开注册表编辑器\n进入如下路径计算机\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\n在右侧寻找AltTabSettings的键值对，没有就新建一个、类型为DWORD(32位)值 ，然后赋值为0即可\n重启计算机即可\n\nPS:值为0是win10风格、为1是xp风格\n","slug":"在win10下Tab-Alt键不能切换窗口问题","date":"2023-04-27T00:52:47.000Z","categories_index":"疑难杂症,Win10","tags_index":"疑难杂症","author_index":"小北"},{"id":"80516d2f399b0cf21c37bf4821b8bed7","title":"实用油猴脚本合集","content":"什么是油猴脚本？Tampermonkey（油猴），是一款免费的基于浏览器的扩展插件，它本身并不具备能影响浏览器的功能，需要安装其他脚本来发挥特殊的功能。也就是说，他是一个脚本管理器。\n目前它适用于大部分的浏览器，Chrome、Microsoft Edge、Safari、Opera Next和Firefox。\n虽然有些受支持的浏览器拥有原生的用户脚本支持，但Tampermonkey将在您的用户脚本管理方面提供更多的便利。 它提供了诸如便捷脚本安装、自动更新检查、标签中的脚本运行状况速览、内置的编辑器等众多功能， 同时Tampermonkey还有可能正常运行原本并不兼容的脚本。\n如何安装（使用）？1.我们可以访问官网，然后选择上方对应的浏览器，点击下载。左边黑色的是稳定版，右边红色的是测试版。这边建议安装黑色的，以免出现一些不好的bug。\n\n2.如果你没有科学上网，这边有已经打包好的扩展，在浏览器搜索框输入chrome://extensions/后回车，然后打开右上角的开发模式。将下载好的后缀为：.crx的文件拖入浏览器该页面中即可。[button color&#x3D;”success” url&#x3D;”https://yunyuwu.lanzouh.com/iP0mo045urkh“ outline&#x3D;”” target&#x3D;”_blank”]离线安装包下载地址[&#x2F;button]\n3.如果拖入.crx后缀的文件后提示：该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的。那我们就将.crx文件重命名，后缀修改为.zip然后进行放到合适的位置解压，然后到扩展程序页面，将开发者模式打开，点击左上角加载已解压的扩展程序，选择解压出来的文件夹即可。提示：如果提示插件错误的话，不用管，不影响正常使用。\n然后我们访问脚本下载站，常用的油猴脚本下载站有：Greasy Fork、Userscripts.org、OpenUserJS\n我们访问其中的一个寻找需要的，合适的脚本下载安装即可。\n推荐的几个实用脚本\n东方永页机 - 自动翻页脚本\n百度文库净化·解禁继续阅读·开启 VIP\n百度网盘简易下载助手（直链下载复活版）\n???文本选中复制???\n图片下载器\n油小猴网盘直链下载助手\nCSDNGreener\n\n最后想说的是，且用且珍惜说不定哪个脚本什么时候就不维护了 :@(吐血倒地) 另外大家有好的脚本也可以评论区留言投稿。\n","slug":"实用油猴脚本合集","date":"2023-04-27T00:48:32.000Z","categories_index":"实用软件","tags_index":"实用软件,Tampermonkey","author_index":"小北"},{"id":"25f85123689866c3ce846323e6610fa6","title":"虚拟机VMware Workstation（附激活秘钥）","content":"一、什么是虚拟机虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。在实体计算机中能够完成的工作在虚拟机中都能够实现。在计算机中创建虚拟机时，需要将实体机的部分硬盘和内存容量作为虚拟机的硬盘和内存容量。每个虚拟机都有独立的CMOS、硬盘和操作系统，可以像使用实体机一样对虚拟机进行操作。\n虚拟系统通过生成现有操作系统的全新虚拟镜像，它具有真实windows系统完全一样的功能，进入虚拟系统后，所有操作都是在这个全新的独立的虚拟系统里面进行，可以独立安装运行软件，保存数据，拥有自己的独立桌面，不会对真正的系统产生任何影响 ，而且具有能够在现有系统与虚拟镜像之间灵活切换的一类操作系统。\n\n\n\n\n\n\n\n\n\n通俗的说，就是在实体机的基础上创建一个虚拟的电脑，功能“基本”与实体机一样，一应俱全。不同的地方是，他的硬盘是在文件中虚拟的。你可以在实体机硬件允许的范围内，随意改变他的配置。不用担心会对你的实体机产生什么损失，例如病毒运行在虚拟机中，不会对你的实体机造成伤害。而且可以让你轻易地在一个电脑上使用很多个系统。\n对于爱“搞事情”的好兄弟而言，他一定是非常重要的。相信大部分爱“搞事”的好兄弟们，都现在有 或者 曾经装过这一款软件，使用它可在 Windows 或 Linux 桌面上运行 Windows、Linux 和 BSD 虚拟机。方便我们进行一些不经常必要的测试等….\n二、现在比较流行的虚拟机软件目前流行的虚拟机软件有VMware(VMWare ACE)、Virtual Box和Virtual PC，它们都能在Windows系统上虚拟出多个计算机，每个虚拟计算机可以独立运行，可以安装各种软件与应用等。\nVMware今天我们介绍的是 [RainBowText]VMware[&#x2F;RainBowText] 这款软件，他很屌吗？他确实挺屌的，作为戴尔公司旗下的 VMware Workstation的功能是很强大的，所以也是最多人使用的。但是需要注册并且是英文，过于庞大，很多功能我们是用不到，而且还会开机加载程序（这个很多人不喜欢的）。所以出现了精简版，汉化版，破解版。\nVirtual Box[RainBowText]Oracle xVM VirtualBox[&#x2F;RainBowText] 是开源，免费，相比下，VirtualBoxj比较轻巧，也能实现很多功能。最重要的是有中文，上手比较容易，而已它的快照功能也靠近VM了，应该说竞争力更强了。VirtualBox 是针对基于 x86 的系统的强大的跨平台虚拟化软件。 “跨平台”意味着它可以安装在 Windows、Linux、Mac OS X 和 Solaris x86 计算机上。而“虚拟化软件”则意味着可以在同一台计算机上同时创建和运行多个虚拟机，并且这些虚拟机可以运行不同的操作系统。例如，可以在 Mac 上同时运行 Windows 和 Linux，在 Windows PC 上同时运行 Linux 和 Solaris，或者在 Linux 系统上运行 Windows。 Oracle VM VirtualBox 以 Windows、Linux、Mac OS X 和 Solaris 的开源或预构建二进制文件的形式提供。\nVirtual PC[RainBowText]Virtual PC[&#x2F;RainBowText]是微软公司（Microsoft） 收购过来的，最早不是微软开发的。Virtual PC 可以允许你在一个工作站上同时运行多个PC操作系统，当你转向一个新OS时，可以为你运行传统应用提供一个安全的环境以保持兼容性，它可以保存重新配置的时间，使得你的支持，开发，培训工作可以更加有效。\n在被微软收购了后只支持自家的系统（不是其他系统不能用它虚拟，只是需要很强的动手能力）XP mode虽然不错，但是限制也是很多的。微软在2003年2月份收购Connectix后，发布了Microsoft Virtual PC 2004。出于种种考虑，新发布的Virtual PC 2004已不再明确支持Linux、FreeBSDNetWare、Solaris等操作系统，只保留了OS&#x2F;2，要虚拟一台Linux计算机，自己手工设置。相比而言， VMware 在多操作系统的支持上，在执行效率上，都比Virtual PC 2004明显高出一筹。 电脑一台变两台，学用Linux不再有后顾之忧。\n三、VMware Workstation Pro 16.3下载链接:https://www.aliyundrive.com/s/xVxXNHWzdN6 提取码: 5a5h激活秘钥：ZF3R0-FHED2-M80TY-8QYGC-NPKYF\n下载后安装到最后一步时，点击许可证，输入激活秘钥，然后我们点击输入，即可完成激活。然后就可以创建虚拟机了。\n虚拟机 VMware Workstation Pro 17下载链接：\n\nhttps://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html\nhttps://www.aliyundrive.com/s/bFmH7ntYmGy\n\n激活秘钥：MC60H-DWHD5-H80U9-6V85M-8280D\n推荐几个镜像下载站：\n\nMSDN 它里面的Windows镜像还是挺全的，也是免费使用。\n阿里云镜像站 阿里云提供的镜像站，除去Windows大部分都有。\n\n","slug":"虚拟机VMware Workstation（附激活秘钥）","date":"2023-04-26T13:50:31.000Z","categories_index":"实用软件","tags_index":"实用软件,虚拟机","author_index":"小北"},{"id":"d89a19906552929cd425b7f7d6b3420e","title":"防止利用sll证书泄露源站ip","content":"开篇在当下社会，建站好像已经不是一件那么特别需要技术含量的事了。一个小白在短短几十分钟的学习下，也可以很轻松的建站。但是，建站容易，守站难。现在的网络环境并不是很好，cc攻击、DDoS、xxs渗透….随处可见，可能你刚刚建好的站，没过几分钟就被扫端口了，没过几分钟cc攻击立马就开始。马上你的站点就会还有些[RainBowText]大牛[&#x2F;RainBowText]会进行渗透攻击，各式各样的，防不胜防。所以很多站长套起了cdn，比起cdn提供的加速效果，更多的站长可能还是为了保护那可怜弱小的源站ip不被发现然后攻击。\n那么，怎么知道你的源站ip呢？直接利用工具扫，网络上有很多提供在线工具的，就批量扫你的ip。然后当我们看到这个页面的时候，那就说明找到了你的源站ip。因为我们使用https，所以可以查看我们的证书。\n然后那些cc以及ddos大牛们会以迅雷不及掩耳之势展开他们的攻势，那么如何防止别人利用ssl证书来获取你的源站ip呢。\n解决方法首先我们如果安装了宝塔，就创建一个站点，然后将默认站点改为刚刚创建的站点，之后到这个网页只做我们的sll空证书，或者可以使用已经做好的，做好的已经放到了下边。\nkey（秘钥）\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA3JC1fwAf2pFCZsRHBoxNUq2WCZzofhrctHok7c2JXawWOQa9\nkvYIKkEnWOIfHfmiF+6CGDr4yCgv17qs6ms2i3iIVS5uxarMp7TWQSRReRq5YH4L\nr0sIHo5tWhQ5TDUmcVDKVwQIVZF16mP3a5gdKTf9O9TIGst9TB5teVGfwXCbyBZf\nvKa6dW4cq0nLnbc85jI+b9DRq21w&#x2F;UfrwAbMjF5CwArTlW8WnkUkKiFXEyMz2mr4\nA7OiiPuhFcY3tiwkZS1&#x2F;RpbJcNplLcR&#x2F;&#x2F;SWELe&#x2F;fKurAVinaZsR0NsfLM3ADoAZV\n2FnYqFP0SlmjopLcrr0dCyBy775jszSzkkdF8QIDAQABAoIBAQCKUM0gaWmQXQtw\n+qE3wAA1Wtn+CUHa4umI3BgQcJY2AdalyE5VvKf+J4GPQa4V1BgMPeujWkfs7Raj\niFMrZjR8XgfQsx+QIb3ZZZP+odHdyh56HlEhikH7N4HnvUr5OVN0OB&#x2F;LVaIMVv3F\nEQ91j5yp3oyVWqhp9TYL6ADq1X8DhHqE5RcPP92bDG0vc84oS+SPPcARWvlbs78t\nlyh+JVnLbdoZQ4knQNiPQA7OL0PLWmhemn8RxbpcKhnr5+rgeuSvUrFsvE4a257M\ni4ufbkVs3dmB4G+QQqrDRKnfkqYjeXyXXGMbTzrM7Wyp0Qi2t0IOxoptdsZ+k+SM\nZWpnLczpAoGBAO4ApaT2Mu7z2TgZZuOkUtRwWwU4olS0SWqKeRX85n6JTnY3IOoL\ni4x3w9bxLCwKeb5KvryDJt0R4sHnexp++dQckIdWHXTzXxAs5t2alDjeiGab7SC2\ntotE0DP0kKjAROwNCVXIRc5tISAZtfqwg6dtgsacLzcKTehlKGvTzWJvAoGBAO0+\ngQ&#x2F;2CUYDQcvdyXTy1selISQqxFQvoYjJ2Z+GOElsLBtGakCT9HV0&#x2F;9AEjwy+mQQv\n1xo&#x2F;&#x2F;&#x2F;hLbcwx239upg3LNuuPRAEjgviQVIuOS7+GJjalFENkSStw14c0pTP6QMf2\nTC44wGvG0HNL0xjIZmJtaauvAadmjU1x8JTBgI2fAoGAKYURYKLWpdsCdQfxbBsZ\nnBfxuQp1P0OoXx7DGvPgngiEGJlrc4kKEjo+fvvZ0eEN9gWCGs7ic8SQA3XHgwrN\nuJQ3HnUGdIWUevTqXZR+8SDZONVQ29kkJU2e6MFsjxPjsi5gB4gFrYpaMghqN86d\nWRMAsndCwV5Z0wX6tDzh4p8CgYAz8nG0Gv1g1Sm9B+0qrFmXEXM2Rh8DCALovrnm\nEi+U9BicSEjPpxXp+hphY&#x2F;4mnj1HC2qgFs9ngKyj&#x2F;26+cm3tq0d1QMN1NF9jKcc5\nX4j6gNcxM+hB8V2MI4Mt2bsqrGsu3aFEpayMbNYLyNiKHqc8ehSfQQytqOjbwk0Z\nZV1OpQKBgGtVyv7IC27BM+fcst6kP0RXzRfdvg1dOFl9DpMK12eyjOG2BUzRQY1A\nTYF70H58arJ167onabe2E5wi0veN3GiMGaTGeDCUcsIST9cFrwuOx0Di9M&#x2F;wNveb\n7N7dGUUJ&#x2F;XYxbuFeZTy92F6ShF5DWk12&#x2F;W1adWeR+3rkeKW938pm\n-----END RSA PRIVATE KEY-----\n\n证书(PEM格式)\n-----BEGIN CERTIFICATE-----\nMIIEMTCCAxmgAwIBAgIRAIpP63oyckkUvKs4UpxQ+xYwDQYJKoZIhvcNAQELBQAw\nXjELMAkGA1UEBhMCQ04xDjAMBgNVBAoTBU15U1NMMSswKQYDVQQLEyJNeVNTTCBU\nZXN0IFJTQSAtIEZvciB0ZXN0IHVzZSBvbmx5MRIwEAYDVQQDEwlNeVNTTC5jb20w\nHhcNMjIwMTEwMDU1MDE2WhcNMjcwMTA5MDU1MDE2WjBNMQswCQYDVQQGEwJDTjE+\nMDwGA1UEAww15Yir5omr5LqGLuWKs+i1hOeahOe9keermeS4jeaYr+S9oOiDveaJ\nq+W+l+WIsOeahC5jbm0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDc\nkLV&#x2F;AB&#x2F;akUJmxEcGjE1SrZYJnOh+Gty0eiTtzYldrBY5Br2S9ggqQSdY4h8d+aIX\n7oIYOvjIKC&#x2F;XuqzqazaLeIhVLm7FqsyntNZBJFF5GrlgfguvSwgejm1aFDlMNSZx\nUMpXBAhVkXXqY&#x2F;drmB0pN&#x2F;071Mgay31MHm15UZ&#x2F;BcJvIFl+8prp1bhyrScudtzzm\nMj5v0NGrbXD9R+vABsyMXkLACtOVbxaeRSQqIVcTIzPaavgDs6KI+6EVxje2LCRl\nLX9Glslw2mUtxH&#x2F;9JYQt798q6sBWKdpmxHQ2x8szcAOgBlXYWdioU&#x2F;RKWaOiktyu\nvR0LIHLvvmOzNLOSR0XxAgMBAAGjgfowgfcwDgYDVR0PAQH&#x2F;BAQDAgWgMB0GA1Ud\nJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBQogSYF0TQaP8Fz\nD7uTzxUcPwO&#x2F;fzBjBggrBgEFBQcBAQRXMFUwIQYIKwYBBQUHMAGGFWh0dHA6Ly9v\nY3NwLm15c3NsLmNvbTAwBggrBgEFBQcwAoYkaHR0cDovL2NhLm15c3NsLmNvbS9t\neXNzbHRlc3Ryc2EuY3J0MEAGA1UdEQQ5MDeCNeWIq+aJq+S6hi7lirPotYTnmoTn\nvZHnq5nkuI3mmK&#x2F;kvaDog73miavlvpfliLDnmoQuY25tMA0GCSqGSIb3DQEBCwUA\nA4IBAQA6SdaUfOx+Ys2tsVAo2zcSaDokV1d9HGyU+k&#x2F;G2&#x2F;J8ZvosMlt7pw90uRrK\nMkGffMlss69Sxx2KAm0JVPaGZ60erx99LP04VYpw2PLCa1nibFoCeGS7D9uvEVa0\nLiA1aLnMvYr5YjrX&#x2F;&#x2F;TdAVuZdkfI8yLCZSeQr0v2M9QfcxCxQ1Bf7JDiEduGIYne\npLmPMQ+H9eq+rpAWP+aW2slXN719Tv3MatePPqXK6vGKXMtyzkxCS79pCke&#x2F;+5y&#x2F;\nJWfEeHaPPw+ASuubQyhl9scyiEPyN8zn&#x2F;ChLTSVseh+0cTXDGR7j+zz4bKYHs5zz\niaxHSWDqoFZh9d4rCPPHNKTgRBRi\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDuzCCAqOgAwIBAgIQSEIWDPfWTDKZcWNyL2O+fjANBgkqhkiG9w0BAQsFADBf\nMQswCQYDVQQGEwJDTjEOMAwGA1UEChMFTXlTU0wxLDAqBgNVBAsTI015U1NMIFRl\nc3QgUm9vdCAtIEZvciB0ZXN0IHVzZSBvbmx5MRIwEAYDVQQDEwlNeVNTTC5jb20w\nHhcNMTcxMTE2MDUzNTM1WhcNMjcxMTE2MDUzNTM1WjBeMQswCQYDVQQGEwJDTjEO\nMAwGA1UEChMFTXlTU0wxKzApBgNVBAsTIk15U1NMIFRlc3QgUlNBIC0gRm9yIHRl\nc3QgdXNlIG9ubHkxEjAQBgNVBAMTCU15U1NMLmNvbTCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBAMBOtZk0uzdG4dcIIdcAdSSYDbua0Bdd6N6s4hZaCOup\nq7G7lwXkCyViTYAFa3wZ0BMQ4Bl9Q4j82R5IaoqG7WRIklwYnQh4gZ14uRde6Mr8\nyzvPRbAXKVoVh4NPqpE6jWMTP38mh94bKc+ITAE5QBRhCTQ0ah2Hq846ZiDAj6sY\nhMJuhUWegVGd0vh0rvtzvYNx7NGyxzoj6MxkDiYfFiuBhF2R9Tmq2UW9KCZkEBVL\nQ&#x2F;YKQuvZZKFqR7WUU8GpCwzUm1FZbKtaCyRRvzLa5otghU2teKS5SKVI+Tpxvasp\nfu4eXBvveMgyWwDpKlzLCLgvoC9YNpbmdiVxNNkjwNsCAwEAAaN0MHIwDgYDVR0P\nAQH&#x2F;BAQDAgGGMA8GA1UdJQQIMAYGBFUdJQAwDwYDVR0TAQH&#x2F;BAUwAwEB&#x2F;zAfBgNV\nHSMEGDAWgBSa8Z+5JRISiexzGLmXvMX4oAp+UzAdBgNVHQ4EFgQUKIEmBdE0Gj&#x2F;B\ncw+7k88VHD8Dv38wDQYJKoZIhvcNAQELBQADggEBAEl01ufit9rUeL5kZ31ox2vq\n648azH&#x2F;r&#x2F;GR1S+mXci0Mg6RrDdLzUO7VSf0JULJf98oEPr9fpIZuRTyWcxiP4yh0\nwVd35OIQBTToLrMOWYWuApU4&#x2F;YLKvg4A86h577kuYeSsWyf5kk0ngXsL1AFMqjOk\nTc7p8PuW68S5&#x2F;88Pe+Bq3sAaG3U5rousiTIpoN&#x2F;osq+GyXisgv5jd2M4YBtl&#x2F;NlD\nppZs5LAOjct+Aaofhc5rNysonKjkd44K2cgBkbpOMj0dbVNKyL2&#x2F;2I0zyY1FU2Mk\nURUHyMW5Qd5Q9g6Y4sDOIm6It9TF7EjpwMs42R30agcRYzuUsN72ZFBYFJwnBX8&#x3D;\n-----END CERTIFICATE-----\n\n然后我们保存。这个时候，我们再去查看证书的时候，已经变了。\n结尾这样就可以避免别人利用sll证书来确认是否为你的源站ip。那这样源站ip就安全了吗？当然不可能，还有很多的技巧或者工具来获取你的源站ip。那抓紧时间学习吧，小心下一个被打的站就是你 :@(投降) 最后奉劝各位[RainBowText]量牛[&#x2F;RainBowText]别再恶意攻击别人的站点了，有这点时间，我们追追剧不好吗。\n","slug":"防止利用sll证书泄露源站ip","date":"2023-04-26T13:46:19.000Z","categories_index":"server,运维","tags_index":"server运维","author_index":"小北"},{"id":"cffce769e094a077f78f042c158e8eac","title":"如何访问外面的世界","content":"开篇今天怀着把游戏彻底戒掉的心，给windows甩一边去了，重装了deepin系统。作为入门级Linux，上手简单，适合小白，一来是deepin在Linux中我个人感觉还是比较美观的，二来想熟悉Linux的话，拿deepin练手比较好吧，毕竟有着软件商店的加持，中文社区也活跃，社区资源丰富。感觉对新手入门嘎嘎舒适。三来，就当支持国产崛起了，毕竟deepin也是国产的。\n\n起因在将系统装完，安装完该有的软件之后，闲下来的我想去外边的世界看看突然想起来好像我还没有一个合适的梯子。我记得我在香港还是有一个小水管服务器的，于是决定拿来搭梯子。在某论坛找了一个一键脚本，我放到下边。\n服务端搭建选择海外的服务器，将下方代码复制，粘贴输入到ssh终端后回车。便会出现安装菜单，根据自己的情况输入对应数字，选择合适的安装即可。bash &lt;(curl -sL https://storage.googleapis.com/tiziblog/setup.sh)\n\nVMESS，即最普通的V2ray服务器，没有伪装，也不是VLESS\nVMESS+KCP，传输协议使用mKCP，VPS线路不好时可能有奇效\nVMESS+TCP+TLS，带伪装的V2ray，不能过CDN中转\nVMESS+WS+TLS，即最通用的V2ray伪装方式，能过CDN中转，推荐使用\nVLESS+KCP，传输协议使用mKCP\nVLESS+TCP+TLS，通用的VLESS版本，不能过CDN中转，但比VMESS+TCP+TLS方式性能更好\nVLESS+WS+TLS，基于websocket的V2ray伪装VLESS版本，能过CDN中转，有过CDN情况下推荐使用\nVLESS+TCP+XTLS，目前最强悍的VLESS+XTLS组合，强力推荐使用（但是支持的客户端少一些）\ntrojan，轻量级的伪装协议\ntrojan+XTLS，trojan加强版，使用XTLS技术来提升性能\n\n注意：\n\n目前一些客户端不支持VLESS协议，或者不支持XTLS，请按照自己的情况选择组合\n有几个选项会要求输入伪装域名，如果你的服务器上已经部署了网页，有可能会使网页出错\n对于VLESS协议、VMESS+WS+TLS的组合，网页上输入伪装域名，能正常打开伪装站，说明服务端已经正确配置好。\n\n\n客户端选择Linux端1.安装 V2Ray 内核：# download script\ncurl -Ls https:&#x2F;&#x2F;mirrors.v2raya.org&#x2F;go.sh | sudo bash\n# 关闭systemd服务\nsudo systemctl disable v2ray --now\n# install v2ray-core from jsdelivr\nsudo bash go.sh\n\n2.安装 v2rayA方法一：通过软件源安装\n添加公钥\nwget -qO - https:&#x2F;&#x2F;apt.v2raya.org&#x2F;key&#x2F;public-key.asc | sudo tee &#x2F;etc&#x2F;apt&#x2F;trusted.gpg.d&#x2F;v2raya.asc\n\n添加 V2RayA 软件源\necho &quot;deb https:&#x2F;&#x2F;apt.v2raya.org&#x2F; v2raya main&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;v2raya.list\nsudo apt update\n\n安装 V2RayA\nsudo apt install v2raya\n\n方法二：手动安装 deb 包\n下载合适的deb包https://github.com/v2rayA/v2rayA/releaseshttps://yunyuwu.lanzouv.com/iH2lo01z81cd如果从蓝奏云下载，记得先解压。然后可以使用Gdebi、QApt等图形化工具来安装，也可以使用命令行：\nsudo apt install &#x2F;path&#x2F;download&#x2F;installer_debian_xxx_vxxx.deb ### 自行替换 deb 包所在的实际路径\n\n3.启动1.启动v2rayA及设置v2rayA自动启动从 1.5 版开始将不再默认为用户启动v2rayA及设置开机自动。启动v2rayA\nsudo systemctl start v2raya.service\n\n设置开机自动启动\nsudo systemctl enable v2raya.service\n\n2.开始设置通过2017端口 如http://localhost:2017 访问UI界面。如果不能正常访问，请查阅官方相关文档排除。\n3.创建账号在第一次进入页面时，你需要创建一个管理员账号，请妥善 保管 牢记 你的用户名密码，如果遗忘，使用sudo v2raya --reset-password命令重置。\n4.导入节点我们从服务器那里查看配置或者导入节点。以创建或导入的方式导入节点，导入支持节点链接、订阅链接、扫描二维码和批量导入等方式。\n5.连接节点和启动服务导入成功后，节点将显示在SERVER或新的标签中。如图是我自己创建了一个节点的界面。\n切换到该标签页，选择一个或多个节点连接。这里不建议选择过多的节点，6个以内为佳。如图所示，在未启动服务时，连接的节点呈现粉红色。我们在左上角点击相应按钮启动服务。\n\n在启动服务后，所连接的节点呈现蓝色，左上角的图标也显示为蓝色的正在运行，代表服务启动成功\n\n代理设置：配置代理由于默认情况下 v2rayA 会通过核心开放 20170(socks5), 20171(http), 20172(带分流规则的http) 端口。修改端口可参阅后端地址和入站端口设置 一节。\n如果是需要为局域网中的其他机器提供代理，请在设置中打开“局域网共享”，并检查防火墙开放情况。这里记录三种方式使用代理。\n1.透明代理\n\n这种方法是 v2rayA 推荐的方法。它相比于其他方法具有诸多优势，v2rayA 可以一键开启透明代理，为几乎所有程序提供代理服务。在设置中选择透明代理的分流方式，以及实现方式，然后保存即可。具体细节可参阅透明代理一节。注意，如需选择 GFWList，需要下载对应的规则库，请点击右上角的更新以完成下载。\n2.系统代理系统代理可为主动支持代理的程序提供代理服务。在不同的桌面环境中设置的位置不尽相同，请通过搜索引擎自行搜索。\n3.浏览器代理SwitchyOmega 等浏览器插件可为浏览器提供代理服务。在所使用的浏览器上安装插件[button color&#x3D;”danger” url&#x3D;”https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh“ outline&#x3D;”” target&#x3D;”_blank”]插件链接[&#x2F;button]\n\n在v2rayA右上角的设置中查看端口信息\n\n请按照下图进行配置\n\n4.linux客户端代理\nexport https_proxy&#x3D;https:&#x2F;&#x2F;127.0.0.1:20171\n\n\nWindows端可以使用v2rayN-Core [button color&#x3D;”danger” url&#x3D;”https://yunyuwu.lanzouv.com/ibEMS01zcd8f“ outline&#x3D;”” target&#x3D;”_blank”]蓝奏云链接[&#x2F;button]下载压缩包后解压缩，然后点击启动即可进行导入及配置，比较简单，博主就不细说了。\n安卓端1.Trojan支持协议：Vmess（v2ray（v2）），Shadowsocks(ss)，socks5，VLESS，Trojan[button color&#x3D;”info” url&#x3D;”https://github.com/trojan-gfw/igniter“ outline&#x3D;”” target&#x3D;”_blank”]GitHub项目地址[&#x2F;button] [button color&#x3D;”warning” url&#x3D;”https://yunyuwu.lanzouv.com/iER3101zerjc“ outline&#x3D;”” target&#x3D;”_blank”]蓝奏云链接[&#x2F;button]\n2.v2rayNG[button color&#x3D;”danger” url&#x3D;”https://github.com/2dust/v2rayNG“ outline&#x3D;”” target&#x3D;”_blank”]GitHub项目地址[&#x2F;button] [button color&#x3D;”info” url&#x3D;”https://yunyuwu.lanzouh.com/iVf1c061kyeb“ outline&#x3D;”” target&#x3D;”_blank”]蓝奏云链接[&#x2F;button]\niOS系统使用俗称 小火箭 Shadowrocket的软件，可以使用国外苹果id登录AppStore下载，不过需要付费。\n\n结尾到此，关于访问wai网的各大客户端配置教程就结束了，不知道能不能把游戏戒掉，反正探索了新知识，也没白忙活。如果有哪里不对，欢迎各位大神指出错误，感谢！本笔记仅用于学习交流，请遵守国内法律制度。\n","slug":"如何访问外面的世界","date":"2023-04-26T13:38:10.000Z","categories_index":"server,运维","tags_index":"server运维,agency","author_index":"小北"},{"id":"ce4544b62caffd573c0afda46c278aa6","title":"如何对自己的服务器进行压力测试","content":"项目的开展我们对项目进行部署之后，假设这个项目每天会有百万次的访问。我们的项目能不能做到稳定提供服务呢？所以我们需要进行一些测试。\n如何进行测试一、首先是付费的世界上没有钱解决不了的问题，如果有 那一定是钱的金额不够。\n1.阿里云提供的阿里云性能测试 PTS阿里云的性能测试PTS无需安装软件；脚本场景监控简单化，省时、省力；分布式并发压测，施压能力无上限；快速大规模集群扩容、支持几十万用户及百万级TPS性能压测；可模拟海量用户的真实业务场景，全方位验证业务站点的性能、容量和稳定性。\n性能测试PTS（Performance Testing Service）是一款性能测试工具。支持按需发起压测任务，可提供百万并发、千万TPS流量发起能力，100%兼容JMeter。提供的场景编排、API调试、流量定制、流量录制等功能，可快速创建业务压测脚本，精准模拟不同量级用户访问业务系统，帮助业务快速提升系统性能和稳定性。\nPTS 广泛应用于各种压力测试和性能测试场景，包括但不限于以下场景：\n\n\n\n\n\n\n\n\n\n详情请观看使用文档如何在一分钟内发起压测？\n2.腾讯云提供的测压大师LMWeTest 压测大师（Load Master，LM）是简单易用的自动化性能测试平台，为用户提供测试框架及压测环境、创建虚拟机器人模拟产品多用户并发场景，支持 HTTP 或 HTTPS 协议，包括 Web&#x2F;H5 网站、移动应用、API 、游戏等主流压测场景，适用于产品发布前及运营中的服务器压力测试及性能优化。\n\n\n\n\n\n\n\n\n\n使用详情请观看使用文档如何在一分钟内发起压力测试\n\n二、不花钱的说完了付费的，再说说不花钱的。\n1.http_loadhttp_load是一款基于Linux平台的web服务器性能测试工具，用于测试web服务器的吞吐量与负载，web页面的性能。它又轻巧又简便，整个安装包就100K左右。它可以快速用来对网站或者Web API进行压力测试。而且功能还挺强大的，特别是在架构验证过程中，测试某个平台的并发和响应时间相当的管用。下载地址：https://yunyuwu.lanzouv.com/ih4Kc01wfvkfhttps://pan.baidu.com/s/105917KnmkhKJuuBNQ1paRA?pwd=ngid\n安装：上传服务器后\n#tar xfz http_load-09Mar2016.tar.gz\n#cd http_load-09Mar2016\n#make &amp;&amp; sudo make install\n因为包很小，所以会瞬间安装完成，直接打http_load命令验证下是否安装成功，你应该可以看到下面的信息：\nusage:  http_load [-checksum] [-throttle] [-proxy host:port] [-verbose] [-timeout secs] [-sip sip_file]\n            -parallel N | -rate N [-jitter]\n            -fetches N | -seconds N\n            url_file\nOne start specifier, either -parallel or -rate, is required.\nOne end specifier, either -fetches or -seconds, is required.\n\n基本用法：使用http_load的主要方式就是用命令http_load &lt;参数&gt; &lt;url列表文件&gt;。其中url列表文件就是一个文本文件，每行放一条你要测试的URL地址（默认只支持HTTP），http_load在运行时会从中随机抽取地址访问。当然你也可以只放一条，那就是针对特定地址做压测。\nhttp_load的参数主要有：\n\n\n\n\n\n\n\n\n\n-parallel 简写 -p: 同一时间发起的并发连接数-rate 简写 -r: 每秒开启的并发连接数\n-parallel或-rate必须且只能有一个\n\n\n\n\n\n\n\n\n\n-fetches 简写 -f ：总计的访问次数-seconds 简写 -s ：总计的访问时间\n-fetches或-seconds必须且只能有一个\n\n\n\n\n\n\n\n\n\n-proxy host:port: 指定需经过的代理地址和端口timeout secs: 连接闲置后多久超时，默认60秒-verbose: 控制台输出详细信息注意网上有些文章说-p是并发进程数，千万别被带坑里了。http_load就一个进程，它只是模拟并发连接，不是真起了一大堆客户端进程。每个连接的调用都是非阻塞式的，因此确保了并发量。\n首先我们编辑一个urls.txt文件格式是每行一个URL。文件中可以有这种格式http://www.baidu.com/亦或是192.168.0.1这一类的都可以测。\n文件格式如下：\nhttps:&#x2F;&#x2F;yunyuwu.cn&#x2F;adiod\nhttps:&#x2F;&#x2F;yunyuwu.cn&#x2F;3ryn89\nhttps:&#x2F;&#x2F;yunyuwu.cn&#x2F;489y3y89\nhttp:&#x2F;&#x2F;35.132.432.254\n\n#示例：\n.&#x2F;http_load  -p 并发访问进程数  -s 访问时间  需要访问的URL文件\n命令行：\n$ http_load -p 50 -s 10 urls.txt\n\n\n然后得到了结果：\n1239 fetches, 50 max parallel, 7.31784e+06 bytes, in 10.0001 seconds\n47211.8 mean bytes&#x2F;connection\n15.5 fetches&#x2F;sec, 731783 bytes&#x2F;sec\nmsecs&#x2F;connect: 195.597 mean, 218.047 max, 189.311 min\nmsecs&#x2F;first-response: 195.951 mean, 271.889 max, 189.239 min\n38 bad byte counts\nHTTP response codes:\n  code 200 -- 155\n\n运行结果简述：1.共访问了1239次，50个最大并发，获取了7.31784亿字节的数据，用时10.0001秒2.每次访问平均获取47211.8字节3.每秒15.5次访问，每秒731783字节数据4.平均每次访问195.597毫秒，最大218.047毫秒，最小189.311毫秒5.首次响应平均195.951毫秒，最大271.889毫秒，最小189.239毫秒6.有38次字节计数错误7.HTTP响应代码，155次200，说明有155次访问成功，\n注意事项如果提示make:cc 命令未找到请执行以下命令。\n$ yum -y install gcc automake autoconf libtool make\n$ yum install gcc gcc-c++\n\n如果报错：无法创建一般文件‘/usr/local/man/man1’: 没有那个文件或目录可先mkdir /usr/local/man再次make install\n\n2.webbenchweb压力测试工具webbench概述webbench最多可以模拟3万个并发连接去测试网站的负载能力并发能力比较高，可以测试https及动态静态页面适合中小型网站测试承受能力。webbench的标准测试可以向我们展示服务器的两项内容：每秒钟相应请求数和每秒钟传输数据量。webbench不但能具有便准静态页面的测试能力，还能对动态页面（ASP,PHP,JAVA,CGI）进行测试的能力。他支持对含有SSL的安全网站例如电子商务网站进行静态或动态的性能测试。\n安装：下载地址：https://yunyuwu.lanzouv.com/iaCxQ01wlt6fhttps://pan.baidu.com/s/1HmorM8V4TuH5MLQm2UEniw?pwd=97wj\n# yum install -y gcc ctags #先安装编译需要的组件\n# wget http:&#x2F;&#x2F;www.ha97.com&#x2F;code&#x2F;webbench-1.5.tar.gz\n# tar zxvf webbench-1.5.tar.gz\n# cd webbench-1.5\n# make &amp;&amp; make install\n\n使用webbench -c 1000 -t 30 http://127.0.0.1/test.jpg参数说明：-c表示并发数，-t表示时间(秒)\n测试结果Webbench - Simple Web Benchmark 1.5\nCopyright (c) Radim Kolar 1997-2004, GPL Open Source Software.\n\nBenchmarking: GET http:&#x2F;&#x2F;hz.xiaobei.ga&#x2F;\n3000 clients, running 30 sec.\n\nSpeed&#x3D;7946 pages&#x2F;min, 16725 bytes&#x2F;sec.\nRequests: 2241 susceed, 1732 failed.\n本人测试感觉并没有上一个脚本那么好使。\n\n3.SiegeSiege是一个压力测试和评测工具，设计用于WEB开发这评估应用在压力下的承受能力：可以根据配置对一个WEB站点进行多用户的并发访问，记录每个用户所有请求过程的相应时间，并在一定数量的并发访问下重复进行。Siege是一个多线程http负载测试和基准测试工具。Siege：这是Linux系统下的一个测试工具，完全使用C语言实现，可以对HTTP和FTP服务器进行负载和性能测试。通过使用Siege 提供的功能，可以很容易的制定测试计划：包括规定使用并发用户数、重复数量，从而可以模拟在服务器、网络或者其它对象上附加负载以测试他们提供服务的受压能力，方便的测试服务器的性能。最后，利用Siege提供的测试结果来分析性能指标或者分析他们提供的服务在不同负载条件下的性能情况，分析测试结果，找出影响系统性能的瓶颈。\n下载地址：https://yunyuwu.lanzouv.com/ioqUC01wr4gbhttps://pan.baidu.com/s/1J7uutOI6JNm93it97HrsPQ?pwd=a6wf\n安装：# wget http:&#x2F;&#x2F;download.joedog.org&#x2F;siege&#x2F;siege-4.1.2.tar.gz\n# tar xzvf siege-4.1.2.tar.gz\n# cd siege-4.1.2\n# .&#x2F;configure\n# make &amp;&amp; make install\n\n提示：如果服务器没有安装编译工具，请先安装：\nsudo apt-get install build-essential\n\n然后运行\nsiege -v\n\n出现下方代码即表示成功。\nNew configuration template added to &#x2F;root&#x2F;.siege\nRun siege -C to view the current settings in that file\nSIEGE 4.1.2\n\nsigh常见参数-h帮助-c 指定并发数（是真并发）-r 指定重复次数-d 指定请求的延迟时间，注意每个请求间的随机延迟（模拟用户的思考时间，最多延迟一分钟，其他都是随机默认在一分钟之内）-f 指定url列表，可以一次给多个地址加压（多用于翻页的Url测试）-t 指定用例执行时间，比如，-t 10s，-t 1M(H)之类（主要用于稳定性性测试，长时间进行加压，最容易发现内存泄露的问题）-g 获取请求的headers信息并打印出来，debug专用-H指定请求的headers信息-l或者–log&#x3D;[File]指定测试结果的路径\n使用方法：示例：\nsiege -c 50 -r 100 -u http:&#x2F;&#x2F;192.168.91.100\n\n注意事项：\nsiege默认只支持255个并发数，可以自己自定义，修改~/.siege/siege.conf下的limit数值。\n在用户目录下的 .bash_profile 中的末尾加入ulimit -n 2000, 保存后再执行source ～/.bash_profile &#96;即可\n\n\n4.黄金眼ddos此脚本非常简单暴力\nwget http:&#x2F;&#x2F;pan.gov.duy.la&#x2F;data&#x2F;hjy.py\n脚本设置默认50并发 持续30秒 时间有点短 可以自己去改改脚本 相信大家都能看懂根据自己服务器稍调一下，然后给予hjy.py脚本权限\nchmod +x hjy.py\n\n命令示例如下：\n.&#x2F;hjy.py http:&#x2F;&#x2F;baidu.com\n.&#x2F;hjy.py http:&#x2F;&#x2F;baidu.com -s 300 -w 300\n参数解释：\n\n\n\n\n\n\n\n\n\n-u，–useragents要使用的带有用户代理的文件（默认值：随机生成）-w，–workers并发工作者数（默认值：50）-s，–sockets并发套接字数（默认值：30）-m，–method使用’get’或’post’或’random’的HTTP方法（默认：get）-d，-debug启用调试模式[更多详细输出]（默认值：False）\n5.cc以上就是博主自己整理的关于服务器测压的脚本了，有不足或不对的地方欢迎评论区留言！\n","slug":"如何对自己的服务器进行压力测试","date":"2023-04-26T13:27:44.000Z","categories_index":"server,运维","tags_index":"测压,server运维","author_index":"小北"},{"id":"375d4498230c2af87a8fb8060bbacd80","title":"记录一次DNS服务异常","content":"起因今天一觉睡醒，犹如执行任务一样打开了我的电脑，打算继续学习C语言。结果在打开浏览器之后，发现居然提示我找不到dns服务器地址。但是可以通过ip打开服务器的宝塔面板，这就让我一脸懵。\n经过然后我试图使用之前安装的火绒安全里的网络修复小组件进行修复，以往都是可以修复的。但是今天居然不能修复，在重试了几次后，依然不行。于是我试图通过重装网卡进行修复。\n这次我决定使用重装网卡的方式修复，但是依然没有用。\n在自己无计可施了的情况下，我决定求助广大网友。于是，我使用手机打开了《百度》。经过查找，发现是当前dns服务器地址有问题，或者不可用。\n问题的解决找到了问题，那么怎么解决呢。要用到dns解析服务器地址，我四处查找找到了几个免费公共的DNS解析服务器。\n|:–:|:–:|:–:||服务商|dns1|dns2||阿里|223.5.5.5|223.6.6.6||百度|180.76.76.76|2400:da00::6666(ipv6)||OpenDNS|208.67.222.222|208.67.220.220||Google|208.67.222.222|208.67.220.220||114 DNS|114.114.114.114|114.114.115.115||Cloudflare|1.1.1.1|1.0.0.1||DNSPod|119.29.29.29|182.254.116.116|\nPS:如果配置了不合理的DNS服务器，可能会导致网速的缓慢、打不开网站等情况。一些恶意的DNS还会让你的电脑弹出恶意广告等安全问题。\n在网卡设置页，右击点属性，然后双击internet协议版本4(TCP/IPv4)，然后点击使用下面的DNS服务器地址，在下边的两个输入框中输入dns地址&#96;，最后点击确定。这个时候就可以打开浏览器访问网页正常上网了。\n\n\n","slug":"记录一次dns服务异常","date":"2023-04-26T13:21:51.000Z","categories_index":"疑难杂症,Win10","tags_index":"win的小问题,DNS异常","author_index":"小北"},{"id":"be217c1522293fe11dc3486dd91b1066","title":"手把手教你获取免费域名","content":"开篇建站最不能缺的是什么？当然是服务器以及域名了，这两个可谓是重中之重、缺一不可。有些新手站长入坑的时候，可能因为各种各样的原因，没有属于自己的顶级域名。可能是因为是学生党没有money，国内注册商域名价格从几元到几千元都有。那我们能不能从一些地方注册免费域名呢？当然是可以的，在国外有一个平台Freenom 就可以获取免费域名。他可以提供.ml .ga .tk .gq .cf这五个免费顶级域名的申请。每次最长可以选择一年，在快要到期的前两个星期左右会提醒你是否续费。到时候我们可以选择免费续费，理论是永久的 ::(滑稽)\n\n购买域名第一步首先我们需要有一个浏览器，一个灵活的双手，以及一个梯子。然后开启梯子进入Freenom官网\n第二步然后我们直接在输入框中输入自己想要的域名前缀，如博主填入的是yunyuwu.cf然后我们点击检查可用性\n\n\n\n\n\n\n\n\n\n毕竟是外网，可能会有些卡，我们有点耐心要稍等一会。\n\n第三步然后我们会看到以及列出来了这个可用域名以及别的可用域名。然后我们点击选，点击完成。\n第四步点击后会跳转到这个页面，我们点击选择12 Months @ FREE后点击Continue\n第五步等待跳转至下个页面后，我们在输入框中输入自己的邮箱，点击下方的Verify My Email Address。\n第六步之后进入自己的邮箱，点击他给你发来的链接进行验证。在框中填入信息，进入结算页面。\n完成购买最后点击完成订单进入结算页面，勾选下面的选项，然后点击Complete Order完成购买\n\n选择dns服务既然以及购买好了免费域名，想要使用的话还需要配置DNS服务。DNS服务商有好多好多，这边推荐几个DNS服务商吧\n\nDNSpod曾经国内最大的DNS服务商，国内用户曾达到40%左右，后被腾讯收购，不得不说腾讯还是财大气粗。国内的使用情况还是不错的，申请sll证书后，好像一个月还有10个G的免费cdn额度使用。国外个人觉得有点拉胯，好像并没有海外的DNS服务器。\n阿里云作为国内最大的云服务提供商之一，怎么可能没有自己的DNS解析服务。他所提供的DNS解析有免费版以及收费版，虽然是免费版，但依然很稳定，个人使用免费版我觉得已经足够了。和DNSpod一样，貌似也没有海外DNS服务器。\n华为云一样是国内科技巨头，华为云的DNS服务器满地开花，目前已经部署了DNS服务器的可用区包括：北京、廊坊、上海、广州、深圳、贵阳、香港、泰国、新加坡、日本、德国、南非、俄罗斯、智利、迪拜、巴西、墨西哥等，可以说是遍布全球了。最牛的还是自定义TTL值，虽然是免费，但是他可以设置为1秒。相当于，我现在改，客户端立马就会生效。在某里以及某讯这是要付费版才有的。\n\n\n\n\n\n\n\n\n\n\n上边是本人自己使用过的，下面说些本人没使用过，但风评好像不错的国外DNS服务商1.ZoneEdit（ZoneEdit） ZoneEdit：美国著名的老牌免费域名DNS解析服务，于1999年成立。免费帐户最多可添加5个域名。解析类型基本上都支持。界面超级简洁，速度快，稳定。2.Cloudflare(Cloudflare.com) Cloudflare美国著名的高防CDN服务商，也有免费DNS服务，在国外节点很多。在国内与百度云加速合作，国内节点走百度云加速，不过要求域名备案。有不少国内外的个人站长拿来做防御cdn。效果还是可以的，比较是免费。3.xname.org 欧洲一家老牌的免费DNS服务商，国内打开较慢，只适合做国外网站的用户。\n\n配置dns服务那么有了DNS服务商后，就应该配置DNS了\n第一步进入域名列表，找到要配置的域名点击Manage Domain然后点击Management Tools下的Nameservers，然后再选择第二个选项（Use custom nameservers (enter below)）\n第二步填入dns服务商给的地址。本人使用的是DNSpod的。进入DNSpod控制台，点击添加域名，输入域名，显示dns不正确。然后我们点击查看详情，复制他给的两个服务器地址，填入到freenom控制台去。最后点保存（Change Nameservers），然后等待一会，和你的小女朋友唠唠嗑 ::(滑稽) 等待设置生效。 \n第三步最后回到DNSpod点击重新验证，如下图所示，就是o了 :@(赞一个)\n\n注意事项\n挂梯子的话，要注意自己填信息时的地址要与梯子的ip地址一致（精确到国家或市区），不然就会出现些问题\n第一步查询可用域名时，记得要带后缀，如：yunyuwu.cf yunyuwu.ga等，不然他有时候也会提示说不可用。\n\n\n总结最后希望大家都可以拥有自己喜欢的域名，在建站路上一路长虹 :@(高兴)\n","slug":"手把手教你获取免费域名","date":"2023-04-26T13:13:37.000Z","categories_index":"杂谈,建站那些事","tags_index":"杂谈,域名","author_index":"小北"},{"id":"6f2386355e5d25069f49b792adc71cd7","title":"Typecho支持emoji","content":"开篇今天也是突发奇想的购买更换了一个主题，虽然破费了我兜里仅有的58r。但有一说一的是这主题确实不错，唯一不足之处就是没能让作者把他的审美传授给我，这主题实在是太棒了， 233333333~\n问题的浮现在使用了该主题之后看到搭配emoji表情可以让改主题更加美观~，于是我就上了，结果在将emoji表情放进去保存的时候，突如其来的Database Query Error报错让我措手不及。就这样的小问题怎么能够阻止我这样的好奇宝宝呢？\n\n于是我抓紧时间问起了度娘。最后的结果是：在 MySQL 中，UTF-8只支持最多 3 个字节，而 emoji 是 4 个字节。 Typecho默认不支持emoji表情，其实不是程序的锅，而是由于编码的问题，只需要将默认的数据库编码utf8修改为utf8mb4即可，当然别忘了，utf8mb4编码只有在PHP5.5以后才支持。. 简单两步即可让typecho支持emoji.那么既然知道了问题的所在，就应该去着手解决了吧\n\n解决办法：第一步1.首先我们进入数据库控制面板，然后点击我们博客对应的数据库。（楼主这边的是yywbk）\n第二步2.然后我们点击sql并将我们的代码粘贴进去点击右下角的执行按钮!\nalter table typecho_comments convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_contents convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_fields convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_metas convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_options convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_meting convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_relationships convert to character set utf8mb4 collate utf8mb4_general_ci;\nalter table typecho_users convert to character set utf8mb4 collate utf8mb4_general_ci;\n\n第三步3.我们到网站的根目录下找到config.inc.php在其中的六十行左右我们可以看到如下代码，然后我们将其替换掉\n&#x2F;** 定义数据库参数 *&#x2F;\n$db &#x3D; new Typecho_Db(&#39;Pdo_Mysql&#39;, &#39;typecho_&#39;);\n$db-&gt;addServer(array (\n&#39;host&#39; &#x3D;&gt; &#39;localhost&#39;,\n&#39;user&#39; &#x3D;&gt; &#39;这是你的数据库名&#39;,\n&#39;password&#39; &#x3D;&gt; &#39;你数据的密码&#39;,\n&#39;charset&#39; &#x3D;&gt; &#39;utf8mb4&#39;, &#x2F;&#x2F; 将原来的utf8修改为 utf8mb4\n&#39;port&#39; &#x3D;&gt; &#39;这是你的数据库端口&#39;,\n&#39;database&#39; &#x3D;&gt; &#39;这是你的数据库名&#39;,\n\n总结这样我们就可以在typecho中自由自在的使用emoji表情了，那让我们开始实践吧。\n","slug":"typecho支持emoji","date":"2023-04-26T12:52:58.000Z","categories_index":"Note,Typecho,Mysql","tags_index":"Note,Typecho,Mysql","author_index":"小北"},{"id":"9c45969b7c7c621dbc44b056189b4af6","title":"css基础第二弹","content":"css基础第二弹一、emmet语法1、简介Emmet语法的前身是Zen coding,它使用缩写,来提高html&#x2F;css的编写速度, Vscode内部已经集成该语法。快速生成HTML结构语法快速生成CSS样式语法\n2、快速生成HTML结构语法\n生成标签 直接输入标签名 按tab键即可 比如div然后tab键，就可以生成&lt;div&gt;&lt;/div&gt;\n如果想要生成多个相同标签 加上*就可以了 比如div*3就可以快速生成3个div\n如果有父子级关系的标签，可以用&gt;比如ul&gt;li就可以了\n如果有兄弟关系的标签，用+就可以了 比如div+p\n如果生成带有类名或者id名字的，直接写.demo或者#two tab键就可以了\n如果生成的div 类名是有顺序的，可以用自增符号$\n如果想要在生成的标签内部写内容可以用&#123; &#125;表示\n\n3、快速生成CSS样式语法CSS 基本采取简写形式即可\n比如w200按tab可以生成width: 200px;\n比如lh26px按tab可以生成line-height: 26px;\n4、快速格式化代码Vscode快速格式化代码:shift+alt+f\n也可以设置 当我们 保存页面的时候自动格式化代码:\n1）文件 ——.&gt;【首选项】———-&gt;【设置】；\n2）搜索emmet.include;\n3）在settings.json下的【工作区设置】中添加以下语句：\n&quot;editor.formatOnType&quot;: true,\n&quot;editor.formatOnSave&quot;: true\n\n\n\n二、css的复合选择器1、什么是复合选择器？在 CSS 中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的，可以更准确、更高效的选择目标元素（标签）常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等\n2、后代选择器 (重要）定义：\n后代选择器又称为包含选择器，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。\n语法：\n\n语法说明：\n\n元素1 和 元素2 中间用空格隔开\n元素1 是父级，元素2 是子级，最终选择的是元素2\n元素2 可以是儿子，也可以是孙子等，只要是元素1 的后代即可\n元素1 和 元素2 可以是任意基础选择器\n\n例子：\n\t&lt;style&gt;\n\t\t.red ul li a &#123;\n\t\t\tcolor: red;\n\t\t&#125;\n\t&lt;&#x2F;style&gt;\n&lt;body&gt;\n\t&lt;div class&#x3D;&quot;red&quot;&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;百度&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;\n\t\t&lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;百度&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;\n\t&lt;&#x2F;ul&gt;\n\t&lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;\n上述语法表示选择ul中li中里面的所有a标签(后代元素)。\n3、子选择器 (重要）定义：\n子元素选择器（子选择器）只能选择作为某元素的最近一级子元素。\n（简单理解就是选亲儿子元素）\n语法：\n\n\n上述语法表示选择元素1 里面的所有直接后代(子元素) 元素2。\n语法说明：\n\n元素1 和 元素2 中间用 大于号 隔开\n元素1 是父级，元素2 是子级，最终选择的是元素2\n元素2 必须是亲儿子，其孙子、重孙之类都不归他管. 你也可以叫他 亲儿子选择器\n\n例子：\n\t&lt;style&gt;\n\t\t.red&gt;a &#123;\n\t\t\tcolor: red;\n\t\t&#125;\n\t&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\t&lt;div class&#x3D;&quot;red&quot;&gt;\n\t\t&lt;a href&#x3D;&quot;#&quot;&gt;大肘子&lt;&#x2F;a&gt;\n\t&lt;ul&gt;\n\t\t&lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;猪头&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;\n\t\t&lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;猪尾巴&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;\n\t&lt;&#x2F;ul&gt;\n&lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;\n\n4、并集选择器 (重要）定义：\n并集选择器可以选择多组标签, 同时为他们定义相同的样式，通常用于集体声明。并集选择器是各选择器通过英文逗号（,）连接而成，任何形式的选择器都可以作为并集选择器的一部分。\n语法：\n\n上述语法表示选择元素1 和 元素2。\n语法说明：\n\n元素1 和 元素2 中间用逗号隔开\n逗号可以理解为和的意思\n并集选择器通常用于集体声明\n并集选择器中的最后一个选择器不需要加逗号\n\n例子：\n\n5、伪类选择器定义：\n伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。\n语法：\n伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover、:first-child。\n6、链接伪类选择器定义：\n伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。\n语法：\n伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover 、 :first-child 。\n\n\n\n伪类选择器\n属性\n\n\n\na:link\n没有点击过的(访问过的)链接\n\n\na:visited\n点击过的(访问过的)链接\n\n\na:hover\n鼠标经过的那个链接\n\n\na:active\n鼠标正在按下还没有弹起鼠标的那个链接\n\n\n链接伪类选择器注意事项\n\n为了确保生效，请按照 LVHA 的循顺序声明 :link－:visited－:hover－:active\n记忆法：love hate 或者 lv 包包 hao\n因为a链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式。\n\n链接伪类选择器实际工作开发中的写法：\n\n7、:focus伪类选择器定义：\n:focus伪类选择器用于选取获得焦点的表单元素。\n焦点就是光标，一般情况&lt;input&gt;类表单元素才能获取\n例子：\n\n复合选择器总结\n\n三、css的显示模式1、什么是元素的显示模式定义：\n元素显示模式就是元素（标签）以什么方式进行显示，比如自己占一行，比如一行可以放多个。\n作用：\n网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页。\n2、元素显示模式的分类2.1、块元素常见的块元素：\n&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;\n\n&lt;div&gt;标签是最典型的块元素。\n块级元素的特点：\n\n比较霸道，自己独占一行。\n高度，宽度、外边距以及内边距都可以控制。\n宽度默认是容器（父级宽度）的100%。\n是一个容器及盒子，里面可以放行内或者块级元素。\n\n注意：\n文字类的元素内不能放块级元素\n&lt;p&gt; 标签主要用于存放文字，因此 &lt;p&gt; 里面不能放块级元素，特别是不能放&lt;div&gt; \n同理， &lt;h1&gt;~&lt;h6&gt;等都是文字类块级标签，里面也不能放其他块级元素\n\n\n\n2.2、行内元素常见的行内元素：\n&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;\n\n&lt;span&gt; 标签是最典型的行内元素。有的地方也将行内元素称为内联元素。\n\n\n\n行内元素的特点：\n\n相邻行内元素在一行上，一行可以显示多个。\n\n高、宽直接设置是无效的。\n\n默认宽度就是它本身内容的宽度。\n\n行内元素只能容纳文本或其他行内元素。\n\n\n注意：\n链接里面不能再放链接特殊情况链接&lt;a&gt;里面可以放块级元素，但是给&lt;a&gt;转换一下块级模式最安全.\n2.3、行内块元素常见的行内块标签：\n&lt;img &#x2F;&gt;、&lt;input &#x2F;&gt;、&lt;td&gt;\n\n它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素。\n行内块元素的特点：\n\n和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。\n一行可以显示多个（行内元素特点）。\n默认宽度就是它本身内容的宽度（行内元素特点）。\n高度，行高、外边距以及内边距都可以控制（块级元素特点）。\n\n2.4、元素显示模式总结\n学习元素显示模式的主要目的就是分清它们各自的特点，当我们网页布局的时候，在合适的地方用合适的标签元素。\n3、元素显示模式的转换简单理解:\n一个模式的元素需要另外一种模式的特性比如想要增加链接&lt;a&gt;的触发范围。\n转换方式\n\n转换为块元素：display:block;\n转换为行内元素：display:inline;\n转换为行内块：display: inline-block;\n\n4、单行文字垂直居中的代码解决方案:\n让文字的行高等于盒子的高度  就可以让文字在当前盒子内垂直居中\n\n\n简单理解:\n\n行高的上空隙和下空隙把文字挤到中间了\n如果行高小于盒子高度,文字会偏上\n如果行高大于盒子高度,则文字偏下\n\n四、css的背景通过 CSS 背景属性，可以给页面元素添加背景样式。背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。\n1、背景颜色样式名称：\nbackground-color定义元素的背景颜色\n使用方式：\n\n其他说明：\n元素背景颜色默认值是transparent（透明）\n\n2、背景图片样式名称：\nbackground-image定义元素的背景图片\n使用方式：\n\n\n其他说明：\n\n实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片, 优点是非常便于控制位置. (精灵图也是一种运用场景)\n\n注意：背景图片后面的地址，千万不要忘记加 URL， 同时里面的路径不要加引号。\n\n\n3、背景平铺样式名称：\n​background-repeat 设置元素背景图像的平铺\n使用方式：\n\n\n4、背景图片位置样式名称：\nbackground-position属性可以改变图片在背景中的位置\n使用方式：\n\n参数代表的意思是：x 坐标和 y 坐标。 可以使用 方位名词 或者 精确单位\n\n其他说明：\n1、参数是方位名词\n\n如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left  top 和 top  left 效果一致\n\n如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐\n\n\n2、参数是精确单位\n如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标\n如果只指定一个数值，那该数值一定是 x 坐标，另一个默认垂直居中\n3、参数是混合单位\n如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标\n5、背景图片固定样式名称：\nbackground-attachment属性设置背景图像是否固定或者随着页面的其余部分滚动。\n使用方式：\n\n\n其他说明：\nbackground-attachment后期可以制作视差滚动的效果。\n6、背景样式合写背景合写样式：\nbackground: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;\n使用方式：\n\n7、背景色半透明CSS3 提供了背景颜色半透明的效果。\n使用方式：\n\n\n最后一个参数是 alpha 透明度，取值范围在 0~1之间\n我们习惯把 0.3 的 0 省略掉，写为 background: rgba(0, 0, 0, .3);\n\n注意：\n\n背景半透明是指盒子背景半透明，盒子里面的内容不受影响\nCSS3 新增属性，是 IE9+ 版本浏览器才支持的，但是现在实际开发,我们不太关注兼容性写法了,可以放心使用\n\n8、背景总结\n","slug":"css基础第二弹","date":"2023-04-26T12:42:57.000Z","categories_index":"Note,CSS","tags_index":"Note,CSS","author_index":"小北"},{"id":"86ce05b20dc56cd09c1e54f74cc6e739","title":"css基础第一弹","content":"HTML基础也是完结了，那下面就是css部分\ncss简介css是什么：CSS是层叠样式表(Cascading Style Sheets)的简称，有时我们也会称之为CSS样式表或级联样式表。CSS 是也是一种标记语言。有什么用：主要用于设置HTML页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式。CSS是一种描述HTML文档样式的语言,CSS描述应该如何显示HTML元素。\n\n\n\n\n\n\n\n\n\nCSS的主要使用场景是美化页面，布局页面。\nCSS语法规范使用HTML时，需要遵从一定的规范，CSS也是如此。\n\n\n\n\n\n\n\n\n\nCSS规则由两个主要的部分构成：选择器以及一条或多条声明。\n\n选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式\n属性和属性值以键值对的形式出现\n属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等\n属性和属性值之间用英文:分开\n多个“键值对”之间用英文;进行区分\n\n所有的样式都包含在&lt;style&gt;标签内。&lt;style&gt;标签写在&lt;head&gt;标签里面\n&lt;head&gt;\n&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n&lt;title&gt;&lt;&#x2F;title&gt;\n&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;\n\t.h2 &#123;\n\t\twidth: 200px;\n\t&#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\ncss的引入方法按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类：\n\n行内样式表（行内式）\n内部样式表（嵌入式）\n外部样式表（链接式）\n\n##行内样式表行内样式表（内联样式表）是在元素标签内部的style属性中设定 CSS 样式。\n\n\n\n\n\n\n\n\n\n一般用于修改简单样式\n&lt;h1 style&#x3D;&quot; color:red; text-align: center;&quot;&gt;北方高温明日达鼎盛 京津冀多地地表温度将超过20℃&lt;&#x2F;h1&gt;\n\n##内部样式表内部样式表（内嵌样式表）是写到html页面内部. 是将 CSS 代码抽取出来，单独放到一个&lt;style&gt;标签中。\n\n\n\n\n\n\n\n\n\nstyle标签理论上可以放到html文档的任何地方，一般情况下放在head标签中\n&lt;head&gt;\n&lt;style&gt;\n div &#123;\n color: red;\n font-size: 12px;\n &#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n\n外部样式表实际开发都是外部样式表，适合于样式比较多的情况。核心是:样式单独写到CSS 文件中，之后把CSS文件引入到 HTML 页面中使用\n\n\n\n\n\n\n\n\n\nrel属性定义当前文档与被链接文档的关系，在这里是stylesheet，表示被链接文档是一个css样式表文件。href是定义所连接样式表的URL，可以是相对路径也可以是绝对路径&lt;link rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt;\n注意事项：三种方式修改一个标签（内容）优先级最大的是行内   内部样式与外部样式 优先级是相同的   谁在下面结果就是谁\ncss选择器css选择器有什么作用？选择器(选择符)就是根据不同需求把不同的标签选出来这就是选择器的作用。 简单来说，css选择器就是用于指向需要css作用的标签，让css样式知道自己需要到那个标签上去。\n选择器的分类css选择器分为基础选择器和复合选择器两个大类，这里是基础选择器\n\n基础选择器是由单个选择器组成的。\n基础选择器又包括：标签选择器、类选择器、id选择器和通配符选择器\n\n标签选择器标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。\n\n\n\n\n\n\n\n\n\n标签选择器可以把某一类标签全部选择出来，比如所有的&lt;div&gt;标签和所有的&lt;a&gt;标签语法：\n&lt;!--语法：标签名 &#123; 属性：值 &#125;--&gt;\n标签名&#123;\n 属性1: 属性值1; \n 属性2: 属性值2; \n 属性3: 属性值3; \n ...\n&#125; \n\na &#123;\n  text-decoration:none;\n&#125;\n\n类选择器差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器。\n\n\n\n\n\n\n\n\n\n先定义一个类名，编写css样式之后使用class引入\n语法：\n&lt;!--\n.类名 &#123;\n 属性1: 属性值1; \n ...\n&#125;\n--&gt;\n&lt;style&gt;\n.red &#123;\n color: red; \n&#125;\n&lt;&#x2F;style&gt; \n&lt;body&gt;\n&lt;div class&#x3D;&#39;red&#39;&gt;变成红色&lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;\n\n我们也可以给一个标签指定多个类名应用多个样式。语法：\n&lt;!--red是一个样式，font20又是一个样式--&gt;\n&lt;div class&#x3D;&quot;red font20&quot;&gt;多个样式&lt;&#x2F;div&gt;\n\n注意事项\n\n类选择器使用“.”（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。理解为给这个标签起了个名字，名字我们说了算。\n长名称或词组可以使用中横线来为选择器命名\n不要使用纯数字、中文等命名，尽量使用英文字母来表示\n多类名，每个类名必须使用空格分开\n命名要有意义，尽量使别人一眼就知道这个类名的目的。\n命名规范，命名文档地址\n\nid选择器id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。根据元素id来选择元素，具有唯一性，这说明一个id在一个页面内只能出现一次，ID选择器以#来定义，在HTML中用id来引用。\n\n\n\n\n\n\n\n\n\n注意事项：一个id属性只能在每个 HTML 文档中出现一次。\n语法：\n#id名 &#123;\n 属性1: 属性值1; \n ...\n&#125; \n&lt;!--举例,将id为nav的元素中的内容设置为红色--&gt;\n#nav &#123;\n color:red;\n&#125;\n\n通配符选择器通配符选择器可以选择页面上的所有元素，并对他们应用想要的样式，用*来表示。但不建议使用，IE6不支持，给大型网站增加负担。\n语法\n* &#123;\n 属性1: 属性值1; \n&#125;\n&lt;!--举例--&gt;\n* &#123; color : red ; &#125;  &lt;!--页面中的元素都会变红色--&gt;\n* &#123; font-size : 30px ; &#125;  &lt;!--页面中的字体都会变成30px--&gt;\n基础选择器总结\n\n\n基础选择器\n作用\n特点\n使用情况\n用法\n\n\n\n标签选择器\n可以所有相同的标签，比如p\n不能差异化选择\n较多\np {color:red;}\n\n\n类选择器\n可以选出一个或多个标签\n可以根据需求选择，灵活多变\n非常多\n.nav {color:red;}\n\n\nid选择器\n一次只能选择一个标签\n一个id属性只能在每个HTML文档中出现一次\n常和js搭配使用\n#nav {color:red;}\n\n\n通配符选择器\n选择所有标签\n选择的太多，很多不需要\n特殊情况使用\n*{color:red;}\n\n\n字体字体属性CSS Fonts (字体)属性用于定义字体系列、大小、粗细、和文字样式（如斜体）\n####字体系列CSS 使用font-family属性定义文本的字体系列。\np &#123; font-family:&quot;微软雅黑&quot;;&#125; \ndiv &#123;font-family: Arial,&quot;Microsoft Yahei&quot;, &quot;微软雅黑&quot;;&#125;\n\n注意事项\n\n各种字体之间必须使用英文状态下的逗号隔开\n一般情况下,如果用空格隔开的多个单词组成的字体,加引号\n\n字体大小CSS 使用font-size属性定义字体大小\np &#123; \n font-size: 20px; \n&#125;\n\n\npx（像素）是网页中常用的单位\n不同浏览器的默认字体大小是不一样的（chrome浏览器默认文字大小为16px），我们尽量给一个明确大小\n可以给body标签指定整个页面大小\n\n字体粗细CSS 使用font-weight属性设置文本字体的粗细。\n\n\n\n\n\n\n\n\n\n在使用数字作为属性值的时候，数字后面不需要加单位\np &#123; \n font-weight: bold;\n&#125;\n\n\n\n属性值\n描述\n\n\n\nnormal\n默认值（不加粗）\n\n\nbold\n定义粗体（加粗的）\n\n\n100~900\n400等于normal，700等于bold\n\n\n文字样式CSS 使用font-style属性设置文本的风格。\n\n\n\n\n\n\n\n\n\n很少使用倾斜样式，反而是要用于给em等标签改为不倾斜。\np &#123; \n font-style: normal;\n&#125;\n\n\n\n属性值\n描述\n\n\n\nnormal\n默认值，显示标准的字体样式\n\n\nitalic\n浏览器会显示倾斜的字体样式\n\n\n字体复合属性字体系列、大小、粗细、和文字样式字体属性可以把以上文字样式综合来写, 这样可以更节约代码\nbody &#123; \n font: font-style font-weight font-size&#x2F;line-height font-family;\n&#125;\n注意事项\n\n使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开\n不需要设置的属性可以省略（会取默认值），但必须保留font-size和font-family属性，否则font属性将不起作用\n\n字体属性总结\n\n\n属性值\n表示\n注意点\n\n\n\nfont-size\n字号\n通常使用px（像素）必须跟上单位\n\n\nfont-family\n字体\n按要求写字体\n\n\nfont-weight\n字体粗细\n加粗是bold或700，不加粗是normal或400，数字后不跟单位\n\n\nfont-style\n字体样式\n倾斜是italic，不倾斜是normal，常用于取消倾斜\n\n\nfont\n字体连写\n字体连写是有顺序的，不能换位置。其中字号和字体必须同时出现\n\n\n文本属性CSS Text（文本）属性可定义文本的外观，比如文本的颜色、对齐文本、装饰文本、文本缩进、行间距等。\n\n\n\n\n\n\n\n\n\n颜色表示有三种方式，预定义如pink、十六进制如#FF0000、RGB代码rgb(255,0,0)我们常用十六进制\n文本颜色color属性用于定义文本颜色\ndiv &#123; \n color: red;\n&#125;\n对齐文本text-aligh属性用于设置元素内文本内容的水平对齐方式。\ndiv &#123; \n text-align: center;\n&#125;\n\n\n\n\n属性值\n解释\n\n\n\nleft\n左对齐（默认值）\n\n\nright\n右对齐\n\n\ncenter\n居中对齐\n\n\n装饰文本text-decoration属性规定添加到文本的修饰。可以给文本添加下划线、删除线、上划线等。\n\n\n\n属性值\n描述\n\n\n\nnone\n默认（没有装饰线）\n\n\nunderline\n下划线，a标签自带下划线\n\n\noverline\n上划线\n\n\nline-through\n删除线\n\n\n文本缩进text-indent属性用来指定文本的第一行的缩进，通常是将段落的首行缩进。\n\n\n\n\n\n\n\n\n\nem是一个相对单位，就是当前元素（font-size) 1 个文字的大小, 如果当前元素没有设置大小，则会按照父元素的1个文字大小。\np &#123; \n text-indent: 2em;\n&#125;\n\n行间距line-height属性用于设置行间的距离（行高）。可以控制文字行与行之间的距离.\np &#123; \n line-height: 26px;\n&#125;\n\n文本属性总结\n\n\n属性\n表示\n注意点\n\n\n\ncolor\n文本颜色\n通常使用十六进制简写形式#fff\n\n\ntext-align\n文本对齐\n可以设定文字水平的对齐方式\n\n\ntext-indent\n文本缩进\n用于段落首行缩进2个字的距离text-indent:2em;\n\n\ntext-decoration\n文本修饰\n添加下划线underline取消下划线none\n\n\nline-height\n行高\n控制行与行之间的距离\n\n\n总结思维导图\n","slug":"css基础第一弹","date":"2023-04-26T12:34:16.000Z","categories_index":"Note,CSS","tags_index":"Note,CSS","author_index":"小北"},{"id":"e6b3d052518c155e38fb8875384406a0","title":"html学习笔记第二弹","content":"上一篇文章为HTML标签上半部分，此篇为下半部分。\n表格标签标签table、tr与td标签表格标签的作用：主要用于显示、展示数据，因为它可以让数据显示的非常的规整，可读性非常好。特别是后台展示数据的时候，能够熟练运用表格就显得很重要。一个清爽简约的表格能够把繁杂的数据表现得很有条理。\n\n\n\n\n\n\n\n\n\n表格标签不是用来布局，是用来整理数据。\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;第一行单元格内的文字&lt;&#x2F;td&gt;&lt;td&gt;第一行单元格内的文字&lt;&#x2F;td&gt;&lt;td&gt;第一行单元格内的文字&lt;&#x2F;td&gt;\n    &lt;&#x2F;tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;第二行单元格内的文字&lt;&#x2F;td&gt;&lt;td&gt;第二行单元格内的文字&lt;&#x2F;td&gt;&lt;td&gt;第二行单元格内的文字&lt;&#x2F;td&gt;\n    &lt;&#x2F;tr&gt;\n    ...\n&lt;&#x2F;table&gt;\n上边的示例中\n\n&lt;table&gt;&lt;/table&gt;是用于定义表格的标签。说明这个地方是一个表格\n&lt;tr&gt;&lt;/tr&gt;标签用于定义表格中的行，必须嵌套在  标签中。\n&lt;td&gt;&lt;/td&gt;用于定义表格中的单元格，必须嵌套在标签中。\n字母td指表格数据（table data），即数据单元格里面的的内容。\n\n表格标题&lt;table&gt;\n    &lt;caption&gt;我是表格标题&lt;&#x2F;caption&gt;\n&lt;&#x2F;table&gt;\n使用及注意事项：\n\ncaption元素定义表格标题，通常这个标题会被居中且显示与表格之中。\ncaption标签必须紧随table标签之后。\n这个标签只存在表格里面才有意义。\n\nth（表头单元格）标签一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗居中显示.&lt;th&gt;标签表示HTML表格的表头部分(table head的缩写)。\n\n\n\n\n\n\n\n\n\nth也是一个单元格，只是和td不一样，会让文字加粗居中。\n\n\n\n属性名\n属性值\n描述\n\n\n\nalign\nleft,center,right\n规定表格相对周围元素的对其方式\n\n\nborder\n1或””\n规定表格单元是否拥有边框，默认为””,表示没有边框\n\n\ncellpadding\n像素值\n规定单元边沿与其内容之间的空白，默认1像素\n\n\ncellspacing\n像素值\n规定单元格之间的空白，默认2像素\n\n\nwidth\n像素值或百分比\n规定表格的宽度\n\n\n表格结构标签作用:因为表格可能会很长,为了更好的表示表格的语义，可以将表格分割成表格头部和表格主体两大部分在表格标签中，分别用：&lt;thead&gt;标签表示表格的头部区域、&lt;tbody&gt;标签表示表格的主体区域，这样可以更好的分清表格结构。&lt;tfoot&gt;标记用于提供页脚内容组。此标记在带有标题和正文的HTML表中使用，称为“thead”和“tbody”。 &lt;tfoot&gt;标记是表的子标记，是&lt;tr&gt;和&lt;td&gt;的父标记。注意事项：\n\n&lt;thead&gt;&lt;/thead&gt;用于定义表格的头部。 内部必须拥有&lt;tr&gt;标签，一般是位于第一行。\n&lt;tbody&gt;&lt;/tbody&gt;用于定义表格的主体，主要用于放数据本体。\ntfoot标签用于提供页脚内容组，\n以上标签都是放在  标签中。\n如果使用thead、tfoot以及tbody元素，就必须使用全部的元素。它们的出现次序是：thead、tfoot、tbody，这样浏览器就可以在收到所有数据前呈现页脚了。\n\n合并单元格有些表格不需要那么多的单元格，我们可以给他们合并，这个时候需要用到合并单元格。合并单元格的时候有两种合并，一个是跨行合并，顾名思义就是跨行与行之间合并、还有一个跨列合并，列与列之间合并。\n\n跨行合并：rowspan&#x3D;”合并单元格的个数”\n跨列合并：colspan&#x3D;”合并单元格的个数”\n\n使用方法：\n\n确定是跨行或跨列\n在要合并的单元格写上合并方式与合并单元格数量例如：&lt;td colspan=“2”&gt;&lt;/td&gt;即跨列合并两个单元格\n删除被合并的单元格。\n\n属性\n\n\n属性名\n属性值\n描述\n\n\n\nborder\n1或””\n规定表格单元是否拥有边框，默认为””,表示没有边框\n\n\nwidth\n像素值或百分比\n规定表格的宽度\n\n\nheight\n像素值或百分比\n规定表格的高度\n\n\ncellspacing\n像素值\n规定单元格之间的空白，默认2像素单元格与单元格之间的距离\n\n\ncellpadding\n像素值\n规定单元边沿与其内容之间的空白，默认1像素\n\n\nalign\nleft,center,right\n规定表格相对周围元素的对其方式\n\n\ncolspan\n合并的单元格个数\n列合并\n\n\nrowspan\n合并的单元格个数\n行合并\n\n\n列表表格是用来显示数据的，那么列表就是用来布局的。HTML支持无序列表、有序列表、自定义列表。列表最大的特点就是整齐、整洁、有序，它作为布局会更加自由和方便。\n无序列表无序列表是一个项目的列表，此列项目使用粗体圆点●进行标记。无序列表使用&lt;ul&gt;标签，列表项使用  标签定义。\n语法格式：\n&lt;ul&gt;\n &lt;li&gt;列表项1&lt;&#x2F;li&gt;\n &lt;li&gt;列表项2&lt;&#x2F;li&gt;\n &lt;li&gt;列表项3&lt;&#x2F;li&gt;\n ...\n&lt;&#x2F;ul&gt;\n\n注意事项：\n\n无序列表的各个列表项之间没有顺序级别之分，是并列的。\n&lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，不能直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字。\n&lt;li&gt;&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。\n无序列表会带有自己的样式属性，但在实际使用时，我们会使用 CSS 来设置。\n\n有序列表有序列表就是有顺序排列的列表，其各个列表项会按照一定的顺序排列定义。在HTML标签中，&lt;ol&gt;标签用于定义有序列表，列表排序以数字来显示，并且使用&lt;li&gt;标签来定义列表项。\n语法格式：\n&lt;ol&gt;\n &lt;li&gt;列表项1&lt;&#x2F;li&gt;\n &lt;li&gt;列表项2&lt;&#x2F;li&gt;\n &lt;li&gt;列表项3&lt;&#x2F;li&gt;\n ...\n&lt;&#x2F;ol&gt;\n\n注意事项：\n\n&lt;ol&gt;&lt;/ol&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，不能直接在&lt;ol&gt;&lt;/ol&gt;标签中输入其他标签或者文字。\n&lt;li&gt;&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。\n无序列表会带有自己的样式属性，但在实际使用时，我们会使用 CSS 来设置。\n\n自定义列表自定义列表不仅仅是一列项目，而是项目及其注释的组合。\n\n\n\n\n\n\n\n\n\n定义列表常用于对术语或名词进行解释和描述，定义列表的列表项钱没有任何项目符号。\n在HTML标签中，&lt;dl&gt;标签用于定义描述列表（或定义列表），该标签会与&lt;dt&gt;（定义项目&#x2F;名字）和&lt;dd&gt;（描述每一个项目&#x2F;名字）一起使用。\n语法格式：\n&lt;dl&gt;\n   &lt;dt&gt;某个名词&lt;&#x2F;dt&gt;\n   &lt;dd&gt;某个名词的解释1&lt;&#x2F;dd&gt;\n   &lt;dd&gt;某个名词的解释2&lt;&#x2F;dd&gt;\n   …\n   &lt;dt&gt;某个名词2&lt;&#x2F;dt&gt;\n   &lt;dd&gt;某个名词的解释1&lt;&#x2F;dd&gt;\n   &lt;dd&gt;某个名词的解释2&lt;&#x2F;dd&gt;\n   …\n&lt;&#x2F;dl&gt;\n注意事项：\n\n&lt;dl&gt;&lt;/dl&gt;里面只能包含&lt;dt&gt;和&lt;dd&gt;\n&lt;dt&gt;和&lt;dd&gt;个数没有限制，经常是一个&lt;dt&gt;对应多个&lt;dd&gt;\n定义列表的列表项内部可以使用段落、换行符、图片、链接以及其他列表等等\n\n列表总结：\n\n\n\n标签名\n定义\n说明\n\n\n\n&lt;ul&gt;&lt;/ul&gt;\n无序列表\n里面只能包含li，没有顺序\n\n\n&lt;ol&gt;&lt;/ol&gt;\n有序列表\n里面只能包含li，有顺序\n\n\n&lt;dl&gt;&lt;/dl&gt;\n自定义列表\n里面有两个标签，dt和dd\n\n\n表单表单是为了在网页中收集信息\n表单的组成在HTML中一个完整的表单通常由表单域、表单控件（表单元素）、提示信息3部分组成\n表单域表单域&lt;form&gt;&lt;/form&gt;是一个包含表单元素的区域在HTML标签中，&lt;form&gt;标签用于定义表单域，以实现用户信息的收集和传递。\n\n\n\n\n\n\n\n\n\n&lt;form&gt;会把它范围内的表单元素信息提交给服务器\n&lt;form action&#x3D;“url地址” method&#x3D;“提交方式” name&#x3D;“表单域名称&quot;&gt;\n 各种表单元素控件\n&lt;&#x2F;form&gt;\n\n\n\n\n属性\n属性值\n作用\n\n\n\naction\nurl地址\n用于指定接受并处理表单数据的服务器程序的url地址\n\n\nmethod\nget&#x2F;post\n用于设置表单数据的提交方式，其取值为get或post\n\n\nname\n名称\n用于指定表单的名称，用来区分同一个页面中的多个表单域\n\n\n表单控件（表单元素）在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。\n&lt;input&gt;表单元素在表单元素中，&lt;input&gt;标签用于收集用户信息。在&lt;input&gt;标签中包含一个type属性，根据不同的type属性值，输入字段拥有很多种信息（文本字段、复选框、掩码后的文本控件、单选按钮、按钮等）\n\ninput为单标签\ntype属性设置不同的属性值用来指定不同的控件类型\n\ntype属性的常用属性值：\n\n\n\n属性值\n描述\n\n\n\nbutton\n定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）\n\n\ncheckbox\n定义复选框\n\n\nfile\n定义输入字段和“浏览按钮”，供文件上传\n\n\nhidden\n定义隐藏的输入字段\n\n\nimage\n定义图像形式的提交按钮\n\n\npassword\n定义密码字段，该字段中的字符被掩码\n\n\nradio\n定义单选按钮\n\n\nreset\n定义重置按钮重置按钮会清除表单中的所有数据\n\n\nsubmit\n定义提交按钮，提交按钮会把表单数据发送到服务器\n\n\ntext\n定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符\n\n\n除type属性外，标签还有其他属性常用属性有：\n\n\n\n属性\n属性值\n描述\n\n\n\nname\n由用户自定义\n定义input元素的名称\n\n\nvalue\n由用户自定义\n规定input元素的值\n\n\nchecked\nchecked\n规定此input元素首次加载时应当被选中\n\n\nmexlength\n正整数\n规定输入字段中的字符的最大长度\n\n\n\nname和value是每个表单元素都有的属性值,主要是给后台人员使用\nname表单元素的名字, 要求单选按钮和复选框要有相同的name值.\nchecked属性主要针对于单选按钮和复选框, 主要作用一打开页面,就要可以默认选中某个表单元素\nmaxlength是用户可以在表单元素输入的最大字符数, 一般较少使用\n\nlabel标签&lt;label&gt;标签为input元素定义标注（标签）使用场景：&lt;label&gt;标签用于绑定一个表单元素，当点击&lt;label&gt;标签内的文本时，浏览器就会自动将光标转到或选择对应的表单元素上，用来增加用户体验\n\n\n\n\n\n\n\n\n\n核心：&lt;label&gt;标签的for属性应当与相关元素的id属性相同。\n基本语法：\n&lt;label for&#x3D;&quot;sex&quot;&gt;男&lt;&#x2F;label&gt;\n&lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; id&#x3D;&quot;sex&quot; &#x2F;&gt;\n\n&lt;select&gt;表单元素使用场景: 在页面中，如果有多个选项让用户选择，并且想要节约页面空间时，我们可以使用&lt;select&gt;标签控件定义下拉列表。\n基本语法\n&lt;select&gt;\n &lt;option&gt;选项1&lt;&#x2F;option&gt;\n &lt;option&gt;选项2&lt;&#x2F;option&gt;\n &lt;option&gt;选项3&lt;&#x2F;option&gt;\n ...\n&lt;&#x2F;select&gt;\n注意事项\n\n&lt;select&gt;中至少包含一对&lt;option&gt;。\n在&lt;option&gt;中定义selected =&quot;selected&quot;时，当前项即为默认选中项。\n\n&lt;textarea&gt;表单元素使用场景: 当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用 &lt;textarea&gt; 标签。在表单元素中，&lt;textarea&gt;标签是用于定义多行文本输入的控件。使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。\n\n\n\n\n\n\n\n\n\n通过 &lt;textarea&gt; 标签可以轻松地创建多行文本输入框。\n基本语法\n&lt;textarea rows&#x3D;&quot;3&quot; cols&#x3D;&quot;20&quot;&gt;\n 文本内容\n&lt;&#x2F;textarea&gt;\n\n总结思维导图\n","slug":"html学习笔记第二弹","date":"2023-04-26T12:18:46.000Z","categories_index":"Note,HTML","tags_index":"Note,HTML","author_index":"小北"},{"id":"42da13370807e3885153c523b62b7ec8","title":"html学习笔记第一弹","content":"基础认知网页的基本组成网页是由文字、图片、视频、音频、超链接\n五大浏览器及渲染引擎渲染引擎(WebCore)：渲染引擎负责负责对网页语法的解释（如HTML、XML等）并渲染网页（CSS）。渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息。渲染引擎包含的HTML解释器，CSS解释器，处理页面布局渲染等功能。JavascriptCore就是WebKit内置的Javascript引擎。\n\n\n\n浏览器\n内核\n\n\n\nie浏览器\ntrident\n\n\n火狐浏览器\ngecko\n\n\nsafari浏览器\nwebkit\n\n\n谷歌浏览器\nblink\n\n\nOpera浏览器\nblink\n\n\nweb标准\nHTML负责基本结构\ncss负责表现样式\nJavaScript负责交互及动态效果\n\nHTML认知HTML指的是超文本标记语言识用来表示网页的一种语言，html的作用：网页是由网页元素组成的，这些元素是利用html标签描述出来，然后通过浏览器解析，就可以显示给用户了。\nHTML的骨架结构如下：\n&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;title&gt;网页的标题&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    自己的代码\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n开发工具前端的开发工具有很多，这边就举几个例子：\n\nVisual Studio Code\nWebstorm\nSublime\nDreamweaver\nHbuilder X\n\n语法规范注释注释的键盘快捷键ctrl+/例子：\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;title&gt;html中的注释&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;h1&gt;这是文章标题&lt;&#x2F;h1&gt;  \n    &lt;!--这是单行HTML注释 --&gt;\n    &lt;!-- 这个例子是\n         HTML多行注释  --&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n标签的构成标签的定义：使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。\n\n单标签    例：br\n双标签    例：&lt;h1&gt;这是双标签&lt;/h1&gt;\n\n标签的属性所谓属性就是外在特性，比如手机的尺寸\n\n标签的属性写在开始标签的内部\n一个标签里可以存在多个属性\n属性之间使用空格隔开\n标签名与属性之间必须使用空格隔开\n属性顺序不分先后\n\n使用手机举个例子\n\n手机的颜色是黑色\n手机的尺寸是8寸\n水平线的长度是200\n图片的宽度是300\n\n&lt;标签名 属性1&#x3D;&quot;属性值1&quot; 属性2&#x3D;&quot;属性值2&quot;  …&gt; 内容 &lt;&#x2F;标签名&gt; \n&lt;手机 颜色&#x3D;&quot;红色&quot; 大小&#x3D;&quot;5寸&quot;&gt; 手机内容 &lt;&#x2F;手机&gt; \n标签的关系\n嵌套关系（父子关系）html标签包含body标签&lt;html&gt;\n    &lt;body&gt;\n    &lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n并列关系（兄弟关系）：没有谁包含谁，他们是平级的。&lt;h1&gt;这是并列关系&lt;&#x2F;h1&gt;\n&lt;br&gt;\n\n\nHTML标签学习总结一下分为四个部分，排版标签、文本格式化标签、媒体标签与链接标签。\n排版标签排版标签可分为标题标签、段落标签、水平线标签、换行标签、div和span标签\n&lt;h&gt;标题标签标题标签有六个等级，从h1到h6依次降低。英文单词缩写为head，意为标题。使用标题标签会让文字变粗变大从h1~h6逐渐变小，并且每个里边的内容会独占一行。语义：作为标题使用，并且根据重要性递减。\n&lt;h1&gt;我是一级标签&lt;&#x2F;h1&gt;\n&lt;h2&gt;我是二级标签&lt;&#x2F;h2&gt;\n&lt;p&gt;段落标签在网页中，使用p标签定义段落，它可以将整个网页分为若干个段落语义：段落\n&lt;p&gt;我是吴彦祖&lt;&#x2F;p&gt;\n\n&lt;hr /&gt;水平线标签在网页中可以常看到有用水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标记来完成，&lt;hr/&gt;就是创建横跨网页水平线的标记，水平线标签是一个单标签。\n&lt;br /&gt;换行标签在HTML中，一个段落的文字会从左到右依次排列，知道浏览器窗口的右端，然后自动换行。如果想强制在某个地方换行，可以使用&lt;br /&gt;标签，是break的缩写，意为打断，换行。语义：强制换行\n&lt;div&gt;与&lt;span&gt;标签div和span本身是没有语义的，就是一个盒子，用来装内容的。div是division的缩写，代表分割，分区的意思。span表示跨度，跨距或者范围。特点：\n\n&lt;div&gt;标签用来布局，一行只能放一个&lt;div&gt;是大盒子.\n&lt;span&gt;标签用来布局，一行可以放很多个&lt;span&gt;是个小盒子。\n\n文本格式化标签\n\n\n标签\n作用\n\n\n\n&lt;b&gt; &lt;strong&gt;\n文字以粗体方式显示\n\n\n&lt;i&gt; &lt;em&gt;\n文字以斜体方式显示\n\n\n&lt;s&gt; &lt;del&gt;\n文字以加删除线显示\n\n\n&lt;u&gt; &lt;ins&gt;\n文字以加下划线的方式显示\n\n\n&lt;sub&gt;\n定义下标文本\n\n\n&lt;sup&gt;\n定义上标文本\n\n\n&lt;small&gt;\n定义小号字体，使文本比周围字体小一号，下限1号\n\n\n&lt;big&gt;\n定义大号字体，使文本比周围字体大一号，上限7号\n\n\n注意：在上面的标签中，更推荐使用后者实现相同的功能，因为后者语义更加强烈一些。\n\n媒体标签图片标签img标签为图片标签属于单标签，意思是说，它只包含属性，并且没有闭合标签。作用：在网页中显示一张图片\n\n\n\n属性\n属性值\n描述\n\n\n\nsrc\nURL\n图像的路径\n\n\nalt\n文本\n图像不能显示时替换的文本\n\n\ntitle\n文本\n鼠标悬停时显示的内容\n\n\nwidth\n像素\n设置图像的宽度\n\n\nheight\n像素\n设置图像的高度\n\n\nBorder\n数字\n设置图像边框的宽度（css文件改动属性，默认为黑色）\n\n\n\n\n\n\n\n路径在实际工作中，我们的文件不会随便乱放，否则在使用的时候很难找到他们，因此我们需要一个文件夹来管理他们。目录文件夹： 就是普通文件夹，只不过里面存放了我们做页面所需要的相关素材，比如html文件，图片 等等。路径分为：相对路径和绝对路径。\n相对路径当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。属性：\n\n\n\n路径分类\n符号\n说明\n\n\n\n同一级路径\n无\n直接输入图像文件的名称，如&lt;img src=&quot;baidu.gif&quot; /&gt;\n\n\n下一级路径\n“&#x2F;“\n图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images）如&lt;img src=&quot;..baidu.gif&quot; /&gt;\n\n\n上一级路径\n“..&#x2F;“\n在文件名之前加入”..&#x2F;“，如果是上两级，则需要使用”.. ..&#x2F;“，一次类推，如&lt;img src=&quot;../baidi.gif&quot; /&gt;\n\n\n注意事项： 相对路径，是从代码所在的这个文件触发，去寻找我们的目标文件的，而我们所说的 上一级 下一级 同一级\n\n\n\n\n简单说，就是图片对于 HTML 页面的位置。\n\n\n\n\n绝对路径绝对路径以web站点根目录为参考基础的目录路径。之所以称为绝对，指当所有网页引用同一个文件时，所使用的路径都是一样的。例子：D\\web\\img\\logo.gif，或完整的网络地址，例如：&quot;https://blog.yunyuwu.cn/images/logo.png&quot;注意： 绝对路径用的较少，符号是\\不是/\n音频标签audio为音频标签，属于双标签。作用：在网页中插入一段音频属性：\n\n\n\n属性名\n功能\n\n\n\nsrc\n音频的路径\n\n\ncontrols\n显示播放的控件\n\n\nautoplay\n自动播放\n\n\nloop\n循环播放\n\n\n示例：\n\n\n\n\n\n\n\n视频标签video标签为属性：\n\n\n\n属性名\n功能\n\n\n\nsrc\n视频的路径\n\n\ncontrols\n显示播放的控件\n\n\nautoplay\n自动播放（谷歌浏览器中需要配合muted实现静音播放）\n\n\nloop\n循环播放\n\n\n示例：\n\n\n\n\n\n\n\n链接标签HTML使用标签&lt;a&gt;来设置超文本链接。超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，可以点击这些内容来跳转到新的页面或者当前网页中的某个部分。\n\n\n\n属性名\n功能\n\n\n\nhref\n用于指定链接目标的url地址，（必须属性）当问标签应用href属性时，它就具有了超链接的功能\n\n\ntarget\n用于指定链接页面的打开方式，其取值有self和blank两种，其中self为默认值，blank为在新窗口中打开方式\n\n\n注意：\n\n\n\n\n外部链接 需要添加https://blog.yunyuwu.cn/\n内部链接 直接链接内部页面名称即可 比如首页\n如果当时没有确定目标链接时，通常将链接博鳌前的href属性值定义为”#”（即href&#x3D;”#”），表示该链接暂时为一个空链接。\n不仅可以创建文本链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加到超链接。\n空链接&lt;a href=&quot;#&quot;&gt;空链接&lt;/a&gt;\n\n\n总结直接放一个思维导图，累了\n","slug":"html学习笔记第一弹","date":"2023-04-26T06:21:18.000Z","categories_index":"Note,HTML","tags_index":"Note,HTML","author_index":"小北"},{"id":"9b3ec53cd22e82ffe45fcbbbf5c3deca","title":"C语言笔记（6）流程控制篇","content":"在C语言中，完整的程序包含三种顺序控制流程 1.顺序流程， 2.分支流程 3.循环流程\n一、分支流程1、if语句if语句的三种形式：第一种：\nif(测试条件)\n  条件为真的流程\n\n第二种：\nif(测试条件)\n  条件为真的流程\nelse\n  条件为假所执行的流程\n\n第三种：\nif(条件表达式1)\n  语句1\n  else if(条件表达式2)\n    语句2\n  else if(条件表达式3)\n    语句3\n.....\nelse\n  语句n\nif嵌套语句if()\n  if()\n    语句1\n  else\n    语句2\nelse \n    if\n      语句3\n    else\n      语句4\n\n2、条件运算符他是C语言中唯一一个三元运算符\n\n\n\n\n\n\n\n\n\n意味着它有三个运算对象伪代码如下：\nc&#x3D;x &gt;&#x3D;10 ? &#39;Y&#39; : &#39;n&#39;;\n&#x2F;&#x2F;测试条件 ? 表达式1 : 表达式2;\n","slug":"C语言笔记（6）流程控制篇","date":"2023-04-26T02:19:25.000Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"},{"id":"9d1cbcb9ab38a6720c0a25e1f37ef388","title":"C语言笔记（5）数据类型篇","content":"基本数据类型C 语言的每一种数据，都是有类型（type）的，编译器必须知道数据的类型，才能操作数据。所谓“类型”，就是相似的数据所拥有的共同特征，那么一旦知道某个值的数据类型，就能知道该值的特征和操作方式。\n基本数据类型有三种：字符（char）、整数（int）和浮点数（float）。复杂的类型都是基于它们构建的。\n数据类型的转换高级别类型数据范围大雨或等于低级别类型\n比int级别类型低的类型，会转换成int，比int级别高的类型，保持不变。\n","slug":"C语言笔记（5）数据类型篇","date":"2023-04-26T02:05:57.000Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"},{"id":"20593d7604e98581ff324049fd7dd8b3","title":"C语言笔记（4）运算符及表达式篇","content":"一、表达式1.表达式是什么一个或多个运算对象与零个或多个运算符组成的式子叫做表达式。\n\n\n\n\n\n\n\n\n\n每个表达式都有一个结果\nprintf(&quot;%d\\n&quot; 5+10);\t&#x2F;&#x2F;表达式结果为：15\n\n\n\n2.表达式语句在表达式后边加上;就构成了表达式语句，C语言中表达式不能单独存在，必须以表达式语句的方式存在。\n100;\n5+10;\na&#x2F;b;\na*10&#x2F;b+c;\n\n\n\nprintf(&quot;%d\\n&quot; 5+10);\t&#x2F;&#x2F;5+10表达式为什么后边没有;号，是因为5+10在这个语句中是函数调用表达式的子表达式。\n\n\n\n\n\n\n\n\n\n\n函数名加括号运算符构成了一个函数表达式。\n二、运算符在C语言中，运算符有非常的多。它内置的运算符丰富到令人头皮发麻，但同时给了我们对代码的更多操作性。\n\n算术运算符\n关系运算符\n逻辑运算符\n位运算符\n赋值运算符\n杂项运算符\n\n1.算术运算符算术运算符专门用于算术运算，主要有下面几种。\n\n\n\n\n\n\n\n\n\n一元运算符指的是只有一个运算对象，反之，二元运算符是指有两个运算对象。\n\n+：正值运算符（一元运算符）\n-：负值运算符（一元运算符）\n+：加法运算符（二元运算符）\n-：减法运算符（二元运算符）\n*：乘法运算符\n/：除法运算符\n%：余值运算符\n\n\n\n\n名称\n运算符号\n描述\n举例\n\n\n\n正值运算符\n+\n表示这个操作数为正数\n+12（它是+12）\n\n\n负值运算符\n-\n表示这个操作数为负数\n-12（它是-12）\n\n\n加法运算符\n+\n添加两个操作数\n2+10&#x3D;12\n\n\n减法运算符\n-\n从第一个减去第二个操作数\n12-2&#x3D;10\n\n\n自增运算符\n++\n自增运算符将整数值增加1\nint a &#x3D; 1; a++\n\n\n自减运算符\n–\n自减运算符将整数值减小1\nint a &#x3D; 1; a–\n\n\n乘法运算符\n*\n将两个操作数相乘\n2*6&#x3D;12\n\n\n除法运算符\n&#x2F;\n将两个操作数相除\n12&#x2F;2&#x3D;6\n\n\n余值运算符（求余运算符）\n%\n将操作数相除后取余\n12%5&#x3D;2\n\n\n\n（1）+ -这两个运算符既可以当做一元运算符，也可以当做二元运算符所谓一元运算符，指的是只需要一个运算数就可以执行。一元运算符-用来改变一个值的正负号。\nint num &#x3D; -1;\nint num2 &#x3D; +num;\n\n\n\n\n\n\n\n\n\n\n这段代码中的-将1变为了-1。正号+对正负值没有什么影响，**+不会改变正负值，**可加可不加。\n二元运算符+ -也就是用他们来完成加减法。\nint x &#x3D; 6 + 6;\nint y &#x3D; 13 - 1;\n\n（2）*乘法运算符运算符*用来完成乘法。\nint num &#x3D; 2 * 6;\nprintf(&quot;%i&quot;, num); &#x2F;&#x2F; 输出12\n&#x2F;&#x2F; 或者\nint num &#x3D; 6;\nprintf(&quot;%i\\n&quot;, num * num);&#x2F;&#x2F;输出 36\n\n（3）/除法运算符运算符/用来完成除法。注意，两个整数相除，得到还是一个整数。\nfloat x &#x3D; 6 &#x2F; 4;\nprintf(&quot;%f\\n&quot;, x); &#x2F;&#x2F; 输出 1.000000\n\n上面示例中，尽管变量x的类型是float（浮点数），但是6 / 4得到的结果是1.0，而不是1.5。原因就在于 C语言里面的整数除法是整除，只会返回整数部分，丢弃小数部分。\n如果希望得到浮点数的结果，两个运算数必须至少有一个浮点数，这时 C 语言就会进行浮点数除法。\nfloat x &#x3D; 6.0 &#x2F; 4; &#x2F;&#x2F; 或者写成 6 &#x2F; 4.0\nprintf(&quot;%f\\n&quot;, x); &#x2F;&#x2F; 输出 1.500000\n\n上面示例中，6.0 / 4表示进行浮点数除法，得到的结果就是1.5。\n小测试：\nint score &#x3D; 5;\nscore &#x3D; (score &#x2F; 20) * 100;\nprintf(&quot;%i&quot;, score);\n\n这段代码的运行结果是什么？如果你的运算结果为25，那么恭喜你，错了。回去好好再看一次笔记如果你的运算结果为0，那么恭喜你，对了。继续看笔记吧。\n为了得到预想的结果（运算结果为25），可以将除数20改成20.0，让整除变成浮点数除法。\nscore &#x3D; (score &#x2F; 20.0) * 100;\n\n（4）%求余运算符（取模运算符）运算符%表示求模（取余）运算，即返回两个整数相除的余值。这个运算符只能用于整数，不能用于浮点数。\nint x &#x3D; 12 % 5;\nprintf(&quot;%i&quot;, x); &#x2F;&#x2F; 2\n\n负数求模的规则是，结果的正负号由第一个运算数的正负号决定。\n11 % -5 &#x2F;&#x2F; 1\n-11 % -5 &#x2F;&#x2F; -1\n-11 % 5 &#x2F;&#x2F; -1\n\n上面示例中，第一个运算数的正负号（11或-11）决定了结果的正负号。\n（5）赋值运算的简写形式如果变量对自身的值进行算术运算，C 语言提供了简写形式，允许将赋值运算符和算术运算符结合成一个运算符。\n\n+&#x3D;\n-&#x3D;\n*&#x3D;\n&#x2F;&#x3D;\n%&#x3D;\n\n下面是一些例子。\ni +&#x3D; 3;  &#x2F;&#x2F; 等同于 i &#x3D; i + 3\ni -&#x3D; 8;  &#x2F;&#x2F; 等同于 i &#x3D; i - 8\ni *&#x3D; 9;  &#x2F;&#x2F; 等同于 i &#x3D; i * 9\ni &#x2F;&#x3D; 2;  &#x2F;&#x2F; 等同于 i &#x3D; i &#x2F; 2\ni %&#x3D; 5;  &#x2F;&#x2F; 等同于 i &#x3D; i % 5\n\n\n2.自增、自减运算符C 语言提供两个运算符，对变量自身进行+ 1和- 1的操作\n\n++：自增运算符\n–：自减运算符\n\ni++; &#x2F;&#x2F; 等同于 i &#x3D; i + 1\ni--; &#x2F;&#x2F; 等同于 i &#x3D; i - 1\n\n\n\n1.前置自增（减）运算符前置运算——运算符都放在变量之前：++变量名、--变量名，如++i --i。它先使变量的值增或减1，再以变化后的值参与其他运算，即先自增（或先自减）后运算。\n2.后置自增（减）运算符后置运算——运算符放在变量之后：变量名--， 变量名++如：i++ i--。它使变量先参与其他运算，再使变量的值增或减1，即先运算后自增（或后自增）。\n3.常用运算符优先级\n\n\n标记\n操作符\n类型\n优先级\n\n\n\n++–\n自增、自减\n后缀\n16\n\n\n++–\n自增、自减\n前缀\n15\n\n\n+-\n正号，负号\n单目\n15\n\n\n*&#x2F;%\n乘、除、取余\n双目\n13\n\n\n+-\n加、减\n双目\n12\n\n\n&#x3D;\n赋值\n双目\n2\n\n\n3.关系运算符\n&lt; 小于\n&lt;= 小于或等于\n&gt; 大于运算符\n&gt;= 大于或等于\n== 等于\n!=不等于\n\n\n4.逻辑表达式（1）逻辑运算符\n\n\n运算符\n含义\n含义\n\n\n\n&amp;&amp;\n与\n逻辑与\n\n\n&#96;\n\n&#96;\n\n\n!\n非\n逻辑非\n\n\n\n（2）逻辑表达式\n\n\nC语言\n计算机逻辑表达式的值\n判断量的真假\n\n\n\n真\n1\n非0\n\n\n假\n0\n0\n\n\n总结\n\n\n标记\n操作符\n类型\n优先级\n\n\n\n++ --\n自增、自减\n后缀\n16\n\n\n++ --\n自增、自减\n前缀\n15\n\n\n!\n逻辑非\n单目\n15\n\n\n+ -\n正号、负号\n单目\n15\n\n\n* / %\n乘、除、取余\n双目\n13\n\n\n+ -\n加、减\n双目\n12\n\n\n&lt; &gt; &lt;= &gt;=\n关系\n双目\n10\n\n\n== !=\n逻辑与\n双目\n9\n\n\n&#96;\n\n&#96;\n逻辑或\n\n\n?:\n条件\n三目\n3\n\n\n=\n赋值\n双目\n2\n\n\n","slug":"C语言笔记（4）运算符及表达式篇","date":"2023-04-26T02:02:26.000Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"},{"id":"73b463ad631cb31a8944de1994830c80","title":"C语言笔记（3）变量及常量篇","content":"一、变量1. 变量的概念变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分变量名和变量值是两个不同的概念。\n\n\n\n\n\n\n\n\n\n现实生活中我们会找一个小箱子来存放物品，一来显得不那么凌乱，二来方便以后找到。计算机也是这个道理，我们需要先在内存中找一块区域，规定用它来存放整数，并起一个好记的名字，方便以后查找。这块区域就是“小箱子”，我们可以把整数放进去了。\n2. 变量名（标识符）命名规范变量名：变量名在 C 语言里面属于标识符（identifier），命名有严格的规范。\n\n只能由字母（包括大写和小写）、数字和下划线（_）组成。\n不能以数字开头。\n变量名不能包含除 _ 以外的任何特殊字符，如：%、# 、逗号、空格等\n长度不能超过63个字符。\n不可以使用32个保留关键字\n\n&#x2F;&#x2F; 无效变量名\n$zj j**p 2cat Hot-tab tax rate don&#39;t\n&#x2F;&#x2F; 有效变量名\nRadiu salary AotuGun Knotted_Wool H301\n\n变量名严格区分大小写，start、Start、START是不同的变量名。\n\n3. 声明变量C语言的变量，必须先声明后使用。如果一个变量没有声明，就直接使用，会报错。每个变量都有自己的类型（type）。声明变量时，必须把变量的类型告诉编译器。\nint one;\n\n此处声明了变量one，并且指定了他的类型为int（整数）如果在有多个同类型变量时，我们可以同时声明\nint one, two;\n&#x2F;&#x2F; 等于\nint one;\nint two;\n\n注意:\n\n声明变量的语句必须以分号结尾。\n一旦声明，变量的类型就不能在运行时修改。\n\n4. 变量赋值C语言会在变量声明时，就为它分配内存空间，但是不会清除内存里面原来的值。这导致声明变量以后，变量会是一个随机的值。所以，变量一定要赋值以后才能使用。\n赋值操作通过赋值运算符=完成。\n&#x2F;&#x2F; 声明了变量num\nint num;\n&#x2F;&#x2F; 给变量num赋值888\nnum &#x3D; 888;\n\n\n\n\n\n\n\n\n\n\n变量的值应该与类型一致，不应该赋予不是同一个类型的值，比如num的类型是整数，就不应该赋值为小数。虽然 C语言会自动转换类型，但是应该避免赋值运算符两侧的类型不一致。\n&#x2F;&#x2F; 在声明变量的同时赋值给num\nint num &#x3D;888;\n\n当拥有多个同类型变量时，可以在一行写多个\nint x &#x3D; 1, y &#x3D; 2;\n\n赋值表达式有返回值，等于=右边的值。\nint x, y;\n\nx &#x3D; 1;\ny &#x3D; (x &#x3D; 2 * x);\n\n上面代码中，变量y的值就是赋值表达式（x = 2 * x）的返回值2由于赋值表达式有返回值，所以 C 语言可以写出多重赋值表达式。\nint x, y, z, m, n;\n\nx &#x3D; y &#x3D; z &#x3D; m &#x3D; n &#x3D; 3;\n\n上面的代码，一次为多个变量赋值。赋值运算符是从右到左执行，所以先为n赋值，然后依次为m、z、y和x赋值。\nC 语言有左值（left value）和右值（right value）的概念。左值是可以放在赋值运算符左边的值，一般是变量；右值是可以放在赋值运算符右边的值，一般是一个具体的值。这是为了强调有些值不能放在赋值运算符的左边，比如x &#x3D; 1是合法的表达式，但是1 &#x3D; x就会报错。\n\n5. 变量的作用域作用域（scope）指的是变量生效的范围。C语言的变量作用域主要有两种：文件作用域（file scope）和块作用域（block scope）。文件作用域（file scope）指的是，在源码文件顶层声明的变量，从声明的位置到文件结束都有效。\nint a &#x3D; 1;\n\nint main(void) &#123;\nprintf(&quot;%i\\n&quot;, a);\n&#125;\n\n上面示例中，变量a是在文件的顶层声明的，从声明位置开始的整个当前文件都是它的作用域，可以在这个范围的任何地方读取这个变量，比如函数main()内部就可以读取这个变量。\n块作用域（block scope）指的是由大括号&#123;&#125;组成的代码块，它形成一个单独的作用域。凡是在块作用域里面声明的变量，只在当前代码块有效，代码块外部不可见。\nint a &#x3D; 12;\n\nif (a &#x3D;&#x3D; 12) &#123;\n  int b &#x3D; 99;\n  printf(&quot;%d %d\\n&quot;, a, b);  &#x2F;&#x2F; 12 99\n&#125;\n\nprintf(&quot;%d\\n&quot;, a);  &#x2F;&#x2F; 12\nprintf(&quot;%d\\n&quot;, b);  &#x2F;&#x2F; 运行报错\n\n上面例子中，变量b是在if代码块里面声明的，所以对于大括号外面的代码，这个变量是不存在的，所以运行会报错。\n代码块可以嵌套，即代码块内部还有代码块，这时就形成了多层的块作用域。它的规则是：内层代码块可以使用外层声明的变量，但外层不可以使用内层声明的变量。如果内层的变量与外层同名，那么会在当前作用域覆盖外层变量。\n&#123;\n  int i &#x3D; 10;\n\n  &#123;\n    int i &#x3D; 20;\n    printf(&quot;%d\\n&quot;, i);  &#x2F;&#x2F; 20\n  &#125;\n\n  printf(&quot;%d\\n&quot;, i);  &#x2F;&#x2F; 10\n&#125;\n\n上面示例中，内层和外层都有一个变量i，每个作用域都会优先使用当前作用域声明的i。\n最常见的块作用域就是函数，函数内部声明的变量，对于函数外部是不可见的。for循环也是一个块作用域，循环变量只对循环体内部可见，外部是不可见的。\nfor (int i &#x3D; 0; i &lt; 10; i++)\n  printf(&quot;%d\\n&quot;, i);\n\nprintf(&quot;%d\\n&quot;, i); &#x2F;&#x2F; 报错\n\n上面示例中，for循环省略了大括号，但依然是一个块作用域，在外部读取循环变量i，编译器就会报错。\n\n二、常量1. 常量的概念常量又称字面量，是固定值，在程序运行过程中，其值不能被改变称为：常量。如：6、3.14、‘a’、“abc123”等。\n\n\n\n\n\n\n\n\n\n常量 就像是常规的变量，只不过常量的值在定义后不能进行修改。\n2. 常量的分类根据常量的取值对象，C语言将常量分为一下五种类型。\n\n整型常量，例：16、0、-3等\n\n实型常量，例：3.14159、-3.6等\n\n字符常量，例：A，5，#等\n\n符号常量，例：#define PI 3.14159中的PI等\n\n字符串常量，例：ABC、6estghj，45+53等\n\n\n\n\n\n\n\n\n\n常量的类型可以通过书写形式来辨别\n\n\n3.转义字符转义字符以\\或者\\x开头，以\\开头表示后跟八进制形式的编码值，以\\x开头表示后跟十六进制形式的编码值。对于转义字符来说，只能使用八进制或者十六进制。\n| :–: | :–: | :–: ||转义字符|意义|ASCII码值（十进制）||\\a\t|响铃(BEL)当前位置移到前一列|008||\\f\t|换页(FF)将当前位置移到下页开头|012||\\n\t|换行(LF)将当前位置移到下一行开头|\t010||\\r\t|回车(CR)将当前位置移到本行开头|\t013||\\t\t|水平制表(HT) \t|009||\\v\t|垂直制表(VT)\t|011||&#39;\t|单引号\t|039||&quot;\t|双引号\t|034||\\\t|反斜杠\t|092|\n","slug":"C语言笔记（3）变量及常量篇","date":"2023-04-26T01:54:18.000Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"},{"id":"6adf066132135f079fa836f0cde19524","title":"vscode配置c语言环境","content":"开篇昨晚上一不小心给电脑整坏了，无奈之下就重装了系统。装完系统之后最麻烦的当然就是所有学习资料的安装恢复了。这样的工作对我这种记忆力不大好的“老年人”极度不友好！可是这又有什么办法呢，找到了我在云盘的学习资料后，当然是安装对应的工具了。我首先选择恢复的是vscode这款神器，我感觉这款轻量编辑器还是对我挺友好的，各个系统平台都可以使用，支持多种语言不说，还有丰富多样的各类插件免费使用。\n配置过程要拥有vscode这就不用说了吧，没有的话可以去官网下载地址下载，或者使用我提供的蓝奏云链接，密码：5mp1（64位与32位）\nhttps://code.visualstudio.com/#home-termshttps://yunyuwu.lanzouv.com/b00p6w4pi\n第一步：汉化vscode并安装c插件同时摁住（ctrl+shift+x）在搜索框中输入chinese，然后我们点击第一个简体中文下的install，等待下载完成后重启vscode就可以看到汉化后的页面了。然后我们继续安装以下两款插件C/C++以及Code Runner\n第二步：安装编译器（MinGW-W64 GCC）由于官网下载地址需要科学上网，为了方便我也上传了蓝奏云一份。\n\n\n\n\n\n\n\n\n\n官网下载的时候，要下载x86_64-posix-seh这个版本的o！\n\nhttps://sourceforge.net/projects/mingw-w64/files/https://yunyuwu.lanzouv.com/i8aD8xq4muf\n第三步：配置环境变量下载完成后解压到自己想要的目录（路径中不能有中文），然后我们点击到bin文件夹中，复制bin的路径然后我们点击：此电脑——属性——高级系统设置——环境变量，点击系统环境变量中的Path。接着按下方图片操作后，摁住win+R键输入cmd，在cmd控制台输入下方代码并回车，当输出结果如图所示就是成功了\ngcc -v -E -x c++ -\n\n第四步：配置vscode最后我们配置vscode的相关配置：\n\n先新建一个文件夹作为C语言项目文件夹，然后点击菜单中的：文件——打开文件夹——选择我们刚创建的文件夹然后在其中创建一个c语言文件，名字可以随意，结尾必须是.c\n然后创建一个.vscode文件夹（前面有个.）在里面创建三个json文件，分别是：c_cpp_propertise.json与launch.json和tasks.json\n分别编辑这三个文件c_cpp_propertise.json：然后我们需要将图片中红色方框内的路径修改为自己刚安装的编译器的地址，将你刚刚安装的路径复制一下，然后修改此代码中的D:/Programs/mingw64部分&#123;\n    &quot;configurations&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;Win32&quot;,\n            &quot;includePath&quot;: [\n                &quot;$&#123;workspaceRoot&#125;&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;include&#x2F;**&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;x86_64-w64-mingw32&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;backward&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include-fixed&quot;,\n                &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;x86_64-w64-mingw32&#x2F;include&quot;\n            ],\n            &quot;defines&quot;: [\n                &quot;_DEBUG&quot;,\n                &quot;UNICODE&quot;,\n                &quot;__GNUC__&#x3D;6&quot;,\n                &quot;__cdecl&#x3D;__attribute__((__cdecl__))&quot;\n            ],\n            &quot;intelliSenseMode&quot;: &quot;msvc-x64&quot;,\n            &quot;browse&quot;: &#123;\n                &quot;limitSymbolsToIncludedHeaders&quot;: true,\n                &quot;databaseFilename&quot;: &quot;&quot;,\n                &quot;path&quot;: [\n                    &quot;$&#123;workspaceRoot&#125;&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;include&#x2F;**&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;x86_64-w64-mingw32&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&#x2F;c++&#x2F;backward&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;include-fixed&quot;,\n                    &quot;D:&#x2F;Programs&#x2F;mingw64&#x2F;bin&#x2F;..&#x2F;lib&#x2F;gcc&#x2F;x86_64-w64-mingw32&#x2F;8.1.0&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;x86_64-w64-mingw32&#x2F;include&quot;\n                ]\n            &#125;\n        &#125;\n    ],\n    &quot;version&quot;: 4\n&#125;\n\n\n\nlaunch.json：将miDebuggerPath属性里的内容一样改为自己的路径\n&#123;\n    &quot;version&quot;: &quot;0.2.0&quot;,\n    &quot;configurations&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;(Windows) Launch&quot;,\n            &quot;type&quot;: &quot;cppvsdbg&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;program&quot;: &quot;cmd&quot;,\n            &quot;preLaunchTask&quot;: &quot;echo&quot;,\n            &quot;args&quot;: [\n                &quot;&#x2F;C&quot;,\n                &quot;$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,\n                &quot;&amp;&quot;,\n                &quot;echo.&quot;,\n                &quot;&amp;&quot;,\n                &quot;pause&quot;\n            ],\n            &quot;stopAtEntry&quot;: false,\n            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,\n            &quot;environment&quot;: [],\n            &quot;console&quot;:&quot;externalTerminal&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;(gdb) Launch&quot;,\n            &quot;type&quot;: &quot;cppdbg&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;&#x2F;$&#123;fileBasenameNoExtension&#125;.exe&quot;,\n            &quot;args&quot;: [],\n            &quot;stopAtEntry&quot;: false,\n            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,\n            &quot;environment&quot;: [],\n            &quot;externalConsole&quot;: true,\n            &quot;MIMode&quot;: &quot;gdb&quot;,\n            &quot;miDebuggerPath&quot;: &quot;D:\\\\Programs\\\\mingw64\\\\bin\\\\gdb.exe&quot;,&#x2F;&#x2F;自己电脑的gdb路径\n            &quot;preLaunchTask&quot;: &quot;echo&quot;,\n            &quot;setupCommands&quot;: [\n                &#123;\n                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,\n                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,\n                    &quot;ignoreFailures&quot;: true\n                &#125;\n            ]\n \n        &#125;\n    ]\n&#125;\n\ntasks.json：直接复制粘贴进去保存即可\n&#123;\n    &#x2F;&#x2F; See https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?LinkId&#x3D;733558\n    &#x2F;&#x2F; for the documentation about the tasks.json format\n    &quot;version&quot;: &quot;2.0.0&quot;,\n    &quot;tasks&quot;: [\n        &#123;\n            &quot;label&quot;: &quot;echo&quot;,\n            &quot;type&quot;: &quot;shell&quot;,\n            &quot;command&quot;: &quot;gcc&quot;,\n            &quot;args&quot;: [\n                &quot;-g&quot;, \n                &quot;$&#123;file&#125;&quot;, \n                &quot;-o&quot;, \n                &quot;$&#123;fileBasenameNoExtension&#125;.exe&quot;,\n                &quot;-fexec-charset&#x3D;GBK&quot;&#x2F;&#x2F;解决中文乱码\n            ]\n        &#125;\n    ],\n    &quot;presentation&quot;: &#123;\n        &quot;echo&quot;: true,\n        &quot;reveal&quot;: &quot;always&quot;,\n        &quot;focus&quot;: false,\n        &quot;panel&quot;: &quot;shared&quot;, \n        &quot;showReuseMessage&quot;: true,\n        &quot;clear&quot;: false\n    &#125;\n&#125;\n第五步：调试我们输入熟悉的代码然后摁下F5进行调试，就会发现我们可以放飞自我了\n#include &lt;stdio.h&gt;\n\nint main()\n&#123;\n    printf(&quot;hello world&quot;);\n    return 0;\n&#125;\n\n总结总结一下：1.注意替换路径中的\\与/改错会闪退的2.如果要运行c++的话，把launch.json文件第16行和tasks.json文件3行的gcc改成g++\n","slug":"vscode配置c语言环境","date":"2023-04-25T14:41:49.840Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"},{"id":"9fe0d1f058dbe1b450961fecd0540c53","title":"C语言笔记（2）基本语法","content":"C语言的结构一个C语言程序由若干个头文件与多个函数构成,每个函数有自己的功能,例如\n#include &lt;stdio.h&gt; &#x2F;&#x2F;stdio.h就是头文件\n\nint main(void) &#123;    &#x2F;&#x2F;从int到结尾这是主函数\n  printf(&quot;Hello World\\n&quot;);\n  return 0;\n&#125;\n\n\n\n#include &lt;stdio.h&gt;是一条预处理命令, 预处理(或称预编译)是指在进行编译的第一遍扫描(词法扫描和语法分析)之前所作的工作。\n函数我个人理解为就是一小块写好的代码，是实现代码逻辑的一个小的单元。\n\n主函数这里有一个主函数，主函数他是必不可少的,一个C程序有且只有一个主函数，即main函数。在最新的C标准中，main函数前的类型为int而不是void。\n\nC程序就是执行主函数里的代码，也可以说这个主函数就是C语言中的唯一入口。\nmain前面的int就是主函数的类型。\nprintf()是格式输出函数，它的作用就是在屏幕上输出指定的消息。\nreturn是函数的返回值，不同的函数会返回不同的值。\n\n\n关键字什么是关键字?关键字,也叫作保留字。是指一些被C语言赋予了特殊含义的单词关键字有什么特征？\n\n全部都是小写\n在开发工具中会显示特殊颜色关键字需要注意什么？关键字注意点:因为关键字在C语言中有特殊的含义, 所以不能用作常量名、变量名、函数名以及其他标识符名称。\n\n\n\n\n\n关键字\n作用\n\n\n\nauto\n声明自动变量\n\n\nbreak\n跳出当前循环\n\n\ncase\n开关语句分支\n\n\nchar\n声明字符型变量或函数返回值类型\n\n\nconst\n定义变量，如果一个变量被const修饰，那么它的值就不能再被改变，叫做常量\n\n\ncontinue\n结束当前循环，开始下一轮循环\n\n\ndefault\n开关语句中的“其他分支”\n\n\ndo\n循环语句的循环体\n\n\ndouble\n声明双精度浮点型变量或函数返回值类型\n\n\nelse\n条件语句否定分支（与if连用）\n\n\nenum\n声明枚举类型\n\n\nexterm\n声明变量或函数是在其他文件或本文件的其他位置定义\n\n\nfloat\n声明浮点型变量或函数返回值类型\n\n\nfor\n一种循环语句\n\n\ngoto\n无条件跳转语句\n\n\nif\n条件语句\n\n\nint\n声明整型变量或函数\n\n\nlong\n声明长整型变量或函数返回值类型\n\n\nregister\n声明寄存器变量\n\n\nreturn\n子程序返回语句（可以带参数，也可不带参数）\n\n\nshort\n声明短整形变量或函数\n\n\nsigned\n声明又符号类型变量或函数\n\n\nsizeof\n计算数据类型或变量长度（即所占字节数）\n\n\nstatic\n声明静态变量\n\n\nstruct\n声明结构体类型\n\n\nswitch\n用于开关语句\n\n\ntypedef\n用以给数据类型取别名\n\n\nunsigned\n声明无符号类型变量或函数\n\n\nunion\n声明共用体类型\n\n\nvoid\n声明函数无返回值或无参数，声明无类型指针\n\n\nvolatile\n说明变量在程序执行中可被隐含地改变\n\n\nwhile\n循环语句的循环条件\n\n\n\n\n标识符什么是标识符？\n\nC语言由函数构成，一个C程序中会有很多个函数，为了更好的区分这些函数，所以给每一个函数起一个名字，这个名字就是标识符。\n\n标识符的命名规则\n\n只能由字母、数字、下划线组成\n第一个字符必须是字母或下划线，不能以数字开头\n不能是C语言中的关键字\n严格区分大小写字母\n标识符最好选择有意义的英文单词组成，不要使用拼音。\n标识符的长度最好不要超过8位，在某些版本中规定标识符前8位有效，如果你的两个标识符前8位相同时，就会被认为时同一个标识符。\n\n\n变量变量是计算机中一块特定的内存空间由一个或多个连续的字节组成。C语言的代码由一行行语句组成。语句就是程序执行的一个操作命令。C语言规定，语句必须使用分号结尾，除非有明确规定可以不写分号。\nint Number &#x3D; 1;\n\n\n语句C语言的代码由一行行语句组成。语句是程序执行的一个操作命令。每个语句必须使用分号结尾，除非由明确规定可以不写分号。\nint Number &#x3D; 1;\n\n这就是一个变量声明语句，声明整形变量Number，并给他赋值为1。同一行可以写多个语句，换行只是方便阅读，并不是必须的。\nint Number;Number &#x3D; 1;\n\n一个语句也可以写在很多行，这个时候就需要依靠分号来判断语句是在哪一行结束的。\nint Number;\nNumber\n&#x3D;\n1\n;\n\n在这里编译器在编译时会自动忽略代码中的换行。单个分号也是一个有效语句，被称为“空语句”，但是他毫无作用。\n\n表达式C语言的计算是通过表达式完成的。表达式是一个计算式，用来获取值。\n1+2\n\n在这个地方的1+2就是一个表达式，用来获取1+2这个算术的计算结果。在表达式后加上分号，也是语句，但是没有作用。表达式与语句的主要区别：\n\n语句包含表达式，但是表达式本身不构成语句\n表达式都是又返回值的，语句不一定有。语句是用来执行命令的，一般不需要返回值。##语句块（函数体）C语言允许多个语句使用一对大括号{}，组成一个块，也称为复合语句。在语法上，语句块可以视为多个语句组成的一个复合语句。它使用大括号把许多语句和声明组合到一起，形成单条语句。\n\n&#123;\n    int Number;\n    Number &#x3D; 1;\n&#125;\n\n上面中一个大括号（花括号）形成了一个语句块，大括号的结尾不需要添加分号。\n空格C语言中的空格主要是用来帮助编译器区分语法单位的。如果语法单位不需要空格就可以被区分，那么就不需要空格，只是为了让程序员更容易观看，增加可读性。\nint Number &#x3D; 1;\n&#x2F;&#x2F; 等于\nint Number&#x3D;1;\n\n在代码中，语法单位之间的多个空格等于一个空格。\nint Number    &#x3D;       1;\n\n空格还可以用来表示缩进，一般情况下一级代码比上一级代码缩进四个空格。只有空格的一行代码被称为空白行，编译器会直接忽略掉这行代码。\n\n注释注释是对代码进行解释说明，编译器不会读取，只是给程序员看的。C语言有两种注释方法，第一种：\n&#x2F;*这是一段注释*&#x2F;\n&#x2F;*\n    被他包含起来就可以\n*&#x2F;\n\n这是第一种注释，他可以穿插在代码行中\nint Number&#x2F;*这是注释*&#x2F; &#x3D; 1；\n\n第二种：\n&#x2F;&#x2F; 这是第二种注释\nint Number &#x3D; 1;\n\n第二种注释是将注释内容放到//的后面，从双斜杠后面一直到这一行结束都属于注释。可以将他放到第一行或者某一行的行尾。不管是哪种注释都不能放到双引号&quot;&quot;里编译器在编译时，会将双引号里的注释字符视为普通字符，不存在注释的作用。\n#include&lt;stdio.h&gt;\nint main()\n&#123;\n\tprintf(&quot;&#x2F;*我是注释*&#x2F;Hello,world&quot;);\n\treturn 0;\n&#125;\n\n这段代码编译后运行，会输出:\n&#x2F;*我是注释*&#x2F;Hello,world\n\n\nprintf()基本用法printf()的作用是将指定的参数文本输出到屏幕上。printf()是在标准库的头文件stdio.h定义的。使用这个函数之前，必须在源码文件头部引入这个头文件。只有在源码头部加上#include &lt;stdio.h&gt;，才能使用printf()这个函数。\n#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n  printf(&quot;Hello World\\n&quot;);\n&#125;\n\n上面的命令会在屏幕上输出一行文字：Hello World\n\n占位符printf()可以在输出的文本中指定占位符。占位符就是先占住一个固定的位置，等着你再往里面添加内容的符号。\n&#x2F;&#x2F;输出Are these 2 paragraphs?\nprintf(&quot;Are these %i paragraphs?&quot;, 2);\n\n从这个示例看，Are these %i paragraphs?是输出文本，其中的%i就是占位符，它占住了这个位置。可以用别的值来替换，在双引号后的2就是要替换的值。占位符的第一个字符都是%，第二个字符是表示占位符的类型，这里是ii代表整数，是int的首字母。编译后输出的结果为：Are these 2 paragraphs?一段输出文本中可以使用很多个占位符。\nprintf(&quot;My name is %s. I&#39;m %i years old&quot;, &quot;Joe&quot;, 18)\n\n下面是常用占位符• %a：浮点数。• %A：浮点数。• %c：字符。• %d：十进制整数。• %e：使用科学计数法的浮点数，指数部分的e为小写。• %E：使用科学计数法的浮点数，指数部分的E为大写。• %i：整数，基本等同于%d。• %f：小数（包含float类型和double类型）。• %g：6个有效数字的浮点数。整数部分一旦超过6位，就会自动转为科学计数法，指数部分的e为小写。• %G：等同于%g，唯一的区别是指数部分的E为大写。• %hd：十进制 short int 类型。• %ho：八进制 short int 类型。• %hx：十六进制 short int 类型。• %hu：unsigned short int 类型。• %ld：十进制 long int 类型。• %lo：八进制 long int 类型。• %lx：十六进制 long int 类型。• %lu：unsigned long int 类型。• %lld：十进制 long long int 类型。• %llo：八进制 long long int 类型。• %llx：十六进制 long long int 类型。• %llu：unsigned long long int 类型。• %Le：科学计数法表示的 long double 类型浮点数。• %Lf：long double 类型浮点数。• %n：已输出的字符串数量。该占位符本身不输出，只将值存储在指定变量之中。• %o：八进制整数。• %p：指针。• %s：字符串。• %u：无符号整数（unsigned int）。• %x：十六进制整数。• %zd：size_t类型。• %%：输出一个百分号。\n\n输出格式printf()可以定制占位符的输出格式\n（1）限定宽度printf允许限定占位符的最小宽度。\nprintf(&quot;%5d\\n&quot;, 123); &#x2F;&#x2F; 输出为 &quot;  123&quot;\n\n在上面的示例中，%5d表示这个占位符的宽度最少是5位，如果不满的话，对应的值也就是123会添加空格补齐。输出的值默认是右对齐，如果希望改成左对齐，需要在占位符%的后面家一个-号。printf(“%-5d\\n”, 123); &#x2F;&#x2F; 输出为 “123  “上边的示例中，输出内容123后边会加两个空格，因为他是左对齐。如果你输出的是小数的话，这个字符会限制所有数字的最小显示宽度。\n&#x2F;&#x2F; 输出 &quot;  123.450000&quot;\nprintf(&quot;%12f\\n&quot;, 123.45);\n\n上面示例中，%12f表示输出的浮点数最少要占据12位。由于小数的默认显示精度是小数点后6位，所以123.45输出结果的头部会添加2个空格。\n（2）总是显示正负号默认情况下，printf()正数不显示+号，只对负数显示-号。如果想让正数也&#96;&#96;&#96;输出+号，可以在占位符的%后面加一个+。\nprintf(&quot;%+d\\n&quot;, 12); &#x2F;&#x2F; 输出 +12\nprintf(&quot;%+d\\n&quot;, -12); &#x2F;&#x2F; 输出 -12\n\n上面示例中，%+d可以确保输出的数值总是带有正负号。\n（3）限定小数位数输出小数时，有时希望限定小数的位数。举例来说，希望小数点后面只保留两位，占位符可以写成%.2f。\n&#x2F;&#x2F; 输出 Number is 0.50\nprintf(&quot;Number is %.2f\\n&quot;, 0.5);\n\n上面示例中，如果希望小数点后面输出3位（0.500），占位符就要写成%.3f。\n（4）输出部分字符串%s占位符用来输出字符串，默认是全部输出。如果只想输出开头的部分，可以用%.[m]s指定输出的长度，其中[m]代表一个数字，表示所要输出的长度。\n&#x2F;&#x2F; 输出 hello\nprintf(&quot;%.5s\\n&quot;, &quot;hello world&quot;);\n\n上面示例中，占位符%.5s表示只输出字符串“hello world”的前5个字符，即“hello”。\n\n标准库、头文件在C程序的编写过程中，有些功能不一定非要自己写，C语言本身已经自带了不少了，我们只要直接调用就好了。比如最常用到的printf()这个函数就是C语言自带的。C语言自带的所有这些功能，都统称为“标准库”，因为他们是写入标准的，都是被规定好的。这样保证了代码的规范性和可移植性。不同的功能定义在不同的文件里，这些文件被叫做“头文件”。如果系统自带某一个功能，就一定还会带描述这个功能的头文件，比如printf()的头文件就是系统自带的stdio.h头文件的后缀一般为.h如果要使用某个功能，就必须要先加载对应的头文件，加载使用的命令是#include。这就是我们为什么要在使用printf()之前，必须先要加载stdio.h的原因了。\n","slug":"C语言笔记（2）基本语法","date":"2023-04-24T17:03:13.000Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"},{"id":"596ed8bc483adeb0e4a91c39be8a337d","title":"C语言笔记---（1）初识C语言","content":"本文用于记录博主在学习过程中的笔记摘录以及心得体会，欢迎各位大神评论留言补充不足之处。\n一、C语言的历史1972年，贝尔实验室，1972年，丹尼斯·里奇和布莱恩·柯林汉（Brian Kernighan）在B语言的基础上重新设计了一种新语言，这种新语言取代了B语言，所以称为C语言。1973年，C语言主题完成于是完全重写了Unix系统，随着Unix系统被不断完善，C语言也被不断地完善着。在开发过程中，为了让Unix系统在别的类型计算机上也可以使用，于是C语言的可移植性由此而出。C语言的源代码可以在任意架构的处理器上使用。\n二、C语言的特点1、语言简洁灵活C语言是现有程序设计语言中规模最小的语言之一，C语言的关键字仅仅只有32个，控制语句也只有9个。压缩删减了不必要的一些成分。C语言的书写形式比较自由，表达方法简洁，使用一些简单的方法就可以构造出相当复杂的数据类型和程序结构。\n2、可移植性高在上面就有提到过，C语言的源代码可以在任意架构的处理器上使用。只要那种架构的处理器具有对应的C语言编译器和库，然后将C源代码编译、连接成目标二进制文件之后即可在哪种架构的处理器运行。\n3、丰富的数据类型数据类型丰富。C语言提供的数据类型包括：整型、浮点型、数组类型、指针类型、等，C99又扩充了复数浮点类型、超长整型（long long）和布尔类型（bool）等。可以用来实现各种复杂的数据结构的运算。\n4、运算符丰富C语言的运算符包含的范围非常广泛，一共有34种运算符。C语言把括号、赋值和强制类型转换等都作为运算符处理，使C程序的表达式类型和运算符类型都非常丰富，表达式类型多样化。灵活使用各种运算符可以实现在其他高级语言中难以实现的运算。\n5、具有结构化的控机语句如for语句、if…else语句和switch语句等。可以用于实现函数的逻辑控制，方便面向过程的程序设计。 用函数作为程序的模块单位，便于实现程序的模块化。C语言是完全模块化和结构化的语言。C语言对于输入和输出的处理也是通过函数调用来实现的。程序员可以自定义编制自己需要的函数库进行调用，实际上C语言程序就是由许多个函数组成的，一个函数即相当于一个程序模块，因此C语言可以很容易地进行结构化程序设计。\n6、可以对物理地址直接进行操作因为可以对物理地址进行直接操作，所以他可以实现汇编语言的大部分功能，可以直接对硬件进行操作，C语言能够直接操作硬件、管理内存、跟操作系统对话。\n7、生成代码的高质量，执行程序效率高C原来是专门为编写系统软件而设计的，许多大的软件都用C语言编写，这是因为C语言的可移植性好和硬件控制能力高，表达和运算能力强。许多以前只能用汇编语言处理的问题后来可以改用C语言来处理了。目前C的主要用途之一是编写“嵌入式系统系统程序”。由于具有上述优点，使C语言应用面十分广泛，许多应用软件也用C语言编写。\n\n三、C语言的版本在C语言的发展史上，有过许多不同的版本。\n1、K&amp;R C1978年，丹尼斯·里奇(Dennis Ritchie)和布莱恩·科尔尼干(Brian Kernighan)出版了一本书，名叫《The C Programming Language》（中文译名为《C程序设计语言》）。这本书被C语言开发者们称为“K&amp;R”，很多年来被当作C语言的非正式的标准说明。人们称这个版本的C语言为“K&amp;R C”。\n2、ANSI C和ISO C为统一C语言版本，1983年美国国家标准局（American National Standards Institute，简称ANSI）成立了一个委员会，来制定C语言标准。1989年C语言标准被批准，被称为ANSI X3.159-1989 Programming Language C。这个版本的C语言标准通常被称为ANSI C。又由于这个版本是89年完成制定的，因此也被称为C89。后来 ANSI 把这个标准提交到 ISO（国际化标准组织），1990年被 ISO 采纳为国际标准，称为ISO C。又因为这个版本是1990年发布的，因此也被称为C90。ANSI C(C89)与ISO C(C90)内容基本相同，主要是格式组织不一样。因为 ANSI 与 ISO 的C标准内容基本相同，所以对于C标准，可以称为ANSI C，也可以说是ISO C，或者 ANSI &#x2F; ISO C。ANSI C、ISO C、C89、C90，这些标准的内容都是一样的。\nC99C 语言标准的第一次大型修订，发生在1999年，增加了许多语言特性，比如双斜杠（&#x2F;&#x2F;）的注释语法,这个版本称为 C99.\nC112011年，标准化组织再一次对 C 语言进行修订，增加了 Unicode 和多线程的支持。这个版本称为 C11。\nC17C11 标准在2017年进行了修补，但发布是在2018年。新版本只是解决了 C11 的一些缺陷，没有引入任何新功能。这个版本称为 C17。\n四、应用范围：\n编译器，JVM，驱动\n操作系统内核\n各类软件开发\n嵌入式设备开发，例：手机\n等等等\n\n\nC语言的编译C语言是一种编译型语言，源码都是文本文件，本身无法执行。必须通过编译器，生成二进制的可执行文件，才能执行。编译器将代码从文本翻译成二进制指令的过程，就称为编译阶段，又称为“编译时”（compile time），跟运行阶段（又称为“运行时”）相区分。目前最常见的C语言编译器是自由软件基金会推出的GCC编译器，它可以免费使用。Linux 和 Mac 系统可以直接安装 GCC，Windows 系统可以安装 MinGW。配置别的编辑器可以，博主使用的是vscode编辑器，全称（visual studio code）如果不会配置可以看另一篇文章vscode配置C语言环境\n如果你没有电脑的话可以使用下面几款在线编译网页\n\n菜鸟教程\nCodingGround\nOnlineGDB\n\n\nC语言代码示例Hello World.cC语言的源代码文件都是以.c结尾c++为.cpp结尾。源文件就是一段纯文本文件，他的后缀.c等只是为了帮助程序员与编译器更加容易识别，它并不会改变文本文件的内部格式。例如：你创建一个hello world.txt编辑内容为\n#include &lt;stdio.h&gt;\n\nint main(void) &#123;\n  printf(&quot;Hello World\\n&quot;);\n  return 0;\n&#125;\n\n\n\n之后你再用记事本类型软件打开时，它依然是里边的内容不会被改变。编译器依然可以识别其中的代码，并进行编译生成可执行文件。\n","slug":"C语言笔记（1）初识C语言","date":"2023-04-24T15:08:35.000Z","categories_index":"Note,c语言","tags_index":"Note,c语言","author_index":"小北"}]